cd /tmp/DynaMoth_Bug_dot_jar_Commons-Math_e2dc384d;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
17:47:54.332 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
17:47:54.342 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_e2dc384d/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_e2dc384d/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
17:47:54.342 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
17:47:54.342 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.spherical.oned.ArcTest, org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math3.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math3.geometry.spherical.oned.S1PointTest, org.apache.commons.math3.geometry.spherical.oned.Sphere1Test, org.apache.commons.math3.geometry.spherical.twod.CircleTest, org.apache.commons.math3.geometry.spherical.twod.S2PointTest, org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math3.geometry.spherical.twod.SubCircleTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ml.neuralnet.MapUtilsTest, org.apache.commons.math3.ml.neuralnet.NetworkTest, org.apache.commons.math3.ml.neuralnet.NeuronTest, org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math3.stat.interval.IntervalUtilsTest, org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest]
17:47:54.345 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.spherical.oned.ArcTest, org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math3.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math3.geometry.spherical.oned.S1PointTest, org.apache.commons.math3.geometry.spherical.oned.Sphere1Test, org.apache.commons.math3.geometry.spherical.twod.CircleTest, org.apache.commons.math3.geometry.spherical.twod.S2PointTest, org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math3.geometry.spherical.twod.SubCircleTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ml.neuralnet.MapUtilsTest, org.apache.commons.math3.ml.neuralnet.NetworkTest, org.apache.commons.math3.ml.neuralnet.NeuronTest, org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math3.stat.interval.IntervalUtilsTest, org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
17:47:54.346 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
17:47:54.352 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 391 MB
17:47:54.353 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
17:47:54.353 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
17:47:54.353 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
17:47:54.354 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
17:47:54.354 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
17:54:12.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
17:54:12.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.OptimumImpl:61 which is executed by 5 tests
-253530480
17:54:13.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
17:54:13.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:142 which is executed by 8 tests
-786828785
17:54:13.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
17:54:13.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:342 which is executed by 10 tests
-207728720
17:54:13.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:13.879 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (29 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:14.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
17:54:14.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:341 which is executed by 10 tests
-207728720
17:54:14.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:14.914 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:15.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:15.251 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (30 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:15.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
17:54:15.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:340 which is executed by 10 tests
-207728720
17:54:15.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:15.677 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:15.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
17:54:15.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:339 which is executed by 10 tests
-207728720
17:54:16.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:16.192 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:16.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:16.442 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:16.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
17:54:16.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:509 which is executed by 15 tests
-331094095
17:54:16.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: loader (instance of sun/misc/Launcher$AppClassLoader) previously initiated loading for a different type with name "org/hamcrest/Matcher"
    at java.lang.ClassLoader.defineClass1(Native Method)
    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
java.lang.LinkageError: org/hamcrest/Matcher
    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
17:54:17.042 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (203 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: loader (instance of sun/misc/Launcher$AppClassLoader) previously initiated loading for a different type with name "org/hamcrest/Matcher"]
java.lang.LinkageError: loader constraint violation: loader (instance of sun/misc/Launcher$AppClassLoader) previously initiated loading for a different type with name "org/hamcrest/Matcher"    at java.lang.ClassLoader.defineClass1(Native Method)
    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[org/hamcrest/Matcher]
java.lang.LinkageError: org/hamcrest/Matcher    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)

17:54:17.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
17:54:17.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:360 which is executed by 17 tests
-207728720
17:54:17.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
17:54:17.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:357 which is executed by 17 tests
-207728720
17:54:17.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
17:54:17.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:356 which is executed by 17 tests
-207728720
17:54:17.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:17.826 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:18.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
17:54:18.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:353 which is executed by 17 tests
-207728720
17:54:18.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
17:54:18.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:352 which is executed by 17 tests
-207728720
17:54:18.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:18.320 [pool-38-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:18.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
17:54:18.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:351 which is executed by 17 tests
-207728720
17:54:18.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
17:54:18.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:338 which is executed by 17 tests
-207728720
17:54:18.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:18.855 [pool-42-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:19.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:19.106 [pool-46-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:19.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
17:54:19.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:336 which is executed by 17 tests
-207728720
17:54:19.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:19.488 [pool-50-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:19.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
17:54:19.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:335 which is executed by 17 tests
-207728720
17:54:19.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:19.841 [pool-54-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:20.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:20.061 [pool-58-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:20.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
17:54:20.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:333 which is executed by 17 tests
-207728720
17:54:20.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:20.409 [pool-62-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:20.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
17:54:20.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:332 which is executed by 17 tests
-207728720
17:54:20.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:20.759 [pool-66-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:20.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:20.982 [pool-70-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:21.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
17:54:21.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:323 which is executed by 17 tests
-207728720
17:54:21.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:21.356 [pool-74-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:21.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:21.572 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:21.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
17:54:21.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:321 which is executed by 17 tests
-207728720
17:54:21.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:21.916 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:22.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
17:54:22.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:320 which is executed by 17 tests
-207728720
17:54:22.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:22.254 [pool-86-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:22.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:22.498 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:22.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
17:54:22.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:318 which is executed by 17 tests
-207728720
17:54:22.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:22.836 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:23.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
17:54:23.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:317 which is executed by 17 tests
-207728720
17:54:23.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:23.173 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:23.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:23.382 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:23.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
17:54:23.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:239 which is executed by 17 tests
-207728720
17:54:23.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:23.741 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:23.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
17:54:23.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:237 which is executed by 17 tests
-207728720
17:54:24.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:24.126 [pool-110-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:24.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
17:54:24.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:236 which is executed by 17 tests
-207728720
17:54:24.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:24.462 [pool-114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:24.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
17:54:24.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:235 which is executed by 17 tests
-207728720
17:54:24.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:24.799 [pool-118-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:24.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
17:54:24.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:234 which is executed by 17 tests
-207728720
17:54:25.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
17:54:25.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:233 which is executed by 17 tests
-207728720
17:54:25.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
17:54:25.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:232 which is executed by 17 tests
-207728720
17:54:25.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
17:54:25.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:183 which is executed by 17 tests
-207728720
17:54:25.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
17:54:25.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:69 which is executed by 25 tests
1157956927
17:54:25.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
17:54:25.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:68 which is executed by 25 tests
1157956927
17:54:25.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
17:54:25.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:393 which is executed by 25 tests
-786828785
17:54:25.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
17:54:25.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:304 which is executed by 25 tests
-786828785
17:54:26.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
17:54:26.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:301 which is executed by 25 tests
-786828785
17:54:26.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:26.151 [pool-122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:26.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:26.387 [pool-126-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:26.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
17:54:26.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:300 which is executed by 25 tests
-786828785
17:54:26.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
17:54:26.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:251 which is executed by 25 tests
-786828785
17:54:26.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
17:54:26.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:250 which is executed by 25 tests
-786828785
17:54:26.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:27.015 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:27.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
17:54:27.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:238 which is executed by 25 tests
-786828785
17:54:27.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
17:54:27.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:237 which is executed by 25 tests
-786828785
17:54:27.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:27.495 [pool-134-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:27.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
17:54:27.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:232 which is executed by 25 tests
-786828785
17:54:27.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:27.842 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:28.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:28.054 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:28.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
17:54:28.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:229 which is executed by 25 tests
-786828785
17:54:28.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:28.404 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:28.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:28.613 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:29.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
17:54:29.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:226 which is executed by 25 tests
-786828785
17:54:29.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
17:54:29.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:225 which is executed by 25 tests
-786828785
17:54:30.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
17:54:30.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:179 which is executed by 25 tests
-786828785
17:54:30.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
17:54:30.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:178 which is executed by 25 tests
-786828785
17:54:30.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:30.313 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:30.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
17:54:30.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:177 which is executed by 25 tests
-786828785
17:54:30.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:30.665 [pool-158-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:30.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
17:54:30.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:176 which is executed by 25 tests
-786828785
17:54:30.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
17:54:30.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:172 which is executed by 25 tests
-786828785
17:54:31.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:31.133 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:31.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:31.339 [pool-166-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:31.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
17:54:31.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:93 which is executed by 25 tests
1157956927
17:54:31.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
17:54:31.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:92 which is executed by 25 tests
1157956927
17:54:31.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:31.798 [pool-170-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (19 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:31.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
17:54:31.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:91 which is executed by 25 tests
1157956927
17:54:32.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
17:54:32.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2:111 which is executed by 25 tests
1157956927
17:54:32.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
17:54:32.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:108 which is executed by 27 tests
1157956927
17:54:32.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
17:54:32.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:85 which is executed by 27 tests
1157956927
17:54:32.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
17:54:32.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Neuron:70 which is executed by 27 tests
-1965019244
17:54:32.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
17:54:32.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.function.Constant:43 which is executed by 29 tests
-503167035
17:54:32.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
17:54:32.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.distribution.UniformRealDistribution:228 which is executed by 47 tests
-2021749513
17:54:32.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
17:54:32.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.distribution.UniformRealDistribution:227 which is executed by 47 tests
-2021749513
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$1:577 which is executed by 57 tests
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$1:577
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$2:585 which is executed by 57 tests
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$2:585
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:561 which is executed by 61 tests
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:561
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:597 which is executed by 57 tests
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:597
17:54:32.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:596 which is executed by 57 tests
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:596
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:595 which is executed by 57 tests
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:595
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:594 which is executed by 57 tests
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:594
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:593 which is executed by 57 tests
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:593
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:592 which is executed by 57 tests
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:592
17:54:32.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:591 which is executed by 57 tests
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:591
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:583 which is executed by 57 tests
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:583
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:575 which is executed by 57 tests
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem:575
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
17:54:32.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1013 which is executed by 58 tests
-331094095
17:54:33.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
17:54:33.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:662 which is executed by 61 tests
-331094095
17:54:33.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: org/hamcrest/Matcher
    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.LinkageError: org/hamcrest/Matcher
    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
17:54:33.465 [pool-174-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[org/hamcrest/Matcher]
java.lang.LinkageError: org/hamcrest/Matcher    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[org/hamcrest/Matcher]
java.lang.LinkageError: org/hamcrest/Matcher    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)

17:54:33.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
17:54:33.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:661 which is executed by 61 tests
-331094095
17:54:33.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:34.039 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:34.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
17:54:34.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData:556 which is executed by 372 tests
-331094095
17:54:34.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
17:54:34.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1042 which is executed by 62 tests
-331094095
17:54:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
17:54:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1039 which is executed by 62 tests
-331094095
17:54:34.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:34.866 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:35.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
17:54:35.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1038 which is executed by 62 tests
-331094095
17:54:35.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:35.399 [pool-192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:35.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
17:54:35.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1037 which is executed by 62 tests
-331094095
17:54:35.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:35.936 [pool-198-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:36.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
17:54:36.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1035 which is executed by 62 tests
-331094095
17:54:36.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:36.472 [pool-204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:36.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
17:54:36.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1034 which is executed by 62 tests
-331094095
17:54:36.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:37.012 [pool-210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:37.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
17:54:37.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1033 which is executed by 62 tests
-331094095
17:54:37.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
17:54:37.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1032 which is executed by 62 tests
-331094095
17:54:37.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
17:54:37.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1031 which is executed by 62 tests
-331094095
17:54:37.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:37.869 [pool-216-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:38.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
17:54:38.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1029 which is executed by 62 tests
-331094095
17:54:38.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
17:54:38.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1028 which is executed by 62 tests
-331094095
17:54:38.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
17:54:38.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1026 which is executed by 62 tests
-331094095
17:54:38.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
17:54:38.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1025 which is executed by 62 tests
-331094095
17:54:38.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
17:54:38.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1024 which is executed by 62 tests
-331094095
17:54:38.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
17:54:38.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:1001 which is executed by 62 tests
-331094095
17:54:38.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:39.122 [pool-222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:39.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
17:54:39.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:998 which is executed by 62 tests
-331094095
17:54:39.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:39.661 [pool-228-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:39.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
17:54:39.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:997 which is executed by 62 tests
-331094095
17:54:40.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:40.193 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:40.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
17:54:40.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:994 which is executed by 62 tests
-331094095
17:54:40.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:40.734 [pool-240-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:40.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
17:54:40.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:993 which is executed by 62 tests
-331094095
17:54:41.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
17:54:41.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:992 which is executed by 62 tests
-331094095
17:54:41.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
17:54:41.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:991 which is executed by 62 tests
-331094095
17:54:41.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
17:54:41.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:988 which is executed by 62 tests
-331094095
17:54:41.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:41.677 [pool-246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:41.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
17:54:41.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:987 which is executed by 62 tests
-331094095
17:54:42.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:42.216 [pool-252-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:42.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
17:54:42.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:986 which is executed by 62 tests
-331094095
17:54:42.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
17:54:42.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:983 which is executed by 62 tests
-331094095
17:54:42.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:42.913 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:43.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:43.297 [pool-264-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (139 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:43.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
17:54:43.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:980 which is executed by 62 tests
-331094095
17:54:43.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:43.828 [pool-270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:44.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
17:54:44.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:979 which is executed by 62 tests
-331094095
17:54:44.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:44.376 [pool-276-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:44.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
17:54:44.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:978 which is executed by 62 tests
-331094095
17:54:44.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:44.907 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:45.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:45.299 [pool-288-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:45.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
17:54:45.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:974 which is executed by 62 tests
-331094095
17:54:45.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:45.829 [pool-294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:46.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:46.217 [pool-300-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:46.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
17:54:46.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:972 which is executed by 62 tests
-331094095
17:54:46.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:46.761 [pool-306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:47.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
17:54:47.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:971 which is executed by 62 tests
-331094095
17:54:47.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
17:54:47.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:970 which is executed by 62 tests
-331094095
17:54:47.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:47.488 [pool-312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:47.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
17:54:47.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:969 which is executed by 62 tests
-331094095
17:54:48.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
17:54:48.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:968 which is executed by 62 tests
-331094095
17:54:48.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:48.406 [pool-318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:48.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
17:54:48.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:967 which is executed by 62 tests
-331094095
17:54:48.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
17:54:48.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:966 which is executed by 62 tests
-331094095
17:54:48.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
17:54:48.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:963 which is executed by 62 tests
-331094095
17:54:49.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:49.210 [pool-324-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:49.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
17:54:49.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:959 which is executed by 62 tests
-331094095
17:54:49.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:49.741 [pool-330-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:49.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
17:54:49.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:957 which is executed by 62 tests
-331094095
17:54:50.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:50.261 [pool-336-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (139 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:50.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
17:54:50.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:956 which is executed by 62 tests
-331094095
17:54:50.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
17:54:50.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:955 which is executed by 62 tests
-331094095
17:54:50.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:50.929 [pool-342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:51.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
17:54:51.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:954 which is executed by 62 tests
-331094095
17:54:51.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
17:54:51.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:953 which is executed by 62 tests
-331094095
17:54:51.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:51.588 [pool-348-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:51.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
17:54:51.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:952 which is executed by 62 tests
-331094095
17:54:51.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:52.101 [pool-354-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:52.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
17:54:52.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:949 which is executed by 62 tests
-331094095
17:54:52.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
17:54:52.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:948 which is executed by 62 tests
-331094095
17:54:52.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
17:54:52.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:947 which is executed by 62 tests
-331094095
17:54:52.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
17:54:52.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:946 which is executed by 62 tests
-331094095
17:54:52.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
17:54:52.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:944 which is executed by 62 tests
-331094095
17:54:53.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
17:54:53.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:943 which is executed by 62 tests
-331094095
17:54:53.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
17:54:53.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:941 which is executed by 62 tests
-331094095
17:54:53.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
17:54:53.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:660 which is executed by 62 tests
-331094095
17:54:53.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:53.559 [pool-360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (139 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:53.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:53.953 [pool-366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:54.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
17:54:54.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:659 which is executed by 62 tests
-331094095
17:54:54.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
17:54:54.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:658 which is executed by 62 tests
-331094095
17:54:54.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:54.610 [pool-372-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:54.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
17:54:54.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:656 which is executed by 62 tests
-331094095
17:54:54.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:55.130 [pool-378-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:55.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
17:54:55.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:655 which is executed by 62 tests
-331094095
17:54:55.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:55.650 [pool-384-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:55.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
17:54:55.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:654 which is executed by 62 tests
-331094095
17:54:56.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
17:54:56.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:653 which is executed by 62 tests
-331094095
17:54:56.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
17:54:56.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:652 which is executed by 62 tests
-331094095
17:54:56.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:56.433 [pool-390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:56.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
17:54:56.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:651 which is executed by 62 tests
-331094095
17:54:56.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
17:54:56.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:646 which is executed by 62 tests
-331094095
17:54:56.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:57.096 [pool-396-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:57.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
17:54:57.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:643 which is executed by 62 tests
-331094095
17:54:57.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:57.608 [pool-402-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:57.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
17:54:57.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:642 which is executed by 62 tests
-331094095
17:54:57.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
17:54:57.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:641 which is executed by 62 tests
-331094095
17:54:58.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
17:54:58.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:640 which is executed by 62 tests
-331094095
17:54:58.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:58.381 [pool-408-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:58.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
17:54:58.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:637 which is executed by 62 tests
-331094095
17:54:58.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:58.899 [pool-414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:59.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
17:54:59.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:635 which is executed by 62 tests
-331094095
17:54:59.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:59.417 [pool-420-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:54:59.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
17:54:59.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:634 which is executed by 62 tests
-331094095
17:54:59.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:54:59.936 [pool-426-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:00.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
17:55:00.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:630 which is executed by 62 tests
-331094095
17:55:00.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
17:55:00.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:628 which is executed by 62 tests
-331094095
17:55:00.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
17:55:00.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:627 which is executed by 62 tests
-331094095
17:55:00.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
17:55:00.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:626 which is executed by 62 tests
-331094095
17:55:00.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
17:55:00.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:625 which is executed by 62 tests
-331094095
17:55:00.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
17:55:00.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:508 which is executed by 62 tests
-331094095
17:55:00.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:01.106 [pool-432-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:01.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:01.491 [pool-438-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:01.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
17:55:01.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:505 which is executed by 62 tests
-331094095
17:55:01.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:02.050 [pool-444-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:02.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
17:55:02.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:503 which is executed by 62 tests
-331094095
17:55:02.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:02.576 [pool-450-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:02.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
17:55:02.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:502 which is executed by 62 tests
-331094095
17:55:02.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
17:55:02.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:501 which is executed by 62 tests
-331094095
17:55:03.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:03.221 [pool-456-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:03.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
17:55:03.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:500 which is executed by 62 tests
-331094095
17:55:03.586 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:03.743 [pool-462-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:03.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
17:55:03.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:499 which is executed by 62 tests
-331094095
17:55:04.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:04.261 [pool-468-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:04.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
17:55:04.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:497 which is executed by 62 tests
-331094095
17:55:04.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:04.783 [pool-474-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:05.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:05.170 [pool-480-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:05.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
17:55:05.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:493 which is executed by 62 tests
-331094095
17:55:05.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:05.705 [pool-486-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:05.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
17:55:05.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:492 which is executed by 62 tests
-331094095
17:55:06.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:06.230 [pool-492-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:06.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
17:55:06.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:483 which is executed by 62 tests
-331094095
17:55:06.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:06.779 [pool-498-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:07.011 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:07.174 [pool-504-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:07.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
17:55:07.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:480 which is executed by 62 tests
-331094095
17:55:07.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:07.702 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:07.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
17:55:07.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:477 which is executed by 62 tests
-331094095
17:55:08.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
17:55:08.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:476 which is executed by 62 tests
-331094095
17:55:08.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
17:55:08.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:475 which is executed by 62 tests
-331094095
17:55:08.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
17:55:08.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:474 which is executed by 62 tests
-331094095
17:55:08.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:08.628 [pool-516-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:08.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
17:55:08.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:473 which is executed by 62 tests
-331094095
17:55:08.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
17:55:08.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:471 which is executed by 62 tests
-331094095
17:55:09.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:09.284 [pool-522-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:09.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
17:55:09.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:470 which is executed by 62 tests
-331094095
17:55:09.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:09.812 [pool-528-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:10.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
17:55:10.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:469 which is executed by 62 tests
-331094095
17:55:10.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
17:55:10.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:466 which is executed by 62 tests
-331094095
17:55:10.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:10.471 [pool-534-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (157 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:10.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
17:55:10.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:465 which is executed by 62 tests
-331094095
17:55:10.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:10.999 [pool-540-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:11.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
17:55:11.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:464 which is executed by 62 tests
-331094095
17:55:11.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:11.549 [pool-546-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:11.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
17:55:11.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:463 which is executed by 62 tests
-331094095
17:55:11.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
17:55:11.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:462 which is executed by 62 tests
-331094095
17:55:12.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
17:55:12.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:461 which is executed by 62 tests
-331094095
17:55:12.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:12.587 [pool-552-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (404 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:12.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
17:55:12.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:456 which is executed by 62 tests
-331094095
17:55:12.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:13.122 [pool-558-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:13.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
17:55:13.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:455 which is executed by 62 tests
-331094095
17:55:13.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
17:55:13.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:454 which is executed by 62 tests
-331094095
17:55:13.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:13.804 [pool-564-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:14.052 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:14.206 [pool-570-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:14.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
17:55:14.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:453 which is executed by 62 tests
-331094095
17:55:14.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
17:55:14.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:450 which is executed by 62 tests
-331094095
17:55:14.714 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:14.858 [pool-576-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (136 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:15.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
17:55:15.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:449 which is executed by 62 tests
-331094095
17:55:15.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:15.363 [pool-582-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:15.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
17:55:15.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:448 which is executed by 62 tests
-331094095
17:55:15.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:15.868 [pool-588-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:16.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
17:55:16.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:447 which is executed by 62 tests
-331094095
17:55:16.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:16.377 [pool-594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:16.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
17:55:16.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:443 which is executed by 62 tests
-331094095
17:55:16.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:16.890 [pool-600-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:17.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
17:55:17.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:442 which is executed by 62 tests
-331094095
17:55:17.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:17.413 [pool-606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:17.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:17.799 [pool-612-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:18.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
17:55:18.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:440 which is executed by 62 tests
-331094095
17:55:18.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:18.320 [pool-618-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:18.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
17:55:18.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:438 which is executed by 62 tests
-331094095
17:55:18.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:18.826 [pool-624-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:19.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
17:55:19.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:437 which is executed by 62 tests
-331094095
17:55:19.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
17:55:19.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:436 which is executed by 62 tests
-331094095
17:55:19.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:19.469 [pool-630-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:19.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
17:55:19.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:435 which is executed by 62 tests
-331094095
17:55:19.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:19.982 [pool-636-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:20.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
17:55:20.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:434 which is executed by 62 tests
-331094095
17:55:20.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
17:55:20.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:433 which is executed by 62 tests
-331094095
17:55:20.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:20.630 [pool-642-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:20.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
17:55:20.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:432 which is executed by 62 tests
-331094095
17:55:20.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
17:55:20.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:427 which is executed by 62 tests
-331094095
17:55:21.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:21.274 [pool-648-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:21.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
17:55:21.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:424 which is executed by 62 tests
-331094095
17:55:21.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:21.790 [pool-654-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:22.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
17:55:22.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:423 which is executed by 62 tests
-331094095
17:55:22.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:22.329 [pool-660-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:22.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
17:55:22.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:422 which is executed by 62 tests
-331094095
17:55:22.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
17:55:22.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:421 which is executed by 62 tests
-331094095
17:55:22.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
17:55:22.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:419 which is executed by 62 tests
-331094095
17:55:22.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:23.101 [pool-666-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:23.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
17:55:23.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:418 which is executed by 62 tests
-331094095
17:55:23.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
17:55:23.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:417 which is executed by 62 tests
-331094095
17:55:23.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:23.749 [pool-672-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (149 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:23.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
17:55:23.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:414 which is executed by 62 tests
-331094095
17:55:24.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:24.271 [pool-678-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (150 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:24.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
17:55:24.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:410 which is executed by 62 tests
-331094095
17:55:24.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:24.808 [pool-684-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:25.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
17:55:25.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:409 which is executed by 62 tests
-331094095
17:55:25.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:25.334 [pool-690-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:25.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
17:55:25.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:400 which is executed by 62 tests
-331094095
17:55:25.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:25.866 [pool-696-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:26.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:26.256 [pool-702-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:26.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
17:55:26.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:396 which is executed by 62 tests
-331094095
17:55:26.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:26.801 [pool-708-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:27.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
17:55:27.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:394 which is executed by 62 tests
-331094095
17:55:27.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:27.331 [pool-714-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:27.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
17:55:27.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:393 which is executed by 62 tests
-331094095
17:55:27.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:27.860 [pool-720-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:28.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
17:55:28.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:392 which is executed by 62 tests
-331094095
17:55:28.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
17:55:28.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:391 which is executed by 62 tests
-331094095
17:55:28.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:28.513 [pool-726-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:28.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:28.910 [pool-732-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:29.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
17:55:29.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:390 which is executed by 62 tests
-331094095
17:55:29.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
17:55:29.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:389 which is executed by 62 tests
-331094095
17:55:29.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
17:55:29.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:388 which is executed by 62 tests
-331094095
17:55:29.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:29.695 [pool-738-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (157 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:29.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
17:55:29.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:387 which is executed by 62 tests
-331094095
17:55:30.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:30.225 [pool-744-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (160 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:30.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:30.626 [pool-750-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:30.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
17:55:30.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:386 which is executed by 62 tests
-331094095
17:55:30.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
17:55:30.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:382 which is executed by 62 tests
-331094095
17:55:31.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:31.288 [pool-756-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (159 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:31.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
17:55:31.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:379 which is executed by 62 tests
-331094095
17:55:31.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:31.831 [pool-762-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:32.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
17:55:32.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:377 which is executed by 62 tests
-331094095
17:55:32.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:32.352 [pool-768-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:32.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
17:55:32.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:376 which is executed by 62 tests
-331094095
17:55:32.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:32.879 [pool-774-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (160 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:33.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
17:55:33.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:375 which is executed by 62 tests
-331094095
17:55:33.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
17:55:33.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:372 which is executed by 62 tests
-331094095
17:55:33.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:33.537 [pool-780-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (159 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:33.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:33.935 [pool-786-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (157 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:34.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
17:55:34.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:371 which is executed by 62 tests
-331094095
17:55:34.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
17:55:34.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:370 which is executed by 62 tests
-331094095
17:55:34.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:34.589 [pool-792-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:34.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
17:55:34.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:369 which is executed by 62 tests
-331094095
17:55:34.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:35.122 [pool-798-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (163 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:35.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
17:55:35.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:366 which is executed by 62 tests
-331094095
17:55:35.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:35.649 [pool-804-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:35.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:36.070 [pool-810-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (178 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:36.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
17:55:36.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:363 which is executed by 62 tests
-331094095
17:55:36.431 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:36.626 [pool-816-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (187 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:36.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
17:55:36.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:362 which is executed by 62 tests
-331094095
17:55:36.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
17:55:36.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:361 which is executed by 62 tests
-331094095
17:55:37.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:37.283 [pool-822-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:37.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
17:55:37.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:357 which is executed by 62 tests
-331094095
17:55:37.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:37.819 [pool-828-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (169 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:38.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
17:55:38.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:353 which is executed by 62 tests
-331094095
17:55:38.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:38.356 [pool-834-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (168 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:38.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
17:55:38.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:352 which is executed by 62 tests
-331094095
17:55:38.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:38.892 [pool-840-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (166 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:39.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
17:55:39.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:351 which is executed by 62 tests
-331094095
17:55:39.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
17:55:39.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:348 which is executed by 62 tests
-331094095
17:55:39.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
17:55:39.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:347 which is executed by 62 tests
-331094095
17:55:39.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
17:55:39.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:346 which is executed by 62 tests
-331094095
17:55:39.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
17:55:39.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:345 which is executed by 62 tests
-331094095
17:55:39.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
17:55:39.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:344 which is executed by 62 tests
-331094095
17:55:39.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
17:55:39.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:343 which is executed by 62 tests
-331094095
17:55:40.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
17:55:40.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:340 which is executed by 62 tests
-331094095
17:55:40.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
17:55:40.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:338 which is executed by 62 tests
-331094095
17:55:40.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:40.464 [pool-846-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:40.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
17:55:40.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:336 which is executed by 62 tests
-331094095
17:55:40.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
17:55:40.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:333 which is executed by 62 tests
-331094095
17:55:40.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
17:55:40.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:332 which is executed by 62 tests
-331094095
17:55:41.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
17:55:41.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:331 which is executed by 62 tests
-331094095
17:55:41.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
17:55:41.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:329 which is executed by 62 tests
-331094095
17:55:41.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:41.548 [pool-852-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (163 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:41.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
17:55:41.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:325 which is executed by 62 tests
-331094095
17:55:41.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
17:55:41.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:324 which is executed by 62 tests
-331094095
17:55:42.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
17:55:42.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:323 which is executed by 62 tests
-331094095
17:55:42.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
17:55:42.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:322 which is executed by 62 tests
-331094095
17:55:42.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
17:55:42.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:321 which is executed by 62 tests
-331094095
17:55:42.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
17:55:42.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:320 which is executed by 62 tests
-331094095
17:55:42.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
17:55:42.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:319 which is executed by 62 tests
-331094095
17:55:42.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
17:55:42.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:318 which is executed by 62 tests
-331094095
17:55:42.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
17:55:42.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:317 which is executed by 62 tests
-331094095
17:55:42.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
17:55:42.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:314 which is executed by 62 tests
-331094095
17:55:43.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
17:55:43.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:312 which is executed by 62 tests
-331094095
17:55:43.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
17:55:43.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:310 which is executed by 62 tests
-331094095
17:55:43.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
17:55:43.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:307 which is executed by 62 tests
-331094095
17:55:43.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
17:55:43.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:306 which is executed by 62 tests
-331094095
17:55:43.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
17:55:43.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:304 which is executed by 62 tests
-331094095
17:55:43.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
17:55:43.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:303 which is executed by 62 tests
-331094095
17:55:43.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
17:55:43.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:301 which is executed by 62 tests
-331094095
17:55:43.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
17:55:43.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:300 which is executed by 62 tests
-331094095
17:55:44.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
17:55:44.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:299 which is executed by 62 tests
-331094095
17:55:44.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
17:55:44.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:55 which is executed by 64 tests
-1165343197
17:55:44.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
17:55:44.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:50 which is executed by 64 tests
-1165343197
17:55:44.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
17:55:44.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:319 which is executed by 64 tests
-1106717730
17:55:44.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
17:55:44.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:314 which is executed by 64 tests
-1106717730
17:55:44.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
17:55:44.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:104 which is executed by 87 tests
216109679
17:55:44.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
17:55:44.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:92 which is executed by 87 tests
216109679
17:55:44.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
17:55:44.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:91 which is executed by 87 tests
216109679
17:55:45.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
17:55:45.277 [pool-858-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (172 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:65 which is executed by 87 tests
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:65
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:64 which is executed by 87 tests
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:64
17:55:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:63 which is executed by 87 tests
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:63
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:62 which is executed by 87 tests
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:62
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
17:55:45.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:211 which is executed by 87 tests
-1106717730
17:55:45.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
17:55:45.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:85 which is executed by 103 tests
-440447713
17:55:45.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
17:55:45.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:84 which is executed by 103 tests
-440447713
17:55:45.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
17:55:45.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 111 tests
1648821820
17:55:45.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
17:55:45.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 111 tests
1648821820
17:55:46.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:55:55.926 [pool-864-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9822 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:55:56.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
17:55:56.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 112 tests
1648821820
17:55:56.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
17:55:56.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 112 tests
1648821820
17:55:56.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:06.729 [pool-868-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10204 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:07.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
17:56:07.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 112 tests
1648821820
17:56:07.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:17.012 [pool-872-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9818 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:17.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
17:56:17.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 112 tests
1648821820
17:56:17.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:27.298 [pool-876-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9802 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:27.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
17:56:27.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 112 tests
1648821820
17:56:27.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:37.517 [pool-880-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9760 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:37.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
17:56:37.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 112 tests
1648821820
17:56:37.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:47.733 [pool-884-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9755 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:48.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:56:57.855 [pool-888-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9765 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:56:58.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
17:56:58.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 112 tests
1648821820
17:56:58.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:08.072 [pool-892-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9741 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:57:08.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
17:57:08.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 112 tests
1648821820
17:57:08.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:18.354 [pool-896-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9792 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:57:18.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
17:57:18.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 112 tests
1648821820
17:57:18.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
17:57:18.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 112 tests
1648821820
17:57:18.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
17:57:18.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 112 tests
1648821820
17:57:19.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
17:57:19.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 112 tests
1648821820
17:57:19.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:28.962 [pool-900-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9782 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:57:29.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
17:57:29.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 112 tests
1648821820
17:57:29.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:39.246 [pool-904-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9797 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:57:39.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
17:57:39.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 112 tests
1648821820
17:57:39.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:49.534 [pool-908-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9826 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:57:49.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:57:59.708 [pool-912-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9830 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:00.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
17:58:00.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 112 tests
1648821820
17:58:00.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:58:09.906 [pool-916-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9740 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:10.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
17:58:10.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 112 tests
1648821820
17:58:10.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:58:20.189 [pool-920-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9810 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:20.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
17:58:20.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 112 tests
1648821820
17:58:20.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:58:30.373 [pool-924-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9725 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:30.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:58:40.455 [pool-928-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9742 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:40.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
17:58:40.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 112 tests
1648821820
17:58:40.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:58:50.660 [pool-932-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9751 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:58:50.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
17:58:50.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 112 tests
1648821820
17:58:51.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:59:00.895 [pool-936-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9788 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:59:01.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
17:59:01.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 112 tests
1648821820
17:59:01.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
17:59:01.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 112 tests
1648821820
17:59:01.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
17:59:01.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 112 tests
1648821820
17:59:01.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
17:59:01.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 112 tests
1648821820
17:59:01.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:59:11.489 [pool-940-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9775 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:59:11.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
17:59:11.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 112 tests
1648821820
17:59:11.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
17:59:11.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 112 tests
1648821820
17:59:12.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
17:59:12.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 112 tests
1648821820
17:59:12.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:59:21.917 [pool-944-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9717 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:59:22.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
17:59:22.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 112 tests
1648821820
17:59:22.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:59:32.209 [pool-948-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9817 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:59:32.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
17:59:42.363 [pool-952-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9786 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
17:59:42.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
17:59:42.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1290 which is executed by 118 tests
153582413
17:59:42.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: org/hamcrest/Matcher
    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.LinkageError: org/hamcrest/Matcher
    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
17:59:43.001 [pool-956-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (136 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[org/hamcrest/Matcher]
java.lang.LinkageError: org/hamcrest/Matcher    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[org/hamcrest/Matcher]
java.lang.LinkageError: org/hamcrest/Matcher    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)
    at org.junit.Assert.assertThat(Assert.java:865)
    at org.junit.Assert.assertThat(Assert.java:832)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)

18:02:11.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
18:02:11.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:76 which is executed by 125 tests
-1165343197
18:02:12.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
18:02:12.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:71 which is executed by 125 tests
-1165343197
18:02:12.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
18:02:12.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:66 which is executed by 125 tests
-1165343197
18:02:12.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
18:02:12.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:81 which is executed by 125 tests
216109679
18:02:12.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
18:02:12.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:80 which is executed by 125 tests
216109679
18:02:12.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:12.703 [pool-962-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:12.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
18:02:12.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:70 which is executed by 125 tests
216109679
18:02:13.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
18:02:13.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:69 which is executed by 125 tests
216109679
18:02:13.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:13.280 [pool-968-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:13.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
18:02:13.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.AbstractOptimizationProblem:74 which is executed by 125 tests
-1749549871
18:02:13.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
18:02:13.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.AbstractOptimizationProblem:69 which is executed by 125 tests
-1749549871
18:02:13.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
18:02:13.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.AbstractOptimizationProblem:64 which is executed by 125 tests
-1749549871
18:02:13.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
18:02:13.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:116 which is executed by 127 tests
216109679
18:02:13.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
18:02:13.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4:269 which is executed by 127 tests
-1106717730
18:02:14.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
18:02:14.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4:268 which is executed by 127 tests
-1106717730
18:02:14.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
18:02:14.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4:267 which is executed by 127 tests
-1106717730
18:02:14.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
18:02:14.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$4:265 which is executed by 127 tests
-1106717730
18:02:14.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
18:02:14.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:262 which is executed by 127 tests
-1106717730
18:02:14.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
18:02:14.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:45 which is executed by 128 tests
-1165343197
18:02:14.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
18:02:14.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:324 which is executed by 128 tests
-1106717730
18:02:14.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
18:02:14.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation:373 which is executed by 130 tests
-1106717730
18:02:15.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
18:02:15.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:54 which is executed by 130 tests
1647030547
18:02:15.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
18:02:15.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:169 which is executed by 131 tests
216109679
18:02:15.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
18:02:15.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:159 which is executed by 131 tests
216109679
18:02:15.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
18:02:15.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:158 which is executed by 131 tests
216109679
18:02:15.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:15.744 [pool-974-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (150 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:15.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
18:02:15.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation:383 which is executed by 131 tests
-1106717730
18:02:16.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
18:02:16.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:59 which is executed by 131 tests
1647030547
18:02:16.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
18:02:16.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:148 which is executed by 132 tests
216109679
18:02:16.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
18:02:16.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:243 which is executed by 132 tests
-1106717730
18:02:16.419 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:16.566 [pool-980-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:16.744 [pool-979-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
LeastSquaresFactory.java:69: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
18:02:16.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
18:02:16.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:241 which is executed by 132 tests
-1106717730
18:02:16.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:17.019 [pool-982-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:17.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
18:02:17.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:240 which is executed by 132 tests
-1106717730
18:02:17.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:17.496 [pool-988-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (134 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:17.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
18:02:17.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:239 which is executed by 132 tests
-1106717730
18:02:17.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
18:02:17.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:238 which is executed by 132 tests
-1106717730
18:02:18.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
18:02:18.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:61 which is executed by 134 tests
-1165343197
18:02:18.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
18:02:18.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:336 which is executed by 134 tests
-1106717730
18:02:18.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
18:02:18.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:333 which is executed by 134 tests
-1106717730
18:02:18.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
18:02:18.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:332 which is executed by 134 tests
-1106717730
18:02:18.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
18:02:18.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:331 which is executed by 134 tests
-1106717730
18:02:18.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
18:02:18.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem:330 which is executed by 134 tests
-1106717730
18:02:18.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
18:02:18.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:180 which is executed by 134 tests
216109679
18:02:18.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
18:02:18.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:179 which is executed by 134 tests
216109679
18:02:19.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:19.249 [pool-994-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:19.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
18:02:19.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:138 which is executed by 134 tests
216109679
18:02:19.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
18:02:19.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:137 which is executed by 134 tests
216109679
18:02:19.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:19.813 [pool-1000-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:19.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
18:02:19.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:127 which is executed by 134 tests
216109679
18:02:20.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
18:02:20.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:126 which is executed by 134 tests
216109679
18:02:20.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:20.375 [pool-1006-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:20.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
18:02:20.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:59 which is executed by 134 tests
216109679
18:02:20.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
18:02:20.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1:159 which is executed by 134 tests
-1106717730
18:02:20.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
18:02:20.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:237 which is executed by 134 tests
-1106717730
18:02:21.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:21.263 [pool-1012-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:21.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
18:02:21.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:156 which is executed by 134 tests
-1106717730
18:02:21.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
18:02:21.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:155 which is executed by 134 tests
-1106717730
18:02:21.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
18:02:21.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:96 which is executed by 134 tests
-1106717730
18:02:21.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
18:02:21.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:95 which is executed by 134 tests
-1106717730
18:02:21.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
18:02:21.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:65 which is executed by 134 tests
-1106717730
18:02:22.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
18:02:22.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1297 which is executed by 137 tests
153582413
18:02:22.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
18:02:22.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1292 which is executed by 137 tests
153582413
18:02:22.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:22.552 [pool-1018-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:22.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
18:02:22.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1289 which is executed by 137 tests
153582413
18:02:23.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:23.155 [pool-1024-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (132 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:23.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
18:02:23.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1281 which is executed by 137 tests
153582413
18:02:23.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:23.963 [pool-1030-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:24.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
18:02:24.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1280 which is executed by 137 tests
153582413
18:02:24.419 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
18:02:24.419 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1279 which is executed by 137 tests
153582413
18:02:24.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
18:02:24.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1278 which is executed by 137 tests
153582413
18:02:24.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:24.874 [pool-1036-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:25.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
18:02:25.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1277 which is executed by 137 tests
153582413
18:02:25.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
18:02:25.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1276 which is executed by 137 tests
153582413
18:02:25.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
18:02:25.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1275 which is executed by 137 tests
153582413
18:02:25.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
18:02:25.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1274 which is executed by 137 tests
153582413
18:02:25.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
18:02:25.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1273 which is executed by 137 tests
153582413
18:02:25.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:26.075 [pool-1042-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:26.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
18:02:26.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1272 which is executed by 137 tests
153582413
18:02:26.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
18:02:26.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1271 which is executed by 137 tests
153582413
18:02:26.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
18:02:26.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1270 which is executed by 137 tests
153582413
18:02:27.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:27.169 [pool-1048-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:27.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
18:02:27.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1267 which is executed by 137 tests
153582413
18:02:27.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
18:02:27.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1264 which is executed by 137 tests
153582413
18:02:27.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:27.914 [pool-1054-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (139 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:28.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:28.341 [pool-1060-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:02:28.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
18:02:28.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1496 which is executed by 156 tests
68623
18:02:28.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
18:02:28.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1493 which is executed by 156 tests
68623
18:02:28.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:02:39.785 [pool-1066-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10791 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:02:40.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
18:02:40.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1492 which is executed by 156 tests
68623
18:02:40.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:02:51.275 [pool-1070-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10734 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:02:51.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
18:02:51.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1490 which is executed by 156 tests
68623
18:02:51.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:02.808 [pool-1074-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10846 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:03.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:13.943 [pool-1078-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10628 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:14.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
18:03:14.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 156 tests
68623
18:03:14.604 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:25.118 [pool-1082-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10507 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:25.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:36.271 [pool-1086-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10465 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:36.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
18:03:36.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 156 tests
68623
18:03:36.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:47.581 [pool-1090-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10645 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:48.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:03:58.405 [pool-1094-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10299 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:03:59.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
18:03:59.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1471 which is executed by 156 tests
68623
18:03:59.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:04:09.769 [pool-1098-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10506 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:04:10.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:04:20.872 [pool-1102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10591 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:04:21.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
18:04:21.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1468 which is executed by 156 tests
68623
18:04:21.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:04:31.931 [pool-1106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10401 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:04:32.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
18:04:32.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1467 which is executed by 156 tests
68623
18:04:32.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:04:43.292 [pool-1110-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10706 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

18:08:03.591 [pool-1109-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
18:08:03.592 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
18:08:03.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
18:08:03.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1466 which is executed by 156 tests
68623
18:08:03.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
18:08:03.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1465 which is executed by 156 tests
68623
18:08:03.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:08:14.370 [pool-1113-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10439 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:00.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
18:09:00.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1464 which is executed by 156 tests
68623
18:09:00.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
18:09:00.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1462 which is executed by 156 tests
68623
18:09:00.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:09:10.944 [pool-1117-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10350 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:11.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:09:21.805 [pool-1121-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10373 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:22.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
18:09:22.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1446 which is executed by 156 tests
68623
18:09:22.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:09:32.878 [pool-1125-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10413 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:33.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
18:09:33.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1445 which is executed by 156 tests
68623
18:09:33.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:09:43.974 [pool-1129-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10428 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:44.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
18:09:44.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1427 which is executed by 156 tests
68623
18:09:44.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:09:54.964 [pool-1133-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10329 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:09:55.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
18:09:55.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1426 which is executed by 156 tests
68623
18:09:55.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
18:09:55.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:644 which is executed by 156 tests
68623
18:09:55.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
18:09:55.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 156 tests
1857420685
18:09:55.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
18:09:55.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 156 tests
1857420685
18:09:56.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:10:06.511 [pool-1137-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10473 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:10:06.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:10:17.287 [pool-1141-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10409 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:10:17.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
18:10:17.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 156 tests
1857420685
18:10:17.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
18:10:17.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 156 tests
1857420685
18:10:17.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:10:28.349 [pool-1145-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10445 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:10:28.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
18:10:28.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 156 tests
1857420685
18:10:28.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:10:39.248 [pool-1149-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10408 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:10:39.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
18:10:39.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 156 tests
1857420685
18:10:39.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:10:50.104 [pool-1153-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10366 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:10:50.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:00.924 [pool-1157-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10462 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:01.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
18:11:01.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 156 tests
1857420685
18:11:01.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:11.755 [pool-1161-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10347 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:12.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
18:11:12.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 156 tests
1857420685
18:11:12.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:22.593 [pool-1165-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10356 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:22.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
18:11:22.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 156 tests
1857420685
18:11:23.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:33.392 [pool-1169-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10319 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:33.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
18:11:33.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 156 tests
1857420685
18:11:33.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:44.167 [pool-1173-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10298 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:44.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
18:11:44.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 156 tests
1857420685
18:11:44.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:11:54.981 [pool-1177-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10344 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:11:55.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:05.736 [pool-1181-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10404 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:12:06.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
18:12:06.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 156 tests
1857420685
18:12:06.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:16.553 [pool-1185-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10346 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:12:16.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
18:12:16.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 156 tests
1857420685
18:12:17.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:27.517 [pool-1189-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10492 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:12:27.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
18:12:27.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 156 tests
1857420685
18:12:27.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:38.365 [pool-1193-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10365 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:12:38.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:49.076 [pool-1197-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10377 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

18:12:49.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
18:12:49.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 156 tests
1857420685
18:12:49.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:12:59.833 [pool-1201-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10280 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:00.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
18:13:00.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 156 tests
1857420685
18:13:00.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:13:10.774 [pool-1205-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10460 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:11.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
18:13:11.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 156 tests
1857420685
18:13:11.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:13:21.563 [pool-1209-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10300 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:21.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:13:32.239 [pool-1213-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10323 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:32.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
18:13:32.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 156 tests
1857420685
18:13:32.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:13:43.043 [pool-1217-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10265 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:43.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
18:13:43.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 156 tests
1857420685
18:13:43.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:13:53.780 [pool-1221-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10278 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:13:54.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:14:04.493 [pool-1225-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10361 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:14:04.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
18:14:04.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 156 tests
1857420685
18:14:04.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:14:15.308 [pool-1229-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10332 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:14:15.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
18:14:15.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 156 tests
1857420685
18:14:15.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:14:26.147 [pool-1233-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10368 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:14:26.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
18:14:26.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 156 tests
1857420685
18:14:26.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
18:14:26.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 156 tests
1857420685
18:14:26.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
18:14:26.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 156 tests
1857420685
18:14:26.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
18:14:26.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 156 tests
1857420685
18:14:26.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
18:14:26.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 156 tests
1857420685
18:14:27.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
18:14:27.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 156 tests
1857420685
18:14:27.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
18:14:27.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 156 tests
1857420685
18:14:27.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:14:37.726 [pool-1237-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10358 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:14:38.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
18:14:38.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 156 tests
1857420685
18:14:38.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
18:14:38.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 156 tests
1857420685
18:14:38.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
18:14:38.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:620 which is executed by 179 tests
153582413
18:14:38.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
18:14:38.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:616 which is executed by 179 tests
153582413
18:14:38.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:38.786 [pool-1241-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:39.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
18:14:39.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:615 which is executed by 179 tests
153582413
18:14:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:39.374 [pool-1247-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:39.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
18:14:39.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:614 which is executed by 179 tests
153582413
18:14:39.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:39.959 [pool-1253-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:40.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
18:14:40.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:610 which is executed by 179 tests
153582413
18:14:40.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:40.547 [pool-1259-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:40.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
18:14:40.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:609 which is executed by 179 tests
153582413
18:14:41.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
18:14:41.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:608 which is executed by 179 tests
153582413
18:14:41.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
18:14:41.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:607 which is executed by 179 tests
153582413
18:14:41.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
18:14:41.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:606 which is executed by 179 tests
153582413
18:14:41.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:41.794 [pool-1265-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (147 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:42.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
18:14:42.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:605 which is executed by 179 tests
153582413
18:14:42.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
18:14:42.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:604 which is executed by 179 tests
153582413
18:14:42.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
18:14:42.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:603 which is executed by 179 tests
153582413
18:14:42.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
18:14:42.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:602 which is executed by 179 tests
153582413
18:14:42.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
18:14:42.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:601 which is executed by 179 tests
153582413
18:14:42.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:14:42.985 [pool-1271-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:14:43.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
18:14:43.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:599 which is executed by 179 tests
153582413
18:14:43.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
18:14:43.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:598 which is executed by 179 tests
153582413
18:14:43.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
18:14:43.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 187 tests
1648821820
18:14:43.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
18:14:43.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 187 tests
1648821820
18:14:43.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:14:54.189 [pool-1277-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10382 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:14:54.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
18:14:54.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 187 tests
1648821820
18:14:54.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:15:05.012 [pool-1281-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10373 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:15:05.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
18:15:05.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 187 tests
1648821820
18:15:05.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:15:15.900 [pool-1285-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10427 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:15:16.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
18:15:16.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 187 tests
1648821820
18:15:16.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:15:26.567 [pool-1289-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10210 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:15:26.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
18:15:26.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 187 tests
1648821820
18:15:27.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:15:37.400 [pool-1293-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10382 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:15:37.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
18:15:37.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 187 tests
1648821820
18:15:37.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
18:15:37.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:111 which is executed by 210 tests
-17789891
18:15:37.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
18:15:37.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:109 which is executed by 210 tests
-17789891
18:15:38.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:38.112 [pool-1297-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:38.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
18:15:38.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:108 which is executed by 210 tests
-17789891
18:15:38.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:38.399 [pool-1301-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (18 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:38.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
18:15:38.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:103 which is executed by 210 tests
-17789891
18:15:38.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:38.689 [pool-1305-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:38.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
18:15:38.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:102 which is executed by 210 tests
-17789891
18:15:38.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:38.979 [pool-1309-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:39.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #453
18:15:39.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:101 which is executed by 210 tests
-17789891
18:15:39.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:39.473 [pool-1313-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:39.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #454
18:15:39.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:100 which is executed by 210 tests
-17789891
18:15:39.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:39.761 [pool-1317-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:39.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #455
18:15:39.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:98 which is executed by 210 tests
-17789891
18:15:40.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #456
18:15:40.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:97 which is executed by 210 tests
-17789891
18:15:40.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #457
18:15:40.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:96 which is executed by 210 tests
-17789891
18:15:40.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #458
18:15:40.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:95 which is executed by 210 tests
-17789891
18:15:40.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #459
18:15:40.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:94 which is executed by 210 tests
-17789891
18:15:40.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #460
18:15:40.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:92 which is executed by 210 tests
-17789891
18:15:40.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #461
18:15:40.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:91 which is executed by 210 tests
-17789891
18:15:40.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #462
18:15:40.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:90 which is executed by 210 tests
-17789891
18:15:40.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #463
18:15:40.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:89 which is executed by 210 tests
-17789891
18:15:40.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #464
18:15:40.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:87 which is executed by 210 tests
-17789891
18:15:41.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #465
18:15:41.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:86 which is executed by 210 tests
-17789891
18:15:41.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #466
18:15:41.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:135 which is executed by 230 tests
816641250
18:15:41.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #467
18:15:41.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:131 which is executed by 230 tests
816641250
18:15:41.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:41.663 [pool-1321-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:42.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #468
18:15:42.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:130 which is executed by 230 tests
816641250
18:15:42.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:42.385 [pool-1327-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:42.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #469
18:15:42.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:129 which is executed by 230 tests
816641250
18:15:43.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:43.286 [pool-1333-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:43.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #470
18:15:43.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:128 which is executed by 230 tests
816641250
18:15:43.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #471
18:15:43.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:127 which is executed by 230 tests
816641250
18:15:43.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #472
18:15:43.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:126 which is executed by 230 tests
816641250
18:15:44.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #473
18:15:44.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:39 which is executed by 644 tests
-357391461
18:15:44.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #474
18:15:44.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:331 which is executed by 240 tests
-357391461
18:15:44.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:44.550 [pool-1339-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (162 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:44.754 [pool-1338-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
ArrayRealVector.java:191: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
18:15:44.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #475
18:15:44.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:329 which is executed by 240 tests
-357391461
18:15:44.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:45.051 [pool-1341-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:45.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #476
18:15:45.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:328 which is executed by 240 tests
-357391461
18:15:45.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:45.593 [pool-1347-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:45.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #477
18:15:45.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:327 which is executed by 240 tests
-357391461
18:15:45.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #478
18:15:45.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:326 which is executed by 240 tests
-357391461
18:15:46.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #479
18:15:46.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:325 which is executed by 241 tests
-357391461
18:15:46.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:46.414 [pool-1353-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (164 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:46.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #480
18:15:46.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:324 which is executed by 241 tests
-357391461
18:15:46.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #481
18:15:46.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:323 which is executed by 241 tests
-357391461
18:15:46.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #482
18:15:46.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:322 which is executed by 242 tests
-357391461
18:15:47.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:47.448 [pool-1359-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (153 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:47.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #483
18:15:47.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:238 which is executed by 248 tests
153582413
18:15:47.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:48.004 [pool-1365-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:48.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #484
18:15:48.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:236 which is executed by 248 tests
153582413
18:15:48.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:48.599 [pool-1371-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:48.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #485
18:15:48.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:235 which is executed by 248 tests
153582413
18:15:49.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:49.204 [pool-1377-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (168 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:49.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #486
18:15:49.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:234 which is executed by 248 tests
153582413
18:15:49.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:49.802 [pool-1383-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:50.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #487
18:15:50.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:233 which is executed by 248 tests
153582413
18:15:50.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #488
18:15:50.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:230 which is executed by 248 tests
153582413
18:15:50.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:50.550 [pool-1389-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:50.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #489
18:15:50.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:229 which is executed by 248 tests
153582413
18:15:50.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #490
18:15:50.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:226 which is executed by 248 tests
153582413
18:15:51.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #491
18:15:51.128 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:225 which is executed by 248 tests
153582413
18:15:51.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #492
18:15:51.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:224 which is executed by 248 tests
153582413
18:15:51.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #493
18:15:51.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:242 which is executed by 249 tests
153582413
18:15:51.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #494
18:15:51.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:223 which is executed by 249 tests
153582413
18:15:51.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:52.393 [pool-1395-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (661 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:52.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #495
18:15:52.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:222 which is executed by 249 tests
153582413
18:15:52.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #496
18:15:52.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:221 which is executed by 249 tests
153582413
18:15:52.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #497
18:15:52.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:220 which is executed by 249 tests
153582413
18:15:53.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #498
18:15:53.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:219 which is executed by 249 tests
153582413
18:15:53.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:53.440 [pool-1401-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:53.716 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #499
18:15:53.716 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:218 which is executed by 249 tests
153582413
18:15:53.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #500
18:15:53.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:217 which is executed by 249 tests
153582413
18:15:54.011 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #501
18:15:54.011 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:211 which is executed by 249 tests
153582413
18:15:54.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:54.312 [pool-1407-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:54.597 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:54.840 [pool-1413-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (236 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:55.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #502
18:15:55.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:210 which is executed by 249 tests
153582413
18:15:55.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #503
18:15:55.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:209 which is executed by 249 tests
153582413
18:15:55.417 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:55.562 [pool-1419-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:55.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #504
18:15:55.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:206 which is executed by 249 tests
153582413
18:15:55.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #505
18:15:55.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:205 which is executed by 249 tests
153582413
18:15:56.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #506
18:15:56.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:204 which is executed by 249 tests
153582413
18:15:56.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #507
18:15:56.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:203 which is executed by 249 tests
153582413
18:15:56.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #508
18:15:56.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:289 which is executed by 271 tests
-357391461
18:15:56.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #509
18:15:56.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Pair:94 which is executed by 287 tests
2479867
18:15:56.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #510
18:15:56.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Pair:84 which is executed by 287 tests
2479867
18:15:56.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #511
18:15:56.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1257 which is executed by 299 tests
153582413
18:15:56.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #512
18:15:56.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1571 which is executed by 300 tests
153582413
18:15:57.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #513
18:15:57.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1251 which is executed by 300 tests
153582413
18:15:57.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #514
18:15:57.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:290 which is executed by 301 tests
2090864759
18:15:57.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #515
18:15:57.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:220 which is executed by 301 tests
2090864759
18:15:57.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #516
18:15:57.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:171 which is executed by 304 tests
2090864759
18:15:57.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #517
18:15:57.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:168 which is executed by 304 tests
2090864759
18:15:57.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:57.896 [pool-1425-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (138 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:58.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #518
18:15:58.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:167 which is executed by 304 tests
2090864759
18:15:58.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:58.353 [pool-1431-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (139 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:58.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #519
18:15:58.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:166 which is executed by 304 tests
2090864759
18:15:58.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #520
18:15:58.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:165 which is executed by 304 tests
2090864759
18:15:58.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #521
18:15:58.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:163 which is executed by 304 tests
2090864759
18:15:58.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:59.058 [pool-1437-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:59.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #522
18:15:59.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.BlockRealMatrix:1580 which is executed by 308 tests
153582413
18:15:59.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #523
18:15:59.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:197 which is executed by 308 tests
2090864759
18:15:59.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:15:59.673 [pool-1443-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:15:59.820 [pool-1442-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DiagonalMatrix.java:88: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
18:15:59.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #524
18:15:59.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:194 which is executed by 308 tests
2090864759
18:15:59.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:00.119 [pool-1445-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:00.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #525
18:16:00.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:193 which is executed by 308 tests
2090864759
18:16:00.431 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:00.581 [pool-1451-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:00.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #526
18:16:00.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:192 which is executed by 308 tests
2090864759
18:16:00.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:01.042 [pool-1457-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:01.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #527
18:16:01.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:191 which is executed by 308 tests
2090864759
18:16:01.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #528
18:16:01.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:190 which is executed by 308 tests
2090864759
18:16:01.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #529
18:16:01.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:189 which is executed by 308 tests
2090864759
18:16:01.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #530
18:16:01.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:188 which is executed by 308 tests
2090864759
18:16:01.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:01.892 [pool-1463-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:02.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #531
18:16:02.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:185 which is executed by 310 tests
2090864759
18:16:02.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:02.353 [pool-1469-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:02.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #532
18:16:02.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:239 which is executed by 321 tests
2090864759
18:16:02.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:02.830 [pool-1475-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:03.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #533
18:16:03.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:243 which is executed by 322 tests
2090864759
18:16:03.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #534
18:16:03.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:238 which is executed by 322 tests
2090864759
18:16:03.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:03.412 [pool-1481-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:03.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #535
18:16:03.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:237 which is executed by 324 tests
2090864759
18:16:03.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:03.872 [pool-1487-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:04.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:04.203 [pool-1493-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:04.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #536
18:16:04.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:726 which is executed by 332 tests
-357391461
18:16:04.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #537
18:16:04.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:228 which is executed by 333 tests
2090864759
18:16:04.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #538
18:16:04.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:227 which is executed by 333 tests
2090864759
18:16:04.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:04.931 [pool-1499-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:05.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #539
18:16:05.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:283 which is executed by 340 tests
2090864759
18:16:05.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #540
18:16:05.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DiagonalMatrix:277 which is executed by 342 tests
2090864759
18:16:05.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #541
18:16:05.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:687 which is executed by 356 tests
816641250
18:16:05.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #542
18:16:05.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:196 which is executed by 1464 tests
936233262
18:16:05.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #543
18:16:05.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195 which is executed by 1464 tests
936233262
18:16:05.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:15.633 [pool-1505-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9882 ms)
<> Total tests run: 52
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:16:15.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #544
18:16:15.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:463 which is executed by 379 tests
-357391461
18:16:16.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:16.268 [pool-1511-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (148 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:16.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #545
18:16:16.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:461 which is executed by 379 tests
-357391461
18:16:16.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:16.795 [pool-1517-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:17.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #546
18:16:17.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:460 which is executed by 379 tests
-357391461
18:16:17.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:17.334 [pool-1523-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:17.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #547
18:16:17.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:459 which is executed by 379 tests
-357391461
18:16:17.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #548
18:16:17.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:458 which is executed by 381 tests
-357391461
18:16:17.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:18.009 [pool-1529-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:18.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #549
18:16:18.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:457 which is executed by 381 tests
-357391461
18:16:18.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #550
18:16:18.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:450 which is executed by 382 tests
-357391461
18:16:18.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #551
18:16:18.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:456 which is executed by 385 tests
-357391461
18:16:18.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:18.818 [pool-1535-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:19.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:19.214 [pool-1541-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:19.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #552
18:16:19.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3496 which is executed by 396 tests
1033054629
18:16:19.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #553
18:16:19.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:114 which is executed by 408 tests
-1541725837
18:16:19.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #554
18:16:19.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:600 which is executed by 468 tests
-357391461
18:16:19.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #555
18:16:19.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:145 which is executed by 476 tests
-1875222545
18:16:20.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #556
18:16:20.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:761 which is executed by 490 tests
-357391461
18:16:20.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #557
18:16:20.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:92 which is executed by 496 tests
936233262
18:16:20.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #558
18:16:20.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:91 which is executed by 496 tests
936233262
18:16:20.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #559
18:16:20.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:90 which is executed by 496 tests
936233262
18:16:20.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #560
18:16:20.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:758 which is executed by 504 tests
-357391461
18:16:20.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:20.791 [pool-1547-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:21.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:21.180 [pool-1553-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:21.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #561
18:16:21.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:254 which is executed by 510 tests
-1875222545
18:16:21.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #562
18:16:21.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:611 which is executed by 514 tests
1308483921
18:16:21.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #563
18:16:21.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:607 which is executed by 514 tests
1308483921
18:16:21.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:22.013 [pool-1559-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (154 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:22.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:22.445 [pool-1565-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (150 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:22.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #564
18:16:22.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:534 which is executed by 524 tests
-1875222545
18:16:22.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #565
18:16:22.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:532 which is executed by 524 tests
-1875222545
18:16:22.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:23.135 [pool-1571-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (144 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:23.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #566
18:16:23.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:531 which is executed by 524 tests
-1875222545
18:16:23.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:23.643 [pool-1577-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (165 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:23.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #567
18:16:23.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:529 which is executed by 524 tests
-1875222545
18:16:23.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #568
18:16:23.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:528 which is executed by 524 tests
-1875222545
18:16:24.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #569
18:16:24.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:610 which is executed by 539 tests
-357391461
18:16:24.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #570
18:16:24.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3428 which is executed by 2302 tests
1033054629
18:16:24.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #571
18:16:24.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3472 which is executed by 602 tests
1033054629
18:16:24.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:24.727 [pool-1583-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (149 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:25.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #572
18:16:25.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3471 which is executed by 636 tests
1033054629
18:16:25.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:25.927 [pool-1589-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:26.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:26.900 [pool-1595-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:27.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #573
18:16:27.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:316 which is executed by 645 tests
-1875222545
18:16:27.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #574
18:16:27.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:315 which is executed by 645 tests
-1875222545
18:16:27.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:28.097 [pool-1601-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (151 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:28.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #575
18:16:28.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:314 which is executed by 645 tests
-1875222545
18:16:28.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:28.607 [pool-1607-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:28.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #576
18:16:28.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3555 which is executed by 672 tests
1033054629
18:16:28.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #577
18:16:28.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3552 which is executed by 672 tests
1033054629
18:16:29.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:29.319 [pool-1613-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (163 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:30.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:30.277 [pool-1619-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (156 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:31.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #578
18:16:31.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3551 which is executed by 672 tests
1033054629
18:16:31.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #579
18:16:31.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3546 which is executed by 679 tests
1033054629
18:16:31.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:31.577 [pool-1625-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:32.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:32.538 [pool-1631-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (155 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:33.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #580
18:16:33.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:307 which is executed by 704 tests
-1875222545
18:16:33.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #581
18:16:33.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:306 which is executed by 704 tests
-1875222545
18:16:33.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:33.763 [pool-1637-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (159 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #582
18:16:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:339 which is executed by 794 tests
-1875222545
18:16:34.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #583
18:16:34.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:345 which is executed by 795 tests
-1875222545
18:16:34.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #584
18:16:34.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:457 which is executed by 830 tests
1308483921
18:16:34.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #585
18:16:34.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:456 which is executed by 830 tests
1308483921
18:16:34.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:34.679 [pool-1643-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (152 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:34.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #586
18:16:34.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:455 which is executed by 830 tests
1308483921
18:16:35.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:35.234 [pool-1649-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:35.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #587
18:16:35.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:158 which is executed by 855 tests
-593135567
18:16:35.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:35.636 [pool-1655-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:35.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #588
18:16:35.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:157 which is executed by 855 tests
-593135567
18:16:35.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:35.922 [pool-1659-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:36.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #589
18:16:36.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:488 which is executed by 866 tests
1308483921
18:16:36.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #590
18:16:36.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:484 which is executed by 866 tests
1308483921
18:16:36.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:36.522 [pool-1663-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:36.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:36.943 [pool-1669-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (166 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:37.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #591
18:16:37.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:473 which is executed by 866 tests
1308483921
18:16:37.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #592
18:16:37.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:469 which is executed by 867 tests
1308483921
18:16:37.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #593
18:16:37.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:468 which is executed by 867 tests
1308483921
18:16:37.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:37.788 [pool-1675-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (160 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:38.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:38.206 [pool-1681-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (158 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:38.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #594
18:16:38.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3543 which is executed by 947 tests
1033054629
18:16:38.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:38.796 [pool-1687-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (159 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:39.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #595
18:16:39.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:158 which is executed by 949 tests
-1541725837
18:16:39.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #596
18:16:39.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:155 which is executed by 950 tests
-1541725837
18:16:39.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:40.029 [pool-1693-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (173 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:40.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:40.374 [pool-1699-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (163 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:40.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #597
18:16:40.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3542 which is executed by 1078 tests
1033054629
18:16:40.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:40.895 [pool-1705-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (165 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:41.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:41.854 [pool-1711-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (161 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:42.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #598
18:16:42.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3539 which is executed by 1127 tests
1033054629
18:16:42.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:43.019 [pool-1717-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (169 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:43.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:43.982 [pool-1723-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (169 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:44.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #599
18:16:44.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:182 which is executed by 1231 tests
-593135567
18:16:44.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #600
18:16:44.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:181 which is executed by 1231 tests
-593135567
18:16:45.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:45.024 [pool-1729-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:45.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #601
18:16:45.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:172 which is executed by 1339 tests
-593135567
18:16:45.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #602
18:16:45.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:171 which is executed by 1339 tests
-593135567
18:16:45.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:45.428 [pool-1733-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:45.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #603
18:16:45.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:170 which is executed by 1339 tests
-593135567
18:16:45.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:45.714 [pool-1737-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:45.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #604
18:16:45.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:166 which is executed by 1339 tests
-593135567
18:16:46.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:46.020 [pool-1741-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:46.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #605
18:16:46.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:165 which is executed by 1339 tests
-593135567
18:16:46.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #606
18:16:46.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:164 which is executed by 1339 tests
-593135567
18:16:46.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:46.423 [pool-1745-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:46.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #607
18:16:46.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:163 which is executed by 1339 tests
-593135567
18:16:46.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:46.709 [pool-1749-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:46.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:46.876 [pool-1753-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:47.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #608
18:16:47.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:161 which is executed by 1339 tests
-593135567
18:16:47.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:47.185 [pool-1757-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (40 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:47.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #609
18:16:47.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:156 which is executed by 1339 tests
-593135567
18:16:47.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:47.471 [pool-1761-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:47.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:47.637 [pool-1765-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:47.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #610
18:16:47.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:267 which is executed by 1356 tests
-1550426518
18:16:47.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #611
18:16:47.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:264 which is executed by 1364 tests
-1550426518
18:16:48.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:48.190 [pool-1769-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (163 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:48.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:16:48.545 [pool-1775-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (162 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 2
~ testEvaluationCount(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.testEvaluationCount(LevenbergMarquardtOptimizerTest.java:288)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
~ testPointCopy(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest)
[loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature]
java.lang.LinkageError: loader constraint violation: when resolving method "org.junit.Assert.assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V" the class loader (instance of fr/inria/lille/repair/common/BottomTopURLClassLoader) of the current class, org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest$2, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/junit/Assert, have different Class objects for the type org/hamcrest/Matcher used in the signature    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:547)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$2.converged(AbstractLeastSquaresOptimizerAbstractTest.java:545)
    at org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(LevenbergMarquardtOptimizer.java:508)
    at org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.testPointCopy(AbstractLeastSquaresOptimizerAbstractTest.java:556)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:16:48.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #612
18:16:48.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:385 which is executed by 2246 tests
1033054629
18:16:48.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #613
18:16:48.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3024 which is executed by 2607 tests
1033054629
18:16:49.082 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
18:16:49.439 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 825
18:16:49.439 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 5463
18:16:49.439 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 342
18:16:49.443 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
18:16:49.443 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 1734753ms
18:16:49.443 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
3776.19user 63.41system 28:57.29elapsed 221%CPU (0avgtext+0avgdata 4764988maxresident)k
38920inputs+14760outputs (3major+1786143minor)pagefaults 0swaps


Node: petitprince-5.luxembourg.grid5000.fr



Date: Sun Dec 30 18:16:50 EST 2018

