cd /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
	-location . \
	-id Wicket-bcea89fc \
	-failing org.apache.wicket.util.collections.IntHashMapTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder wicket-util/src/main/java \
	-srctestfolder wicket-util/src/test/java \
	-binjavafolder wicket-util/target/classes \
	-bintestfolder wicket-util/target/test-classes \
	-parameters x:x \
	-dependencies /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2018-12-29 17:31:52,343 INFO main - command line arguments: [-mode  jkali  -location  .  -id  Wicket-bcea89fc  -failing  org.apache.wicket.util.collections.IntHashMapTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  wicket-util/src/main/java  -srctestfolder  wicket-util/src/test/java  -binjavafolder  wicket-util/target/classes  -bintestfolder  wicket-util/target/test-classes  -parameters  x:x  -dependencies  /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
2018-12-29 17:31:52,358 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:842) - Source folders: [/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:861) - Source Test folders: [/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/test/java]
java.lang.ClassNotFoundException: archetype-resources.src.test.java.TestHomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.test.java.Start
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.WicketApplication
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.HomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//bin//default from 44 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar, /home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar, /home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar, /home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes/, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar, /home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar, /home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar, /home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes/, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes/, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes/, /home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar, /home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, /home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar, /home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes/, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes/, /home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar, /home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes/, /home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar, /home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, /home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//bin//default, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes/, /home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes/, /home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes/, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes/, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, /home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes/, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase#markupFiles
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.license.ApacheLicenceHeaderTest#licenseHeaders
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.collections.IntHashMapTest#serialize
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:182, fails: 3, GZoltar suspicious 3710, with positive susp 436
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 182
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 433 with susp > 0.1, we consider: 433
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//src//default, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes/, /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar, /home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar, /home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar, /home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar, /home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar, /home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar, /home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar, /home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, /home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar, /home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar, /home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, /home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar, /home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, /home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar, /home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar, /home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, /home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 433
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{info(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=603, susp=0.4082482904638631]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{info(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=604, susp=0.4082482904638631]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=259, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=260, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=402, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=405, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=406, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=407, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=133, susp=0.23570226039551587]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=364, susp=0.23570226039551587]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=107, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=113, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=117, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=118, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=122, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=124, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=132, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=133, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=134, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=136, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=139, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=140, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=141, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=142, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=143, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=144, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=145, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=147, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=148, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=149, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=150, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=152, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{incSize()V 0.0, lineNumber=156, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{incSize()V 0.0, lineNumber=157, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=45, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=ch.qos.logback.classic.selector.DefaultContextSelector{getLoggerContext()Lch/qos/logback/classic/LoggerContext; 0.0, lineNumber=30, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=ch.qos.logback.classic.selector.DefaultContextSelector{getDefaultLoggerContext()Lch/qos/logback/classic/LoggerContext; 0.0, lineNumber=34, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getName()Ljava/lang/String; 0.0, lineNumber=123, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=132, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=135, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=136, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=137, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=138, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=140, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=141, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=145, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=355, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=356, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=363, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=367, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=368, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=369, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=370, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.ContextSelectorStaticBinder, methodName=ch.qos.logback.classic.util.ContextSelectorStaticBinder{getContextSelector()Lch/qos/logback/classic/selector/ContextSelector; 0.0, lineNumber=104, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=269, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=270, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/Class;)Lorg/slf4j/Logger; 0.0, lineNumber=281, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=293, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=297, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=299, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=40, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=41, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=42, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=44, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getSingleton()Lorg/slf4j/impl/StaticLoggerBinder; 0.0, lineNumber=68, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=103, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=107, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=111, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 433,  325
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 325
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 325, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= wicket-util/target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 14434
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= wicket-util/src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.wicket.util.collections.IntHashMapTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Wicket-bcea89fc
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= wicket-util/target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= wicket-util/src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `if (true)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `if (false)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 126, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(isSnake())) && ((prev) != null))  { 	return prev.previousSnake(); } ` -topatch--> `if (true)  { 	return this.prev.previousSnake(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(isSnake())) && ((prev) != null))  { 	return prev.previousSnake(); } ` -topatch--> `if (false)  { 	return this.prev.previousSnake(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(isSnake())) && ((prev) != null))  { 	return prev.previousSnake(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 130, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return prev.previousSnake() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); }else   { 	return new java.util.ArrayList<>([...] ` -topatch--> `if (true)  { 	return new java.util.ArrayList<>(); }else   { 	return new java.util.ArrayList<>(seq.su[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); }else   { 	return new java.util.ArrayList<>([...] ` -topatch--> `if (false)  { 	return new java.util.ArrayList<>(); }else   { 	return new java.util.ArrayList<>(seq.s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); }else   { 	return new java.util.ArrayList<>([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 343, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.util.ArrayList<>(seq.subList(pos, (pos + count))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isDirectory())  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rel[...] ` -topatch--> `if (true)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	relativePathname = or[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isDirectory())  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rel[...] ` -topatch--> `if (false)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	relativePathname = o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isDirectory())  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rel[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 159, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `relativePathname = org.apache.wicket.util.string.Strings.replaceAll(relativePathname,  ((baseDirecto[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((relativePathname.equals("target")) == false)  { 	boolean found = false; 	for (java.lang.String [...] ` -topatch--> `if (true)  { 	boolean found = false; 	for (java.lang.String ignore : this.ignoreDirectory)  	{ 		if [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((relativePathname.equals("target")) == false)  { 	boolean found = false; 	for (java.lang.String [...] ` -topatch--> `if (false)  { 	boolean found = false; 	for (java.lang.String ignore : this.ignoreDirectory)  	{ 		if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((relativePathname.equals("target")) == false)  { 	boolean found = false; 	for (java.lang.String [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 165, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String ignore : ignoreDirectory)  { 	if (pathname.getName().equals(ignore))  	{ 		fou[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignore))  { 	found = true; 	break; } ` -topatch--> `if (true)  { 	found = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignore))  { 	found = true; 	break; } ` -topatch--> `if (false)  { 	found = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignore))  { 	found = true; 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (found == false)  { 	accept = true; } ` -topatch--> `if (true)  { 	accept = true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (found == false)  { 	accept = true; } ` -topatch--> `if (false)  { 	accept = true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (found == false)  { 	accept = true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 175, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `accept = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Delta line: 118, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `result = ((org.apache.wicket.util.diff.Delta) (c.newInstance())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Delta line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.init(orig, rev) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Delta line: 154, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `original = orig ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Delta line: 155, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `revised = rev ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.PropertiesLicenseHeaderHandler line: 54, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `revision = org.apache.wicket.util.diff.Diff.diff(getLicenseHeader().split(org.apache.wicket.util.lic[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlPrologHeaderHandler line: 52, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return header.startsWith("<?xml") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isFile())  { 	if ((ignoreFile(pathname)) == false)  	{ 		for (java.lang.String suffix :[...] ` -topatch--> `if (true)  { 	if ((ignoreFile(pathname)) == false)  	{ 		for (java.lang.String suffix : this.suffixe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isFile())  { 	if ((ignoreFile(pathname)) == false)  	{ 		for (java.lang.String suffix :[...] ` -topatch--> `if (false)  { 	if ((ignoreFile(pathname)) == false)  	{ 		for (java.lang.String suffix : this.suffix[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.isFile())  { 	if ((ignoreFile(pathname)) == false)  	{ 		for (java.lang.String suffix :[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFile(pathname)) == false)  { 	for (java.lang.String suffix : suffixes)  	{ 		if (pathname[...] ` -topatch--> `if (true)  { 	for (java.lang.String suffix : this.suffixes)  	{ 		if (pathname.getName().endsWith(("[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFile(pathname)) == false)  { 	for (java.lang.String suffix : suffixes)  	{ 		if (pathname[...] ` -topatch--> `if (false)  { 	for (java.lang.String suffix : this.suffixes)  	{ 		if (pathname.getName().endsWith(([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFile(pathname)) == false)  { 	for (java.lang.String suffix : suffixes)  	{ 		if (pathname[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 77, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String suffix : suffixes)  { 	if (pathname.getName().endsWith(("." + suffix)))  	{ 		[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().endsWith(("." + suffix)))  { 	accept = true; 	break; }else   { 	org.apache.wi[...] ` -topatch--> `if (true)  { 	accept = true; 	break; }else   { 	org.apache.wicket.util.license.ApacheLicenseHeaderTe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().endsWith(("." + suffix)))  { 	accept = true; 	break; }else   { 	org.apache.wi[...] ` -topatch--> `if (false)  { 	accept = true; 	break; }else   { 	org.apache.wicket.util.license.ApacheLicenseHeaderT[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().endsWith(("." + suffix)))  { 	accept = true; 	break; }else   { 	org.apache.wi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `accept = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 82, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.log.info("File ignored: '{}'", pathname.t[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFiles) != null)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rela[...] ` -topatch--> `if (true)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	relativePathname = or[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFiles) != null)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rela[...] ` -topatch--> `if (false)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	relativePathname = o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((ignoreFiles) != null)  { 	java.lang.String relativePathname = pathname.getAbsolutePath(); 	rela[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 106, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `relativePathname = org.apache.wicket.util.string.Strings.replaceAll(relativePathname,  ((baseDirecto[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 110, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String ignorePath : ignoreFiles)  {  	ignorePath = org.apache.wicket.util.string.Stri[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 113, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ignorePath = org.apache.wicket.util.string.Strings.replaceAll(ignorePath, "/",  java.lang.System.get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isDirectory())  { 	if (pathname.getAbsolutePath().startsWith(ignoreFile.getAbsolutePa[...] ` -topatch--> `if (true)  { 	if (pathname.getAbsolutePath().startsWith(ignoreFile.getAbsolutePath()))  	{ 		ignore [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isDirectory())  { 	if (pathname.getAbsolutePath().startsWith(ignoreFile.getAbsolutePa[...] ` -topatch--> `if (false)  { 	if (pathname.getAbsolutePath().startsWith(ignoreFile.getAbsolutePath()))  	{ 		ignore[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isDirectory())  { 	if (pathname.getAbsolutePath().startsWith(ignoreFile.getAbsolutePa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isFile())  { 	if (relativePathname.equals(ignorePath))  	{ 		ignore = true; 		break; [...] ` -topatch--> `if (true)  { 	if (relativePathname.equals(ignorePath))  	{ 		ignore = true; 		break; 	} }else 	if (p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isFile())  { 	if (relativePathname.equals(ignorePath))  	{ 		ignore = true; 		break; [...] ` -topatch--> `if (false)  { 	if (relativePathname.equals(ignorePath))  	{ 		ignore = true; 		break; 	} }else 	if ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ignoreFile.isFile())  { 	if (relativePathname.equals(ignorePath))  	{ 		ignore = true; 		break; [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignorePath))  { 	ignore = true; 	break; } ` -topatch--> `if (true)  { 	ignore = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignorePath))  { 	ignore = true; 	break; } ` -topatch--> `if (false)  { 	ignore = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pathname.getName().equals(ignorePath))  { 	ignore = true; 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `if (true)  { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `if (false)  { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `closeable.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.close(closeable) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.wicket.util.string.Strings.isEmpty(property)))  { 	baseDirectory = new java.io.File[...] ` -topatch--> `if (true)  { 	this.baseDirectory = new java.io.File(property).getAbsoluteFile(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.wicket.util.string.Strings.isEmpty(property)))  { 	baseDirectory = new java.io.File[...] ` -topatch--> `if (false)  { 	this.baseDirectory = new java.io.File(property).getAbsoluteFile(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.wicket.util.string.Strings.isEmpty(property)))  { 	baseDirectory = new java.io.File[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 256, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `licenseHeaderHandlers = new org.apache.wicket.util.license.ILicenseHeaderHandler[]{  new org.apache.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 268, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeader[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 270, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(),  new org.apach[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 296, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failIncorrectLicenceHeaders(badFiles) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((files.size()) > 0)  { 	java.lang.StringBuilder failString = new java.lang.StringBuilder();  	fo[...] ` -topatch--> `if (true)  { 	java.lang.StringBuilder failString = new java.lang.StringBuilder();  	for (java.util.M[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((files.size()) > 0)  { 	java.lang.StringBuilder failString = new java.lang.StringBuilder();  	fo[...] ` -topatch--> `if (false)  { 	java.lang.StringBuilder failString = new java.lang.StringBuilder();  	for (java.util.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((files.size()) > 0)  { 	java.lang.StringBuilder failString = new java.lang.StringBuilder();  	fo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 305, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<org.apache.wicket.util.license.ILicenseHeaderHandler, java.util.List<java.i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 310, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append("\n") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 311, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append(licenseHeaderHandler.getClass().getName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 312, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append(" failed. The following files(") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 313, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append(fileList.size()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 314, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append(") didn\'t have correct license header:\n") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 316, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.io.File file : fileList)  { 	java.lang.String filename = file.getAbsolutePath();   	java.l[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (licenseType == null)  { 	failString.append("NONE"); }else   { 	failString.append(licenseType); } ` -topatch--> `if (true)  { 	failString.append("NONE"); }else   { 	failString.append(licenseType); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (licenseType == null)  { 	failString.append("NONE"); }else   { 	failString.append(licenseType); } ` -topatch--> `if (false)  { 	failString.append("NONE"); }else   { 	failString.append(licenseType); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (licenseType == null)  { 	failString.append("NONE"); }else   { 	failString.append(licenseType); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 325, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append("NONE") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 332, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `failString.append(" ").append(filename).append(org.apache.wicket.util.license.ApacheLicenseHeaderTes[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 336, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.out.println(failString) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 337, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.junit.Assert.fail(failString.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 344, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `visitDirectory(suffixes, ignoreFiles, baseDirectory, fileVisitor) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File file : files)  	{ 		fileVisitor.visitFile(file); 	} } ` -topatch--> `if (true)  { 	for (java.io.File file : files)  	{ 		fileVisitor.visitFile(file); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File file : files)  	{ 		fileVisitor.visitFile(file); 	} } ` -topatch--> `if (false)  { 	for (java.io.File file : files)  	{ 		fileVisitor.visitFile(file); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File file : files)  	{ 		fileVisitor.visitFile(file); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 354, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.io.File file : files)  { 	fileVisitor.visitFile(file); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 356, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fileVisitor.visitFile(file) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 361, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `files = directory.listFiles(new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.Directory[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File childDirectory : files)  	{ 		visitDirectory(suffixes, igno[...] ` -topatch--> `if (true)  { 	for (java.io.File childDirectory : files)  	{ 		visitDirectory(suffixes, ignoreFiles, [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File childDirectory : files)  	{ 		visitDirectory(suffixes, igno[...] ` -topatch--> `if (false)  { 	for (java.io.File childDirectory : files)  	{ 		visitDirectory(suffixes, ignoreFiles,[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (files != null)  { 	for (java.io.File childDirectory : files)  	{ 		visitDirectory(suffixes, igno[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 365, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.io.File childDirectory : files)  { 	visitDirectory(suffixes, ignoreFiles, childDirectory, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 367, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `visitDirectory(suffixes, ignoreFiles, childDirectory, fileVisitor) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (header.startsWith("<?xml"))  { 	header = header.substring(((header.indexOf(org.apache.wicket.uti[...] ` -topatch--> `if (true)  { 	header = header.substring(((header.indexOf(org.apache.wicket.util.license.AbstractLice[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (header.startsWith("<?xml"))  { 	header = header.substring(((header.indexOf(org.apache.wicket.uti[...] ` -topatch--> `if (false)  { 	header = header.substring(((header.indexOf(org.apache.wicket.util.license.AbstractLic[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (header.startsWith("<?xml"))  { 	header = header.substring(((header.indexOf(org.apache.wicket.uti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 62, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `header = header.substring(((header.indexOf(org.apache.wicket.util.license.AbstractLicenseHeaderHandl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 69, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; (i < 16) && (i < (headers.length)); i++)  { 	if ((sb.length()) > 0)  	{ 		sb.append([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((sb.length()) > 0)  { 	sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LIN[...] ` -topatch--> `if (true)  { 	sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LINE_ENDING); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((sb.length()) > 0)  { 	sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LIN[...] ` -topatch--> `if (false)  { 	sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LINE_ENDING); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((sb.length()) > 0)  { 	sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LIN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 73, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LINE_ENDING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 75, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(headers[i]) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 77, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `header = sb.toString() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `revision = org.apache.wicket.util.diff.Diff.diff(getLicenseHeader().split(org.apache.wicket.util.lic[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((orig == null) || (rev == null))  { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((orig.length) == 0) && ((rev.length) == 0))  { 	return new org.apache.wicket.util.diff.Revision[...] ` -topatch--> `if (true)  { 	return new org.apache.wicket.util.diff.Revision(); }else   { 	return this.algorithm.di[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((orig.length) == 0) && ((rev.length) == 0))  { 	return new org.apache.wicket.util.diff.Revision[...] ` -topatch--> `if (false)  { 	return new org.apache.wicket.util.diff.Revision(); }else   { 	return this.algorithm.d[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((orig.length) == 0) && ((rev.length) == 0))  { 	return new org.apache.wicket.util.diff.Revision[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 218, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return algorithm.diff(orig, rev) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (delta == null)  { 	throw new java.lang.IllegalArgumentException("new delta is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("new delta is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (delta == null)  { 	throw new java.lang.IllegalArgumentException("new delta is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("new delta is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (delta == null)  { 	throw new java.lang.IllegalArgumentException("new delta is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 121, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `deltas_.add(0, delta) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.wicket.util.string.Strings.isEmpty(licenseHeader))  { 	java.io.LineNumberReader lineN[...] ` -topatch--> `if (true)  { 	java.io.LineNumberReader lineNumberReader = null; 	java.io.InputStream inputStream = n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.wicket.util.string.Strings.isEmpty(licenseHeader))  { 	java.io.LineNumberReader lineN[...] ` -topatch--> `if (false)  { 	java.io.LineNumberReader lineNumberReader = null; 	java.io.InputStream inputStream = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.wicket.util.string.Strings.isEmpty(licenseHeader))  { 	java.io.LineNumberReader lineN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `inputStream = org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.class.getResourceAsStream(g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `inputStreamReader = new java.io.InputStreamReader(inputStream) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lineNumberReader = new java.io.LineNumberReader(inputStreamReader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 85, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (line != null)  { 	header.append(line); 	header.append(org.apache.wicket.util.license.Abstract[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `header.append(line) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 88, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `header.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LINE_ENDING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 89, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `line = lineNumberReader.readLine() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 92, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `licenseHeader = header.toString().trim() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.closeQuietly(lineNumberReader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 101, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.closeQuietly(inputStream) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.closeQuietly(inputStreamReader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 117, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lineNumberReader = new java.io.LineNumberReader(fileReader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 119, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = start; i < length; i++)  { 	header.append(lineNumberReader.readLine()); 	header.append([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 121, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `header.append(lineNumberReader.readLine()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `header.append(org.apache.wicket.util.license.AbstractLicenseHeaderHandler.LINE_ENDING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.close(lineNumberReader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 134, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `diagonal[(middle + 1)] = new org.apache.wicket.util.diff.myers.Snake(0, (-1), null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 135, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int d = 0; d < MAX; d++)  { 	for (int k = -d; k <= d; k += 2)  	{ 		final int kmiddle = middle [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 137, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = -d; k <= d; k += 2)  { 	final int kmiddle = middle + k; 	final int kplus = kmiddle + 1;[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))))  { 	i = diagonal[kplu[...] ` -topatch--> `if (true)  { 	i = diagonal[kplus].i; 	prev = diagonal[kplus]; }else   { 	i = (diagonal[kminus].i) + [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))))  { 	i = diagonal[kplu[...] ` -topatch--> `if (false)  { 	i = diagonal[kplus].i; 	prev = diagonal[kplus]; }else   { 	i = (diagonal[kminus].i) +[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))))  { 	i = diagonal[kplu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 147, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = diagonal[kplus].i ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 148, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `prev = diagonal[kplus] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 152, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = (diagonal[kminus].i) + 1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 153, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `prev = diagonal[kminus] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 156, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `diagonal[kminus] = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 165, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (((i < N) && (j < M)) && (orig[i].equals(rev[j])))  { 	i++; 	j++; }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i > (node.i))  { 	node = new org.apache.wicket.util.diff.myers.Snake(i, j, node); } ` -topatch--> `if (true)  { 	node = new org.apache.wicket.util.diff.myers.Snake(i, j, node); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i > (node.i))  { 	node = new org.apache.wicket.util.diff.myers.Snake(i, j, node); } ` -topatch--> `if (false)  { 	node = new org.apache.wicket.util.diff.myers.Snake(i, j, node); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (i > (node.i))  { 	node = new org.apache.wicket.util.diff.myers.Snake(i, j, node); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 175, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `diagonal[kmiddle] = node ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((i >= N) && (j >= M))  { 	return diagonal[kmiddle]; } ` -topatch--> `if (true)  { 	return diagonal[kmiddle]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((i >= N) && (j >= M))  { 	return diagonal[kmiddle]; } ` -topatch--> `if (false)  { 	return diagonal[kmiddle]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((i >= N) && (j >= M))  { 	return diagonal[kmiddle]; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 179, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return diagonal[kmiddle] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 182, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `diagonal[((middle + d) - 1)] = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null)  { 	throw new java.lang.IllegalArgumentException("path is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("path is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null)  { 	throw new java.lang.IllegalArgumentException("path is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("path is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null)  { 	throw new java.lang.IllegalArgumentException("path is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (orig == null)  { 	throw new java.lang.IllegalArgumentException("original sequence is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rev == null)  { 	throw new java.lang.IllegalArgumentException("revised sequence is null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `if (true)  { 	path = path.prev; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `if (false)  { 	path = path.prev; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 222, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (((path != null) && ((path.prev) != null)) && ((path.prev.j) >= 0))  { 	if (path.isSnake())  	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	throw new java.lang.IllegalStateException("bad diffpath: found snake when lo[...] ` -topatch--> `if (true)  { 	throw new java.lang.IllegalStateException("bad diffpath: found snake when looking for [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	throw new java.lang.IllegalStateException("bad diffpath: found snake when lo[...] ` -topatch--> `if (false)  { 	throw new java.lang.IllegalStateException("bad diffpath: found snake when looking for[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	throw new java.lang.IllegalStateException("bad diffpath: found snake when lo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 231, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = path.prev ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 237, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `revision.insertDelta(delta) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `if (true)  { 	path = path.prev; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `if (false)  { 	path = path.prev; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (path.isSnake())  { 	path = path.prev; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((licenseHeaderHandler.checkLicenseHeader(file)) == false)  { 	if (((addHeaders) == false) ||  	([...] ` -topatch--> `if (true)  { 	if (((this.addHeaders) == false) ||  	((licenseHeaderHandler.addLicenseHeader(file)) =[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((licenseHeaderHandler.checkLicenseHeader(file)) == false)  { 	if (((addHeaders) == false) ||  	([...] ` -topatch--> `if (false)  { 	if (((this.addHeaders) == false) ||  	((licenseHeaderHandler.addLicenseHeader(file)) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((licenseHeaderHandler.checkLicenseHeader(file)) == false)  { 	if (((addHeaders) == false) ||  	([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false))  { 	java.u[...] ` -topatch--> `if (true)   { 	java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);  	if (files [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false))  { 	java.u[...] ` -topatch--> `if (false)   { 	java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);  	if (files[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false))  { 	java.u[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files == null)  { 	files = new java.util.ArrayList<>(); 	badFiles.put(licenseHeaderHandler, file[...] ` -topatch--> `if (true)  { 	files = new java.util.ArrayList<>(); 	badFiles.put(licenseHeaderHandler, files); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (files == null)  { 	files = new java.util.ArrayList<>(); 	badFiles.put(licenseHeaderHandler, file[...] ` -topatch--> `if (false)  { 	files = new java.util.ArrayList<>(); 	badFiles.put(licenseHeaderHandler, files); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (files == null)  { 	files = new java.util.ArrayList<>(); 	badFiles.put(licenseHeaderHandler, file[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 285, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `files = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 286, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `badFiles.put(licenseHeaderHandler, files) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 289, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `files.add(file) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	return null; } ` -topatch--> `if (true)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	return null; } ` -topatch--> `if (false)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (key == (e.key))  { 	return e.value; } ` -topatch--> `if (true)  { 	return e.value; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (key == (e.key))  { 	return e.value; } ` -topatch--> `if (false)  { 	return e.value; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (key == (e.key))  { 	return e.value; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 231, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return e.value ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 293, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (org.apache.wicket.util.collections.IntHashMap.Entry<V> e = table[i]; e != null; e = e.next)  { [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 303, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `modCount.incrementAndGet() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 304, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addEntry(key, value, i) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 325, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (org.apache.wicket.util.collections.IntHashMap.Entry<V> e = table[i]; e != null; e = e.next)  { [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 334, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `createEntry(key, value, i) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 744, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `table[bucketIndex] = new org.apache.wicket.util.collections.IntHashMap.Entry<>(key, value, table[buc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((size)++) >= (threshold))  { 	resize((2 * (table.length))); } ` -topatch--> `if (true)  { 	resize((2 * (this.table.length))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((size)++) >= (threshold))  { 	resize((2 * (table.length))); } ` -topatch--> `if (false)  { 	resize((2 * (this.table.length))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((size)++) >= (threshold))  { 	resize((2 * (table.length))); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 764, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `table[bucketIndex] = new org.apache.wicket.util.collections.IntHashMap.Entry<>(key, value, table[buc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 765, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(size)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1119, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.defaultWriteObject() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.writeInt(table.length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.writeInt(size) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1128, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.wicket.util.collections.IntHashMap.Entry<V> entry : entrySet())  { 	s.writeInt(entry[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.writeInt(entry.getKey()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.writeObject(entry.getValue()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1149, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.defaultReadObject() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1153, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `table = new org.apache.wicket.util.collections.IntHashMap.Entry[numBuckets] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1155, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `init() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1158, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int size = s.readInt() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1161, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < size; i++)  { 	int key = s.readInt(); 	V value = ((V) (s.readObject())); 	putFor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 1165, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `putForCreate(key, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 122, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < (buffers.size()); i++)  { 	byte[] buf = getBuffer(i); 	int c = java.lang.Math.mi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(buf, 0, newbuf, pos, c) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 127, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `pos += c ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 128, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `remaining -= c ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0)  { 	break; } ` -topatch--> `if (true)  { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0)  { 	break; } ` -topatch--> `if (false)  { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0)  { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 131, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len[...] ` -topatch--> `if (true)   { 	throw new java.lang.IndexOutOfBoundsException(); }else 	if (len == 0)  	{ 		return; 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len[...] ` -topatch--> `if (false)   { 	throw new java.lang.IndexOutOfBoundsException(); }else 	if (len == 0)  	{ 		return; [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (len == 0)  { 	return; } ` -topatch--> `if (true)  { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (len == 0)  { 	return; } ` -topatch--> `if (false)  { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (len == 0)  { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 177, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (remaining > 0)  { 	int part = java.lang.Math.min(remaining, ((currentBuffer.length) - inBuffe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 180, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(b, ((off + len) - remaining), currentBuffer, inBufferPos, part) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 181, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `remaining -= part ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining > 0)  { 	needNewBuffer(newcount); 	inBufferPos = 0; } ` -topatch--> `if (true)  { 	needNewBuffer(newcount); 	inBufferPos = 0; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining > 0)  { 	needNewBuffer(newcount); 	inBufferPos = 0; } ` -topatch--> `if (false)  { 	needNewBuffer(newcount); 	inBufferPos = 0; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining > 0)  { 	needNewBuffer(newcount); 	inBufferPos = 0; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 188, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `count = newcount ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBufferIndex) < ((buffers.size()) - 1))  {  	filledBufferSum += currentBuffer.length;  	([...] ` -topatch--> `if (true)  {  	this.filledBufferSum += this.currentBuffer.length;  	(this.currentBufferIndex)++; 	th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBufferIndex) < ((buffers.size()) - 1))  {  	filledBufferSum += currentBuffer.length;  	([...] ` -topatch--> `if (false)  {  	this.filledBufferSum += this.currentBuffer.length;  	(this.currentBufferIndex)++; 	t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBufferIndex) < ((buffers.size()) - 1))  {  	filledBufferSum += currentBuffer.length;  	([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBuffer) == null)  { 	newBufferSize = newcount; 	filledBufferSum = 0; }else   { 	newBuffe[...] ` -topatch--> `if (true)  { 	newBufferSize = newcount; 	this.filledBufferSum = 0; }else   { 	newBufferSize = java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBuffer) == null)  { 	newBufferSize = newcount; 	filledBufferSum = 0; }else   { 	newBuffe[...] ` -topatch--> `if (false)  { 	newBufferSize = newcount; 	this.filledBufferSum = 0; }else   { 	newBufferSize = java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentBuffer) == null)  { 	newBufferSize = newcount; 	filledBufferSum = 0; }else   { 	newBuffe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 247, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newBufferSize = newcount ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 248, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `filledBufferSum = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 256, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(currentBufferIndex)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 257, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentBuffer = new byte[newBufferSize] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 258, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffers.add(currentBuffer) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 803, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(modCount.compareAndSet(expectedModCount, expectedModCount)))  { 	throw new java.util.Concurren[...] ` -topatch--> `if (true)  { 	throw new java.util.ConcurrentModificationException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 803, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(modCount.compareAndSet(expectedModCount, expectedModCount)))  { 	throw new java.util.Concurren[...] ` -topatch--> `if (false)  { 	throw new java.util.ConcurrentModificationException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 803, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(modCount.compareAndSet(expectedModCount, expectedModCount)))  { 	throw new java.util.Concurren[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (true)  { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (false)  { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (e == null)  { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 816, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((n == null) && (i > 0))  { 	n = t[(--i)]; }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 818, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `n = t[(--i)] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 16220
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 820, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `index = i ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 16258
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 821, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `next = n ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 16297
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 771, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return s ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null)  { 	return null; } ` -topatch--> `if (true)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null)  { 	return null; } ` -topatch--> `if (false)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null)  { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((searchFor == null) || ("".equals(searchFor)))  { 	return s; } ` -topatch--> `if (true)  { 	return s; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((searchFor == null) || ("".equals(searchFor)))  { 	return s; } ` -topatch--> `if (false)  { 	return s; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((searchFor == null) || ("".equals(searchFor)))  { 	return s; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWith == null)  { 	replaceWith = ""; } ` -topatch--> `if (true)  { 	replaceWith = ""; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWith == null)  { 	replaceWith = ""; } ` -topatch--> `if (false)  { 	replaceWith = ""; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWith == null)  { 	replaceWith = ""; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matchIndex == (-1))  {  	return s; }else   {    	int size = s.length(); 	final int replaceWithLe[...] ` -topatch--> `if (true)  {  	return s; }else   {    	int size = s.length(); 	final int replaceWithLength = replace[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matchIndex == (-1))  {  	return s; }else   {    	int size = s.length(); 	final int replaceWithLe[...] ` -topatch--> `if (false)  {  	return s; }else   {    	int size = s.length(); 	final int replaceWithLength = replac[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (matchIndex == (-1))  {  	return s; }else   {    	int size = s.length(); 	final int replaceWithLe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWithLength > searchForLength)  { 	size += replaceWithLength - searchForLength; } ` -topatch--> `if (true)  { 	size += replaceWithLength - searchForLength; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWithLength > searchForLength)  { 	size += replaceWithLength - searchForLength; } ` -topatch--> `if (false)  { 	size += replaceWithLength - searchForLength; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (replaceWithLength > searchForLength)  { 	size += replaceWithLength - searchForLength; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 791, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.string.Strings.append(buffer, s, pos, matchIndex) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 794, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.append(replaceWith) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 797, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pos = matchIndex + searchForLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 798, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `matchIndex = org.apache.wicket.util.string.Strings.search(s, searchString, pos) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 803, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.append(s.subSequence(pos, s.length())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 806, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return buffer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	org.apache.wicket.util.str[...] ` -topatch--> `if (true)  { 	org.apache.wicket.util.string.AppendingStringBuffer asb = ((org.apache.wicket.util.str[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	org.apache.wicket.util.str[...] ` -topatch--> `if (false)  { 	org.apache.wicket.util.string.AppendingStringBuffer asb = ((org.apache.wicket.util.st[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	org.apache.wicket.util.str[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1233, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.append(s.subSequence(from, to)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof java.lang.String)  { 	return ((java.lang.String) (s)).indexOf(searchString, pos); }[...] ` -topatch--> `if (true)  { 	return ((java.lang.String) (s)).indexOf(searchString, pos); }else 	if (s instanceof ja[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof java.lang.String)  { 	return ((java.lang.String) (s)).indexOf(searchString, pos); }[...] ` -topatch--> `if (false)  { 	return ((java.lang.String) (s)).indexOf(searchString, pos); }else 	if (s instanceof j[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s instanceof java.lang.String)  { 	return ((java.lang.String) (s)).indexOf(searchString, pos); }[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1273, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ((java.lang.String) (s)).indexOf(searchString, pos) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	return append(((org.apac[...] ` -topatch--> `if (true)  { 	return append(((org.apache.wicket.util.string.AppendingStringBuffer) (obj))); }else 	i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	return append(((org.apac[...] ` -topatch--> `if (false)  { 	return append(((org.apache.wicket.util.string.AppendingStringBuffer) (obj))); }else 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.wicket.util.string.AppendingStringBuffer)  { 	return append(((org.apac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuilder)  { 	return append(((java.lang.StringBuilder) (obj))); }e[...] ` -topatch--> `if (true)  { 	return append(((java.lang.StringBuilder) (obj))); }else 	if (obj instanceof java.lang.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuilder)  { 	return append(((java.lang.StringBuilder) (obj))); }e[...] ` -topatch--> `if (false)  { 	return append(((java.lang.StringBuilder) (obj))); }else 	if (obj instanceof java.lang[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuilder)  { 	return append(((java.lang.StringBuilder) (obj))); }e[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuffer)  { 	return append(obj.toString()); } ` -topatch--> `if (true)  { 	return append(obj.toString()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuffer)  { 	return append(obj.toString()); } ` -topatch--> `if (false)  { 	return append(obj.toString()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.StringBuffer)  { 	return append(obj.toString()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (str == null)  { 	str = java.lang.String.valueOf(str); } ` -topatch--> `if (true)  { 	str = java.lang.String.valueOf(str); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (str == null)  { 	str = java.lang.String.valueOf(str); } ` -topatch--> `if (false)  { 	str = java.lang.String.valueOf(str); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (str == null)  { 	str = java.lang.String.valueOf(str); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newcount > (value.length))  { 	expandCapacity(newcount); } ` -topatch--> `if (true)  { 	expandCapacity(newcount); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newcount > (value.length))  { 	expandCapacity(newcount); } ` -topatch--> `if (false)  { 	expandCapacity(newcount); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newcount > (value.length))  { 	expandCapacity(newcount); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 379, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `str.getChars(0, len, value, count) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 380, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `count = newcount ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 285.672
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Wicket-bcea89fc
TOTAL_TIME=285.672
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=305
NR_FAILLING_COMPILATIONS=21
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jKali_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":305,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Wicket-bcea89fc","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":21,"NR_GENERATIONS":null,"TOTAL_TIME":285.672,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 306.293
393.36user 28.96system 5:07.04elapsed 137%CPU (0avgtext+0avgdata 1804076maxresident)k
98976inputs+151256outputs (51major+5185212minor)pagefaults 0swaps


Node: grisou-27.nancy.grid5000.fr



Date: Sat Dec 29 17:36:59 EST 2018

