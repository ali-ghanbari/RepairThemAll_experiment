{
  "repair_end": "2018-12-29 11:24:27.323642", 
  "repair_begin": "2018-12-29 11:17:53.874733", 
  "patches": [
    {
      "nb_test_that_execute_statement": 9, 
      "patchLocation": {
        "line": 97, 
        "class": "org.apache.accumulo.server.security.delegation.AuthenticationTokenSecretManager"
      }, 
      "patchType": "PRECONDITION", 
      "patch": "--- a/server/base/src/main/java/org/apache/accumulo/server/security/delegation/AuthenticationTokenSecretManager.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/security/delegation/AuthenticationTokenSecretManager.java\n@@ -97,13 +97,15 @@\n       if (0 < requestedLifetime) {\n-        long requestedExpirationDate = identifier.getIssueDate() + requestedLifetime;\n-        // Catch overflow again\n-        if (requestedExpirationDate < identifier.getIssueDate()) {\n-          requestedExpirationDate = Long.MAX_VALUE;\n+        if (0 < requestedLifetime) {\n+          long requestedExpirationDate = identifier.getIssueDate() + requestedLifetime;\n+          // Catch overflow again\n+          if (requestedExpirationDate < identifier.getIssueDate()) {\n+            requestedExpirationDate = Long.MAX_VALUE;\n+          }\n+          // Ensure that the user doesn't try to extend the expiration date -- they may only limit it\n+          if (requestedExpirationDate > identifier.getExpirationDate()) {\n+            throw new RuntimeException(\"Requested token lifetime exceeds configured maximum\");\n+          }\n+          log.trace(\"Overriding token expiration date from {} to {}\", identifier.getExpirationDate(), requestedExpirationDate);\n+          identifier.setExpirationDate(requestedExpirationDate);\n         }\n-        // Ensure that the user doesn't try to extend the expiration date -- they may only limit it\n-        if (requestedExpirationDate > identifier.getExpirationDate()) {\n-          throw new RuntimeException(\"Requested token lifetime exceeds configured maximum\");\n-        }\n-        log.trace(\"Overriding token expiration date from {} to {}\", identifier.getExpirationDate(), requestedExpirationDate);\n-        identifier.setExpirationDate(requestedExpirationDate);\n       }\n"
    }
  ]
}