{
  "repair_end": "2018-12-29 02:13:52.300625", 
  "repair_begin": "2018-12-29 02:02:47.503723", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1678/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:23.124666633 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1678/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:23.128666650 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2082/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:39.808975332 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_804/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:31.475982248 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_950/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:56.708078238 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_950/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:56.712078254 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1826/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:49.936775485 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1826/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:49.940775501 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1826/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:49.940775501 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_834/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:36.448001191 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_834/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:36.452001206 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2172/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:57.089043871 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_907/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:49.224049804 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2750/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:56.557516310 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_83/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:03:57.373997463 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_83/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:57.373997463 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_606/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:53.979798229 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_606/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:53.979798229 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_152/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:19.649998494 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1520/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:46.604516527 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2451/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:54.881272300 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2451/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:54.885272316 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1296/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:06.348348250 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2790/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:03.821544806 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1735/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:33.600709292 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2765/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:59.121526374 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -166,8 +153,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2765/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:59.121526374 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1098/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:24.280182752 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1111/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:26.784192225 -0500\n@@ -48,11 +48,9 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1111/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:26.784192225 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_642/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:01.807864140 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2247/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:17.085122779 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2247/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:17.085122779 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2113/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:45.504997961 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_648/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:02.767871623 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2419/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:48.605247243 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2419/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:48.609247259 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1022/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:10.116129110 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2841/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:13.053580957 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_54/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:44.085996849 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_960/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:58.616085484 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_960/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:58.616085484 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1815/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:47.868767127 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1815/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:47.872767143 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2423/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:49.249249816 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_936/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:54.228068819 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1120/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:28.316198020 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2799/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:05.881552879 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2830/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:11.209573742 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1863/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:56.820803265 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_300/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:56.770827080 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2170/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:56.769042604 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2033/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:29.508934313 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2033/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:29.512934329 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_161/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:21.209998566 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_457/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:25.707449418 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2080/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:39.296973296 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2080/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:39.300973311 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_768/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:24.651956225 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_768/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:24.651956225 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_222/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:40.942436090 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_222/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:40.942436090 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2565/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:22.237381008 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_952/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:57.012079393 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2981/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:45.613707898 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2731/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:52.721501242 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_971/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:00.748093576 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_971/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:00.752093592 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1374/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:20.516407839 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2237/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:15.129115079 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_231/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:42.502482420 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_583/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:49.571756710 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_583/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:49.571756710 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2035/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:29.832935606 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2589/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:26.473397770 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2589/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:26.473397770 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1501/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:42.704500360 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1501/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:42.708500377 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_940/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:54.852071190 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1896/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:03.476830063 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1896/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:03.480830078 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1890/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:02.540826298 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_388/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:13.543209687 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_111/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:10.181998056 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_111/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:10.181998056 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1173/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:37.972234518 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1173/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:37.972234518 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1456/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:34.480466177 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1205/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:44.640259697 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1205/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:44.644259712 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1050/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:15.092147966 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1050/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:15.092147966 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_339/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:04.354969516 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1009/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:07.612119616 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1009/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:07.612119616 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1909/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:06.260841253 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1216/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:46.832267970 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1616/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:10.168613637 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_422/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:19.099328697 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_422/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:19.103328775 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2744/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:55.297511362 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2744/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:55.301511378 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1491/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:40.780492375 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_762/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:23.723952684 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_400/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:15.387250911 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2937/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:31.085651361 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -164,15 +151,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2937/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:31.085651361 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_267/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:49.846676153 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_284/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:53.618761129 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1141/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:32.084212268 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_518/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:37.495621689 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1323/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:11.588370338 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_921/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:51.732059336 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1625/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:12.116621622 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1625/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:12.120621639 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_884/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:44.888033315 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2828/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:10.905572552 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1802/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:45.680758277 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_166/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:22.169998610 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_166/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:22.169998610 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_166/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:22.169998610 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2837/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:12.445578578 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2321/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:30.257174537 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2159/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:54.393033200 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2291/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:24.961153748 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2526/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:15.093352697 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2335/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:32.497183322 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2185/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:59.585053744 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2185/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:59.585053744 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2200/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:08.233087899 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2664/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:40.253452175 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2664/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:40.253452175 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2470/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:58.309285968 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1055/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:16.052151603 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1247/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:58.088313314 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1247/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:58.092313331 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2567/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:22.541382212 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1300/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:06.960350833 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1300/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:06.960350833 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2414/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:47.673243518 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2414/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:47.673243518 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2529/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:15.729355219 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_740/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:19.603936957 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_740/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:19.603936957 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1596/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:00.712574783 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2572/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:23.673386693 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_535/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:40.575659638 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_535/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:40.575659638 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_535/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:40.575659638 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_287/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:54.250774810 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_287/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:54.254774897 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_287/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:54.254774897 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1386/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:22.664416838 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2882/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:20.353609490 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1116/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:27.712195736 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1602/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:07.656603330 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1844/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:53.360789310 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2696/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:46.017474877 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1446/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:32.548458128 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2672/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:41.553457298 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_685/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:09.295897565 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1030/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:11.356133810 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1836/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:51.788782965 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_137/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:16.269998337 -0500\n@@ -48,21 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_137/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:16.269998337 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2362/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:37.925204592 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1847/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:54.028792006 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2456/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:55.793275938 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1623/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:11.724620015 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_662/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:05.247882077 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1859/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:55.896799540 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1859/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:55.896799540 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2973/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:44.369703063 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_771/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:25.263958560 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2030/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:28.800931490 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_490/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:32.279551271 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_490/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:32.279551271 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_149/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:18.969998462 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_341/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:04.658978528 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1594/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:00.408573531 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1594/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:00.408573531 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2935/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:30.725649958 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2102/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:43.616990465 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2102/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:43.616990465 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +169,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2044/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:31.372941746 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_188/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:32.686153391 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1666/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:20.696656722 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1666/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:20.696656722 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1418/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:27.916438803 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1118/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:28.016196886 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2000/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:23.448910122 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1629/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:12.748624212 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1629/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:12.748624212 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2152/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:53.133028209 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2768/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:59.745528822 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1539/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:50.056530814 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1988/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:21.244901311 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_307/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:58.030851988 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2163/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:55.525037681 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2007/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:24.800915523 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2634/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:34.913431114 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2182/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:58.965051292 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_699/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:11.767907017 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_699/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:11.767907017 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2295/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:25.569156136 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2054/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:33.536950369 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2811/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:08.065561434 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2811/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:08.069561450 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2191/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:06.649081649 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_394/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:14.467230614 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2416/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:47.997244813 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2416/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:47.997244813 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2333/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:32.189182115 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1767/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:39.412732887 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1767/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:39.416732903 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2204/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:08.845090313 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_265/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:49.538668869 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_265/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:49.538668869 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2179/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:58.305048681 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2823/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:09.917568685 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2823/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:09.921568701 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_409/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:16.927283946 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1758/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:37.676725844 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_875/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:43.300027273 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2383/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:41.373218311 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_417/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:18.179309795 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_675/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:07.399890312 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2918/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:27.625637872 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2918/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:27.629637887 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_29/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:37.161996528 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:45.942577625 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:45.946577732 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2315/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:29.349170975 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1781/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:41.884742908 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_280/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:53.010747968 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -164,15 +162,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_280/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:53.014748054 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_203/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:36.514292360 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_411/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:17.235290305 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1950/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:13.824871608 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1122/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:28.616199155 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_784/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:27.447966890 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2285/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:23.965149835 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2285/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:23.969149851 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_574/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:48.031740880 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_592/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:51.123771680 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1400/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:24.808425811 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1036/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:12.276137297 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1384/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:22.360415565 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2279/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:23.025146141 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1610/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:08.916608501 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_271/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:50.470690910 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1589/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:59.496569775 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_778/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:26.491963245 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_964/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:59.524088931 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_964/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:59.528088946 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_719/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:15.207920165 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_719/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:15.211920181 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_750/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:21.479944120 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_750/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:21.483944135 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2188/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:00.289056527 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_322/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:00.890904830 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1407/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:26.060431047 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1407/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:26.060431047 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1737/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:33.912710560 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1737/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:33.912710560 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2581/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:25.233392866 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2358/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:37.001200973 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1255/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:59.348318652 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2963/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:42.441695567 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_849/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:39.024011000 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_155/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:20.273998523 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_155/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:20.277998523 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1075/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:19.888166129 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_200/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:35.882270452 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2364/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:38.233205797 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2364/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:38.237205813 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2910/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:25.901631147 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1963/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:16.468882200 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1813/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:47.556765865 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1813/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:47.560765882 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_96/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:00.241997596 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2376/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:40.137213360 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_892/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:46.456039278 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2293/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:25.265154942 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1690/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:25.344675687 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1722/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:30.944698493 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1528/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:47.880521811 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1528/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:47.884521827 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2902/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:24.661626309 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2902/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:24.661626309 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2803/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:06.497555292 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2803/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:06.497555292 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2603/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:29.289408903 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1096/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:23.956181527 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_315/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:59.606881594 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1044/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:13.840143222 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -165,13 +163,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1044/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:13.840143222 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2632/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:34.609429915 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_585/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:49.891759796 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_585/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:49.891759796 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2711/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:48.877486130 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2711/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:48.877486130 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_697/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:11.455905825 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_713/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:14.231916436 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_780/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:26.795964404 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_780/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:26.799964419 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_196/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:34.954238187 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_196/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:34.954238187 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1652/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:16.832640930 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2011/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:25.412917967 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2011/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:25.412917967 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_236/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:43.418508761 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_263/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:49.190660639 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_263/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:49.190660639 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_798/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:30.547978710 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_886/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:45.204034517 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1504/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:43.344503015 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1107/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:25.836188640 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -165,13 +152,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1107/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:25.840188655 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_673/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:07.099889164 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1806/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:46.308760818 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_711/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:13.923915259 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_711/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:13.923915259 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1664/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:20.380655431 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2650/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:37.749442303 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1851/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:54.648794508 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_404/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:15.983264407 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1476/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:38.276481971 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1476/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:38.276481971 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2835/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:12.137577373 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_353/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:06.559032752 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_353/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:06.559032752 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1783/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:42.232744317 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_670/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:06.483886807 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1311/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:09.092359824 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1777/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:41.272740427 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1777/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:41.272740427 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_863/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:41.456020256 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1460/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:35.100468759 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2605/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:29.589410089 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1253/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:59.024317280 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2243/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:16.449120276 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2243/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:16.449120276 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_894/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:46.768040466 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1409/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:26.388432417 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_668/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:06.183885659 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2072/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:37.736967090 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2072/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:37.736967090 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_67/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:47.693997015 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_224/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:41.254445407 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1163/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:36.124227536 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1163/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:36.124227536 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1576/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:57.332560857 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1576/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:57.332560857 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_40/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:40.169996667 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1184/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:40.244243099 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1184/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:40.248243115 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1849/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:54.340793265 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1648/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:16.172638230 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_652/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:03.383874941 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1007/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:07.272118327 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1480/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:38.900484565 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1480/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:38.900484565 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2843/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:13.369582193 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2843/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:13.373582209 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1257/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:59.684320076 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1257/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:59.684320076 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2460/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:56.425278458 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_754/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:22.499948013 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_754/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:22.499948013 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1944/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:12.864867759 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2492/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:02.885304192 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2193/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:06.989082991 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2193/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:06.993083006 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2399/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:44.313230080 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2967/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:43.077698040 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2967/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:43.081698055 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1506/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:43.672504376 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1506/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:43.672504376 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2563/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:21.929379789 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_386/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:13.243202593 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_94/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:59.917997581 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_21/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:03:29.025996152 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_21/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:29.025996152 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_227/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:41.870463676 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1281/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:03.752337286 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2221/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:12.009102788 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_899/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:47.692043978 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_559/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:45.551715476 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1948/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:13.516870373 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1948/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:13.520870389 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_91/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:59.285997552 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2297/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:25.873157330 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_838/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:37.088003628 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_838/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:37.088003628 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1014/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:08.532123104 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_549/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:43.331691166 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1591/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:59.800571028 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1669/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:21.304659205 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_919/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:51.416058135 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_186/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:32.378141481 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1442/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:31.936455578 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_925/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:52.360061722 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_925/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:52.364061737 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_856/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:40.232015598 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_50/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:43.117996804 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1405/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:25.712429591 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_177/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:24.373998712 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_177/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:24.373998712 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2501/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:04.493310590 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_163/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:21.533998581 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_163/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:21.533998581 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2585/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:25.849395303 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_991/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:04.436107571 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1513/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:45.196510694 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1513/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:45.196510694 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1792/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:43.800750668 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2385/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:41.749219818 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2385/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:41.749219818 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_498/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:33.807572850 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_498/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:33.811572905 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1769/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:39.720734136 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1526/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:47.568520519 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1390/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:23.292419467 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1620/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:11.100617458 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1210/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:45.916264513 -0500\n@@ -48,11 +48,9 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1210/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:45.920264528 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1351/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:16.236389882 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_581/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:49.263753739 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_581/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:49.263753739 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_832/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:36.148000048 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1349/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:15.936388622 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2887/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:21.297613177 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2056/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:33.848951612 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2557/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:20.705374941 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2374/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:39.801212015 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2299/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:26.513159843 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2299/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:26.513159843 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_488/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:31.915545940 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1028/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:11.052132658 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1942/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:12.556866524 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2534/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:16.649358868 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_125/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:13.697998218 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_125/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:13.701998219 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:09.919899951 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:09.919899951 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_531/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:39.959651896 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_507/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:35.331593647 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_175/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:24.057998698 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2327/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:31.265178492 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_135/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:15.937998322 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_608/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:54.307801093 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1808/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:46.612762047 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1487/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:40.128489667 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1101/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:24.900185098 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1286/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:04.676341190 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2272/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:21.769141204 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2218/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:11.385100328 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2218/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:11.389100344 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2261/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:19.593132648 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2261/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:19.593132648 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2510/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:06.025316683 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1916/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:07.804847455 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_435/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:21.631376817 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2323/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:30.561175730 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2394/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:43.369226303 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2394/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:43.369226303 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_627/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:58.391836403 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2723/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:51.449496243 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2690/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:44.785470027 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2690/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:44.785470027 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2813/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:08.369562625 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1001/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:06.340114793 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1001/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:06.340114793 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1411/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:26.696433705 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2674/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:41.857458496 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1772/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:40.320736568 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_513/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:36.551609751 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_513/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:36.551609751 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_758/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:23.115950364 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2666/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:40.605453562 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2433/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:51.069257086 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2134/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:49.281012943 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1302/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:07.260352099 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_229/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:42.194473285 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1498/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:42.084497788 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_742/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:19.919938164 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_742/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:19.919938164 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2770/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:00.117530281 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_361/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:08.487084573 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1558/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:53.592545426 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1230/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:55.340301658 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_938/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:54.536069990 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2494/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:03.241305608 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2494/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:03.241305608 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1398/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:24.504424539 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_392/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:14.163224034 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3007/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:50.369726371 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2121/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:46.757002930 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1268/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:01.572328068 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1268/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:01.572328068 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_554/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:44.627705640 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_159/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:20.897998551 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_537/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:40.883663533 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_537/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:40.883663533 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2209/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:09.777093989 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1977/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:19.328893648 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1977/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:19.332893664 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1977/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:19.332893664 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2368/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:38.861208259 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2944/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:38.393679821 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2944/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:38.393679821 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1067/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:18.008159011 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_296/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:55.830808305 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1333/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:13.168376986 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1333/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:13.168376986 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1333/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:13.168376986 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2927/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:29.181643939 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_433/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:21.323371073 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2815/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:08.693563893 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2289/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:24.621152412 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1154/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:34.580221702 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1145/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:32.700214596 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_269/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:50.166683721 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_269/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:50.166683721 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2224/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:12.641105278 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2224/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:12.641105278 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1470/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:37.052476882 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_351/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:06.243024015 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1026/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:10.728131430 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_680/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:08.363893999 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_680/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:08.363893999 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2475/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:59.237289665 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1372/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:20.208406548 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2636/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:35.217432314 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2986/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:46.561711581 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2703/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:47.269479804 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2496/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:03.561306882 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1485/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:39.824488404 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +169,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_181/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:25.325998756 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_181/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:25.325998756 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1124/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:28.928200335 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1509/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:44.276506880 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1509/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:44.276506880 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_644/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:02.135866676 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2866/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:17.545598520 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1320/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:10.952367660 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2747/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:55.941513891 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1571/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:56.404557030 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2904/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:24.969627511 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2858/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:15.909592125 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_986/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:03.520104095 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_415/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:17.871303436 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_415/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:17.871303436 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2652/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:38.053443501 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2117/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:46.141000486 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2117/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:46.145000501 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3012/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:51.293729959 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2443/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:53.241265757 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2759/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:58.145522544 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1979/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:19.628894849 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2682/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:43.397464562 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2682/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:43.401464578 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2656/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:38.669445930 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1188/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:41.188246664 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1188/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:41.188246664 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1986/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:20.936900080 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2077/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:38.668970798 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1522/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:46.908517786 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1720/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:30.648697288 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1643/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:15.256634481 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_503/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:34.719585295 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_503/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:34.723585350 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_646/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:02.447869117 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_611/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:54.959806730 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_611/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:54.959806730 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1396/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:24.208423301 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_867/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:42.056022541 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_701/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:12.075908195 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2453/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:55.189273529 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1936/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:11.316861551 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1936/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:11.316861551 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1633/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:13.696628095 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1633/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:13.696628095 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2138/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:50.321017066 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_326/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:01.514915927 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1394/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:23.904422029 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1065/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:17.704157859 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_444/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:23.167405297 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1241/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:57.160309380 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1241/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:57.160309380 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1832/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:51.164780446 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1832/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:51.168780462 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_578/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:48.643747394 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_368/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:09.759117715 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1928/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:10.084856608 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1957/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:15.248877313 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1957/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:15.248877313 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2407/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:46.145237409 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1270/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:01.884329388 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1270/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:01.884329388 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2337/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:32.801184515 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_625/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:58.091833810 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_495/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:33.191564444 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_413/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:17.543296663 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:32.904459613 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:32.904459613 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:32.904459613 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1779/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:41.580741676 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1071/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:18.968162646 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1998/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:23.140908891 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1998/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:23.140908891 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2755/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:57.509520047 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2662/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:39.941450945 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2662/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:39.941450945 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1472/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:37.372478212 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_372/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:10.435134623 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_372/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:10.439134722 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2039/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:30.444938046 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1726/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:31.580701079 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1871/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:58.776811145 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2793/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:04.481547393 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2793/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:04.481547393 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2611/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:30.837415020 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1053/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:15.744150436 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1053/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:15.744150436 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1379/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:21.452411762 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1635/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:14.008629373 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1635/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:14.012629389 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_840/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:37.456005030 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1797/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:44.752754522 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_139/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:16.585998352 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_449/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:24.095421672 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_449/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:24.099421743 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_449/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:24.099421743 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2868/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:17.845599692 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2897/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:23.721622640 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_815/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:33.351989397 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2884/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:20.661610694 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1196/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:42.768252630 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1196/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:42.768252630 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1692/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:25.648676926 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1692/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:25.652676943 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2370/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:39.165209466 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_527/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:39.019640949 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1560/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:53.908546731 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1853/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:54.968795798 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2965/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:42.769696843 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_923/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:52.048060536 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_923/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:52.048060536 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_390/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:13.859217159 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1907/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:05.932839936 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1088/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:22.396175622 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1088/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:22.400175638 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2100/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:43.288989162 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2100/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:43.292989178 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2436/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:51.685259546 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_683/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:08.979896356 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_683/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:08.979896356 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1830/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:50.860779218 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2954/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:40.269687119 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2341/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:33.417186929 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2392/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:43.053225038 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1775/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:40.936739066 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1775/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:40.940739082 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1775/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:40.940739082 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2908/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:25.593629945 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1388/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:22.972418128 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1435/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:30.676450323 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_485/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:31.283536684 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1857/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:55.592798314 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1091/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:23.020177984 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1424/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:28.872442794 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_601/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:53.047789241 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_533/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:40.263655693 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2308/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:28.057165905 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2308/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:28.061165920 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_650/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:03.083873793 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_616/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:56.175817244 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_616/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:56.179817279 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2097/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:42.652986635 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2773/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:00.733532697 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1331/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:12.824375539 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2583/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:25.545394100 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2583/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:25.545394100 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_440/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:22.547393896 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2785/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:02.905541215 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2785/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:02.909541231 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2623/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:33.037423709 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2623/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:33.037423709 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2623/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:33.037423709 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1920/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:08.432849978 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_568/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:47.075731633 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_568/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:47.075731633 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_374/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:10.743142214 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_465/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:27.591480194 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_347/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:05.619006376 -0500\n@@ -48,11 +48,9 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_347/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:05.619006376 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2630/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:34.301428699 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1232/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:55.648302966 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_934/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:53.896067558 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_934/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:53.896067558 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2839/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:12.745579752 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2014/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:26.020920395 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2851/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:14.625587105 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2851/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:14.625587105 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1083/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:21.460172080 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_370/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:10.063125455 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_946/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:56.088075885 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2975/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:44.673704244 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_766/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:24.335955020 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_635/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:00.279851727 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_635/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:00.283851762 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1366/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:19.300402741 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_402/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:15.683257613 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2514/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:06.641319132 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1637/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:14.316630634 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2971/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:44.041701787 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2971/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:44.041701787 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_708/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:13.319912950 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1930/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:10.384857812 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_978/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:01.972098222 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1228/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:55.040300386 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2783/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:02.597540008 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2783/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:02.597540008 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2213/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:10.465096701 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_695/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:11.139904617 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2761/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:58.481523862 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2468/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:57.997284724 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2468/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:57.997284724 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2648/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:37.441441088 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_726/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:16.435924858 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_726/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:16.435924858 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_913/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:50.464054517 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2263/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:19.905133875 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2002/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:23.760911368 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2483/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:00.841296054 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_461/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:26.651465131 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_461/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:26.655465197 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_343/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:04.958987422 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1660/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:19.736652801 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2254/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:18.313127612 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1882/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:00.988820052 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1882/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:00.992820069 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1627/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:12.420622867 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2949/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:39.337683494 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2132/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:48.973011722 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2132/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:48.977011737 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2132/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:48.977011737 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2997/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:48.781720205 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2997/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:48.785720220 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2997/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:48.785720220 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2239/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:15.433116276 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2239/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:15.433116276 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1261/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:00.316322752 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_932/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:53.592066403 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1712/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:29.088690940 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1712/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:29.088690940 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1712/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:29.092690956 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2741/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:54.669508895 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_774/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:25.883960926 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_774/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:25.887960941 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1166/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:36.736229848 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_836/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:36.784002471 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_836/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:36.788002485 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1462/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:35.400470007 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1202/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:44.028257387 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_760/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:23.419951524 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1680/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:23.436667906 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1245/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:57.784312026 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1568/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:55.768554407 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1568/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:55.768554407 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1761/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:38.440728944 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1586/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:58.884567254 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1743/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:35.144715565 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1743/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:35.148715582 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_566/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:46.763728380 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_419/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:18.487316153 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_419/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:18.491316236 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2574/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:23.981387912 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_619/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:56.807822708 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_474/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:29.455509359 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3009/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:50.677727567 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3009/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:50.681727582 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2626/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:33.697426315 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1932/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:10.696859064 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1584/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:58.588566035 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2197/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:07.601085406 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1288/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:05.104342998 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_539/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:41.183667151 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1710/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:28.772689653 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1710/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:28.776689669 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2229/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:13.565108919 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2809/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:07.749560197 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1547/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:51.728537726 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_853/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:39.628013299 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1716/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:30.020694733 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1178/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:38.980238326 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_877/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:43.620028491 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_313/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:59.302875884 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2405/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:45.837236177 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2872/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:18.469602130 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2872/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:18.469602130 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2555/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:20.401373738 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2684/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:43.721465838 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2693/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:45.409472484 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1304/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:07.560353364 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_723/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:15.819922505 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2777/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:01.645536275 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1751/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:36.428720779 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1751/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:36.428720779 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2481/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:00.521294779 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -165,13 +152,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2481/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:00.525294796 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2268/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:21.129138688 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2268/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:21.129138688 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_425/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:19.743341349 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2348/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:34.977193044 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2735/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:53.345503694 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2735/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:53.345503694 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_345/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:05.302997324 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_345/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:05.306997439 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2680/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:43.089463349 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2680/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:43.089463349 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2628/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:33.997427499 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2022/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:27.552926510 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_756/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:22.807949189 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1952/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:14.248873307 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1159/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:35.492225148 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2174/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:57.389045058 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2587/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:26.157396521 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1170/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:37.356232191 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1537/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:49.752529556 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1537/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:49.752529556 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2795/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:04.789548600 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1465/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:36.036472655 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1465/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:36.040472672 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2906/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:25.281628728 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_738/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:19.283935736 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_738/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:19.283935736 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1061/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:17.060155421 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1061/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:17.064155436 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1276/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:02.812333313 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_242/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:44.366534978 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_242/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:44.370535089 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1834/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:51.484781738 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1834/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:51.488781754 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -165,13 +152,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1834/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:51.488781754 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2085/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:40.460977924 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2551/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:19.425369871 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_657/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:04.315878509 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2119/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:46.453001724 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_58/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:03:45.081996895 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_58/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:45.085996895 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1641/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:14.948633221 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1641/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:14.948633221 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2925/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:28.857642676 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1894/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:03.168828824 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1894/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:03.168828824 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_349/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:05.923015085 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1608/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:08.612607253 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2319/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:29.953173345 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2319/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:29.953173345 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2104/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:43.936991736 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:01.268326782 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:01.268326782 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2024/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:27.860927739 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_438/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:22.243388228 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2677/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:42.469460907 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2677/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:42.469460907 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_847/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:38.708009797 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1580/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:57.956563430 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1580/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:57.960563446 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1580/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:57.960563446 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2287/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:24.313151202 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2287/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:24.313151202 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1143/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:32.388213416 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1168/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:37.048231027 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_969/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:00.432092377 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1212/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:46.228265691 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1212/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:46.228265691 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1212/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:46.232265706 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1278/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:03.132334665 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1278/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:03.132334665 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_811/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:32.723987003 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_811/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:32.727987019 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_522/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:38.119629580 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_522/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:38.123629630 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2425/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:49.557251047 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2933/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:30.413648741 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1785/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:42.560745645 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2727/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:52.093498774 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2727/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:52.093498774 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2727/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:52.093498774 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1996/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:22.800907532 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1996/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:22.800907532 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_747/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:20.851941723 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2202/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:08.537089098 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2668/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:40.933454855 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1136/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:31.152208744 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2241/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:16.113118953 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2123/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:47.069004169 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2579/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:24.929391663 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1926/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:09.768855340 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_693/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:10.835903454 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1316/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:10.040363818 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1316/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:10.044363836 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2593/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:27.409401472 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2941/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:32.029655039 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_127/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:14.013998233 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2895/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:23.417621454 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2005/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:24.492914292 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1515/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:45.500511953 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_572/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:47.715737806 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_572/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:47.719737846 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_905/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:48.916048632 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1905/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:05.624838698 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:44.477468815 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:44.477468815 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1578/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:57.636562111 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1578/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:57.636562111 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2957/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:40.905689593 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2957/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:40.905689593 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2957/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:40.909689609 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1313/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:09.416361189 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1313/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:09.420361206 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_545/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:42.415681091 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2508/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:05.721315474 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2595/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:27.721402705 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2595/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:27.721402705 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1756/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:37.364724579 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1756/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:37.368724595 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1415/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:27.304436245 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1415/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:27.308436262 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_406/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:16.307271145 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1708/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:28.464688399 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1343/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:14.712383479 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1676/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:22.804665327 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2449/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:54.537270928 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_483/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:30.983532290 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1005/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:06.964117159 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2705/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:47.605481126 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1573/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:56.716558318 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1573/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:56.716558318 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1790/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:43.504749469 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1821/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:48.972771590 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2715/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:49.897490141 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_289/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:54.602782430 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2062/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:34.884955738 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1741/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:34.832714298 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1993/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:22.184905069 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1047/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:14.476145633 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1354/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:16.852392469 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1012/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:08.220121922 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1012/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:08.224121936 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2845/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:13.693583460 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2845/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:13.693583460 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2725/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:51.757497453 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2725/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:51.757497453 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_570/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:47.399734759 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_570/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:47.403734797 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_431/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:21.019365405 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2339/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:33.109185722 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_654/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:03.695876136 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1377/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:21.148410488 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1377/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:21.152410505 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3005/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:50.061725175 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2389/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:42.421222508 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1765/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:39.096731606 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1765/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:39.100731622 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1763/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:38.788730356 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2207/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:09.469092774 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_89/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:58.969997537 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1914/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:07.500846234 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2301/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:26.821161052 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_858/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:40.532016740 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_452/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:24.739433036 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_452/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:24.743433107 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1337/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:13.784379577 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1337/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:13.784379577 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1042/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:13.524142025 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_999/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:05.980113427 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1370/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:19.904405274 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_317/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:59.946887982 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_317/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:59.946887982 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_776/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:26.191962100 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_524/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:38.419633373 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3003/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:49.757723995 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2356/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:36.677199704 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1094/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:23.644180346 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1094/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:23.644180346 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_74/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:49.341997092 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_216/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:39.982406633 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_216/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:39.986406760 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1283/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:04.060338588 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1478/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:38.588483268 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1892/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:02.860827585 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2087/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:40.780979196 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1582/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:58.268564715 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1582/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:58.268564715 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2490/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:02.581302982 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_984/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:03.204102897 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_984/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:03.204102897 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2311/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:28.681168354 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_809/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:32.411985815 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_809/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:32.411985815 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_828/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:35.527997686 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2109/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:44.860995404 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2707/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:47.953482495 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1946/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:13.196869090 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2017/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:26.636922854 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2270/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:21.461139994 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1428/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:29.472445299 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1428/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:29.472445299 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1362/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:18.392398933 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1225/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:54.420297753 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1225/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:54.420297753 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_324/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:01.194910236 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_505/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:35.027589499 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1003/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:06.660116006 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2325/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:30.869176939 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1604/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:07.980604659 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1604/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:07.980604659 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1222/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:53.800295119 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_116/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:11.453998115 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_116/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:11.453998115 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2920/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:27.933639073 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2512/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:06.333317908 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2990/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:47.181713990 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1685/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:24.404671854 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_728/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:16.743926034 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2847/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:14.005584681 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2847/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:14.009584696 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_238/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:43.742517721 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:25.036674432 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1688/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:25.040674448 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2143/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:51.253020760 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1879/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:00.336817428 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1817/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:48.172768356 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2992/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:47.821716476 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_623/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:57.767831008 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2498/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:03.869308108 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2889/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:21.813615192 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2833/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:11.829576168 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1899/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:04.376833681 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_383/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:12.635188216 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_880/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:44.256030910 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_664/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:05.555883255 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_664/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:05.555883255 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_446/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:23.479410802 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_446/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:23.479410802 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1272/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:02.196330707 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1551/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:52.348540288 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2265/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:20.213135086 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2028/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:28.480930213 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2165/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:55.849038964 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_171/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:23.121998654 -0500\n@@ -163,11 +163,7 @@\n       if (combiners.isEmpty() || combiners.contains(workKey)) {\n         if (workKey.isDeleted())\n           return;\n-        topKey = workKey;\n         Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2532/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:16.345357663 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1671/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:21.616660479 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1671/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:21.616660479 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_471/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:28.859500034 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1673/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:21.920661719 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1954/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:14.572874605 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_871/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:42.680024915 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_871/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:42.680024915 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_871/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:42.684024930 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2051/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:32.928947948 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2051/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:32.928947948 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_588/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:50.499765662 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_845/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:38.380008548 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1437/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:31.012451725 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1437/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:31.016451742 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_596/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:52.075780796 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2538/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:17.261361295 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_454/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:25.079438964 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2421/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:48.921248506 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2421/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:48.925248522 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2540/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:17.569362516 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1413/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:26.996434959 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:43.728256254 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:43.728256254 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1292/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:05.744345701 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1292/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:05.748345717 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2329/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:31.577179715 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_598/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:52.379783423 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_745/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:20.543940547 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_745/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:20.543940547 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2763/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:58.801525118 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2763/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:58.801525118 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_851/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:39.324012142 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2257/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:18.925130020 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1057/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:16.372152815 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1057/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:16.372152815 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2577/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:24.625390460 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2577/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:24.625390460 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:25.516187429 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1190/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:41.508247872 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1190/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:41.508247872 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2600/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:28.649406374 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_789/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:28.663971528 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1662/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:20.064654141 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1161/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:35.816226372 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_363/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:08.791092674 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_562/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:46.155721907 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1243/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:57.468310686 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1040/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:13.216140859 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_131/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:14.977998278 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_131/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:14.977998278 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_131/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:14.981998278 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2458/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:56.125277262 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -164,15 +162,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2458/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:56.125277262 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_807/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:32.107984657 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1034/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:11.968136130 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1034/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:11.972136145 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1696/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:26.268679454 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:20.196167295 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1983/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:20.300897536 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2430/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:50.465254674 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_303/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:57.378839111 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2313/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:29.025169704 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2313/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:29.025169704 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2544/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:18.197365005 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2570/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:23.329385332 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_802/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:31.167981073 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_802/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:31.167981073 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1126/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:29.248201545 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2951/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:39.649684708 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2951/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:39.653684723 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_220/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:40.618426156 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2317/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:29.653172168 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2141/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:50.941019524 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2912/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:26.233632442 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2912/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:26.233632442 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1356/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:17.164393779 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1356/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:17.164393779 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1274/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:02.508332027 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1274/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:02.508332027 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1966/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:17.088884683 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1966/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:17.092884699 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_629/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:58.707839136 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_629/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:58.707839136 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2733/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:53.029502453 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1545/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:51.280535875 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2613/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:31.157416284 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_873/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:42.992026102 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_930/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:53.288065248 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2618/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:32.085419950 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1888/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:02.232825058 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1063/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:17.400156708 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1329/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:12.524374277 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1811/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:47.248764620 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1327/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:12.212372964 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1841/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:52.740786808 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_842/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:37.756006172 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2893/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:22.417617550 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2037/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:30.144936850 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2037/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:30.148936866 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_336/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:03.738954738 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_989/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:04.128106403 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1016/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:08.836124257 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2979/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:45.305706701 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2947/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:38.997682171 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1698/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:26.564680660 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_903/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:48.612047477 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1079/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:20.508168476 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_330/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:02.142927096 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_330/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:02.146927167 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_666/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:05.879884495 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2216/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:11.073099099 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_819/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:33.987991820 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1114/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:27.412194601 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1114/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:27.412194601 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1335/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:13.472378265 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2660/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:39.621449684 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2660/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:39.625449700 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2472/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:58.617287195 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2227/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:13.265107737 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_520/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:37.799625533 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2352/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:35.965196915 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2352/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:35.969196930 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2352/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:35.969196930 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2639/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:35.861434855 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2304/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:27.429163440 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:17.393123992 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:17.393123992 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1549/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:52.044539032 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2049/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:32.612946688 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1133/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:30.508206309 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1724/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:31.248699729 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1724/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:31.252699745 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1453/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:33.836463495 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_826/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:35.223996529 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2167/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:56.157040183 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2718/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:50.509492547 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2999/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:49.113721494 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2560/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:21.317377365 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1347/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:15.640387378 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1496/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:41.780496526 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1259/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:00.008321448 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2111/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:45.168996628 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2891/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:22.113616363 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2826/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:10.553571174 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1902/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:04.988836142 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2806/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:07.101557659 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2107/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:44.568994246 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2779/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:01.981537593 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_782/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:27.135965700 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_782/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:27.139965716 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1433/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:30.376449071 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_703/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:12.379909358 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_703/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:12.379909358 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1543/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:08:50.968534585 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1543/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:50.968534585 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_501/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:34.411581092 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_510/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:35.931601834 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_510/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:35.931601834 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1553/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:52.656541561 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_492/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:32.583555723 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2211/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:10.085095204 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2211/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:10.089095219 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2245/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:16.773121551 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2523/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:08.745327495 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2523/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:08.745327495 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_974/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:01.364095914 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_948/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:56.396077054 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_948/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:56.396077054 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1518/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:46.124514539 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1923/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:09.128852772 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1923/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:09.128852772 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_733/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:18.007930863 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_733/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:18.007930863 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1086/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:22.088174457 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_119/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:12.113998145 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_119/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:12.113998145 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_980/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:02.276099375 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_980/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:02.276099375 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_958/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:58.308084314 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1458/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:34.796467494 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2620/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:32.417421261 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1403/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:25.416428354 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1130/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:29.892203979 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2115/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:45.824999232 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_890/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:46.148038107 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2128/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:48.289009009 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2128/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:48.293009024 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2729/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:52.413500032 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2729/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:52.413500032 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2505/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:05.117313072 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2505/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:05.117313072 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_381/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:12.323180839 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_764/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:24.027953845 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2075/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:38.364969589 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2075/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:38.364969589 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1234/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:55.948304239 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1524/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:47.260519244 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1524/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:47.260519244 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1718/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:30.344696051 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1718/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:30.348696068 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1531/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:48.524524476 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1531/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:48.524524476 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_234/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:43.118500465 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1103/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:25.208186263 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_245/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:44.994552346 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_245/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:44.994552346 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_398/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:15.071243754 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_795/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:29.907976270 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_943/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:55.468073529 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1194/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:42.464251482 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_365/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:09.131101609 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_365/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:09.131101609 -0500\n@@ -48,21 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_365/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:09.135101712 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2939/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:31.393652561 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1702/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:27.488684424 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1702/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:27.488684424 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1368/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:19.604404016 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1489/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:40.456491029 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1341/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:14.392382133 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2366/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:38.549207035 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2366/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:38.553207050 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_328/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:01.834921618 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_954/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:57.372080760 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_954/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:57.372080760 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1214/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:46.532266838 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2853/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:14.937588325 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2853/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:14.937588325 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1639/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:14.624631894 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -166,8 +164,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1639/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:14.624631894 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_821/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:34.291992979 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_240/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:44.050526239 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_897/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:47.388042823 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_897/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:47.392042838 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2095/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:42.344985411 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1819/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:48.652770296 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2060/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:34.584954544 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2042/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:31.064940518 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2042/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:31.064940518 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2042/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:31.068940534 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1874/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:59.396813644 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1874/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:59.396813644 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1694/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:25.960678198 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1694/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:25.964678215 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2654/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:38.361444716 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2654/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:38.361444716 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2463/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:57.057280977 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2463/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:57.057280977 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1156/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:34.884222850 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_478/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:30.063518816 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_305/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:57.682845126 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_102/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:01.881997672 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_102/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:01.881997672 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2378/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:40.441214578 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2378/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:40.441214578 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2549/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:19.117368650 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2549/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:19.117368650 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1059/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:16.696154042 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1059/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:16.696154042 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1360/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:18.088397657 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1968/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:17.396885916 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1968/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:17.396885916 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1431/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:30.072447803 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1128/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:29.568202754 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1128/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:29.568202754 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2977/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:44.981705441 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_147/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:18.657998448 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -164,15 +162,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_147/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:18.657998448 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1869/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:58.372809519 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2542/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:17.873363720 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2874/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:18.777603334 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_817/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:33.679990647 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_817/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:33.679990647 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2849/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:14.313585885 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1606/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:08.312606023 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1606/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:08.312606023 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_564/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:46.463725186 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1706/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:28.148687112 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1706/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:28.148687112 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1787/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:42.880746942 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2641/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:36.165436054 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2641/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:36.169436071 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1876/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:59.716814932 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1298/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:06.652349533 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1251/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:58.716315975 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1251/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:58.716315975 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2819/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:09.301566274 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2235/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:14.797113772 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1483/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:39.516487125 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1483/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:39.516487125 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2607/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:29.917411386 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2607/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:29.921411401 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1339/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:14.092380872 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1975/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:18.924892032 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1823/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:49.304772931 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_396/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:14.767237109 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2821/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:09.605567464 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1176/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:07:38.588236844 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1176/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:38.588236844 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_590/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:50.807768632 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_590/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:50.807768632 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_800/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:30.855979884 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2984/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:46.229710291 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2984/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:46.229710291 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2466/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:57.681283465 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2466/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:57.685283480 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2466/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:57.685283480 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_37/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:39.517996637 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1382/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:22.060414309 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2855/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:15.257589576 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2855/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:15.257589576 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2177/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:57.997047463 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_869/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:42.376023758 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_869/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:42.376023758 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2721/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:51.145495048 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_976/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:01.664097053 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_576/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:48.335744115 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_576/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:48.335744115 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1749/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:36.100719447 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_143/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:17.597998399 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1645/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:15.560635726 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1991/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:21.876903839 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1991/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:21.876903839 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2275/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:22.409143720 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1753/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:36.732722013 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_442/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:22.851399564 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2876/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:19.097604584 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2876/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:19.101604600 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2372/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:39.497210796 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2372/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:39.497210796 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1745/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:35.456716832 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2354/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:36.369198497 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2354/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:36.369198497 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1733/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:33.304708089 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1733/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:33.304708089 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_355/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:06.911042483 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_355/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:06.911042483 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_721/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:15.519921358 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_721/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:15.519921358 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2870/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:18.161600927 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2252/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:18.009126416 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -165,13 +152,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2252/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:18.009126416 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1934/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:11.004860299 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2439/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:52.325262100 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_690/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:10.227901129 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2670/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:41.237456053 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2670/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:41.237456053 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_915/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:50.800055793 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_915/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:50.800055793 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_792/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:29.271973846 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2157/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:10:54.085031979 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2157/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:54.085031979 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2817/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:08.997565083 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2995/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:48.465718978 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1150/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:33.604218013 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2700/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:46.629477286 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_429/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:20.679359066 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_429/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:20.679359066 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_717/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:14.843918775 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_717/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:14.847918790 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_677/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:07.739891613 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_677/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:07.739891613 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_639/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:01.207859551 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2026/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:28.160928936 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2645/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:36.829438674 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1318/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:10.628366295 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2739/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:54.289507403 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_865/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:41.756021399 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1451/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:33.536462245 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1451/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:33.536462245 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2346/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:34.673191852 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2346/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:34.673191852 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1294/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:06.048346983 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2195/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:07.305084237 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2787/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:13:03.221542454 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2787/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:03.221542454 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1804/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:09:45.996759556 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1804/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:46.000759572 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1804/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:46.000759572 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1600/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:07.352602081 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1600/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:07.352602081 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2519/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:07.769323617 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_480/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:30.371523326 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_480/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:30.375523385 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_543/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:42.111677855 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_543/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:42.111677855 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_378/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:05:11.707165973 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_378/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:11.707165973 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1020/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:09.796127897 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_71/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:03:48.661997060 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_71/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:48.661997060 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:58.400314637 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1249/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:58.400314637 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_320/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:00.582899352 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1794/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:44.136752028 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1794/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:44.140752044 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2643/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:36.497437364 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -165,13 +163,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2643/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:36.497437364 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_169/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:22.813998640 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n@@ -164,15 +162,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_169/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:22.813998640 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_860/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:40.840017913 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2130/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:48.641010404 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2130/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:48.641010404 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_254/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:47.314613885 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_254/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:47.314613885 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2547/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:18.805367414 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1325/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:11.908371684 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1325/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:11.912371702 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1147/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:33.000215730 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2487/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:01.785299813 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2487/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:01.785299813 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1263/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:00.624324056 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2020/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:27.248925297 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_257/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:47.938629892 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2478/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:59.897292295 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2988/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:46.869712778 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2281/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:23.333147352 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1032/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:11.660134962 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_556/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:44.931708876 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2781/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:02.285538784 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_660/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:04.939880898 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2058/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:34.156952839 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1307/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:08.172355945 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1307/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:08.172355945 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_911/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:50.156053346 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_259/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:48.246637553 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1938/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:11.628862803 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1938/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:11.628862803 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2283/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:23.661148641 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_823/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:34.599994151 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_928/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:52.960064002 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2148/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:52.193024486 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2148/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:52.197024501 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_3001/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:49.425722706 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2801/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:06.189554086 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2154/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:53.461029509 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2259/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:19.277131404 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2259/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:19.281131421 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2860/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:16.313593705 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2092/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:41.716982916 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2092/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:41.716982916 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2009/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:25.100916721 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2397/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:43.997228816 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2380/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:40.757215845 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1800/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:45.376757047 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2231/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:13.881110164 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2231/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:13.881110164 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2089/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:41.096980452 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n@@ -179,8 +170,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1180/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:39.292239504 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2863/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:16.937596144 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_311/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:04:58.962869496 -0500\n@@ -25,9 +25,6 @@\n   @Override\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n-    while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n-    }\n     return sum;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_311/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:58.962869496 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_311/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:58.962869496 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 28, 
          "faulty": "while (iter.hasNext()) {\n  sum=safeAdd(sum,iter.next());\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1290/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:05.416344316 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_218/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:04:40.302416468 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_218/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:40.302416468 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_997/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:05.672112259 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_294/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:55.522801902 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1139/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:31.772211087 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1139/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:31.776211103 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1886/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:01.928823835 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1747/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:35.792718197 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1747/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:35.796718213 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2536/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:16.957360089 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2757/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:57.817521256 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2331/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:11:31.885180923 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2331/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:31.885180923 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_813/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:06:33.035988193 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_813/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:33.035988193 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2277/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:22.721144946 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2277/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:22.721144946 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1959/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:15.552878531 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_993/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:07:04.764108815 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_993/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:04.764108815 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2597/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:28.033403939 -0500\n@@ -48,8 +48,6 @@\n   @Override\n   public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {\n     super.init(source, options, env);\n-    if (options.get(TYPE) == null)\n-      throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n         encoder = new VarNumEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2597/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:28.037403955 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 51, 
          "faulty": "if (options.get(TYPE) == null) throw new IllegalArgumentException(\"no type specified\");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1440/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:31.612454227 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_917/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:51.116056995 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1535/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:49.432528233 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:02:27.460598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2517/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java\t2018-12-28 20:12:07.261321597 -0500\n@@ -26,7 +26,6 @@\n   public Long typedReduce(Key key, Iterator<Long> iter) {\n     long sum = 0;\n     while (iter.hasNext()) {\n-      sum = safeAdd(sum, iter.next());\n     }\n     return sum;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2517/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:07.265321613 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java", 
          "line": 29, 
          "faulty": "sum=safeAdd(sum,iter.next());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2387/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:42.093221195 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2306/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:27.733164633 -0500\n@@ -159,16 +159,6 @@\n   private void findTop() throws IOException {\n     // check if aggregation is needed\n     if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2616/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:31.773418717 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2616/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:31.777418733 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1839/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:52.436785581 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1839/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:52.440785597 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 169, 
          "faulty": "while (viter.hasNext()) viter.next();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1731/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:32.980706772 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1731/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:32.980706772 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1556/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:53.284544154 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_715/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:14.535917598 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1564/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:54.832550545 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2915/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:13:26.977635345 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2915/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:26.977635345 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1236/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:56.248305512 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1392/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:23.604420773 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1392/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:23.604420773 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 166, 
          "faulty": "topKey=workKey;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1981/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:19.940896097 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_157/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:20.585998537 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1024/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:10.424130277 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_209/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:38.074345292 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2960/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:41.529692020 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_705/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:12.683910519 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_882/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:44.560032068 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2880/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:20.049608303 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2446/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:53.849268183 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1420/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:28.224440089 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1704/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:27.788685646 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_77/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:49.961997120 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_16/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:03:27.621996087 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1855/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:55.284797072 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1239/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:56.852308074 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_468/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:05:28.219490020 -0500\n@@ -165,13 +165,6 @@\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n     }\n     return a + b;\n   }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_468/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:28.223490083 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 168, 
          "faulty": "topValue=reduce(topKey,viter);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 168, 
          "faulty": "if (aSign > 0) {\n  if (Long.MAX_VALUE - a < b)   return Long.MAX_VALUE;\n}\n else {\n  if (Long.MIN_VALUE - a > b)   return Long.MIN_VALUE;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2428/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:50.157253443 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2698/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:46.325476089 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2503/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:04.805311831 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2899/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:24.025623827 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2686/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:12:44.145467507 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2686/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:44.149467523 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1612/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:09:09.240609830 -0500\n@@ -164,15 +164,6 @@\n   public static long safeAdd(long a, long b) {\n     long aSign = Long.signum(a);\n     long bSign = Long.signum(b);\n-    if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n-      if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n-      } else {\n-        if (Long.MIN_VALUE - a > b)\n-          return Long.MIN_VALUE;\n-      }\n-    }\n     return a + b;\n   }\n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1612/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:09.240609830 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 167, 
          "faulty": "if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n  if (aSign > 0) {\n    if (Long.MAX_VALUE - a < b)     return Long.MAX_VALUE;\n  }\n else {\n    if (Long.MIN_VALUE - a > b)     return Long.MIN_VALUE;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1972/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:18.320889614 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1650/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:16.476639473 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1683/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:09:24.084670549 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2753/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:12:57.201518838 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2930/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:29.797646341 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_966/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:59.832090100 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_966/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:59.832090100 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_292/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:55.206795332 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 162, 
          "faulty": "workKey.set(super.getTopKey());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_603/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:53.351792171 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_830/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:06:35.843998890 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_830/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:06:35.843998890 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1467/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:36.436474319 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1467/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:36.440474335 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1218/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:07:47.156269193 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1422/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:08:28.532441374 -0500\n@@ -166,8 +166,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1422/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:28.536441391 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_476/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:29.759514115 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2145/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:10:51.565021997 -0500\n@@ -52,7 +52,7 @@\n       throw new IllegalArgumentException(\"no type specified\");\n     switch (Type.valueOf(options.get(TYPE))) {\n       case VARNUM:\n-        encoder = new VarNumEncoder();\n+        ;\n         return;\n       case LONG:\n         encoder = new LongEncoder();\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2145/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:51.569022013 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 55, 
          "faulty": "encoder=new VarNumEncoder();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2922/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:13:28.245640289 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:02:27.432597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2410/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java\t2018-12-28 20:11:46.749239824 -0500\n@@ -50,19 +50,6 @@\n     super.init(source, options, env);\n     if (options.get(TYPE) == null)\n       throw new IllegalArgumentException(\"no type specified\");\n-    switch (Type.valueOf(options.get(TYPE))) {\n-      case VARNUM:\n-        encoder = new VarNumEncoder();\n-        return;\n-      case LONG:\n-        encoder = new LongEncoder();\n-        return;\n-      case STRING:\n-        encoder = new StringEncoder();\n-        return;\n-      default:\n-        throw new IllegalArgumentException();\n-    }\n   }\n   \n   @Override\n@@ -166,8 +153,6 @@\n     long bSign = Long.signum(b);\n     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {\n       if (aSign > 0) {\n-        if (Long.MAX_VALUE - a < b)\n-          return Long.MAX_VALUE;\n       } else {\n         if (Long.MIN_VALUE - a > b)\n           return Long.MIN_VALUE;\n\n\n--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2410/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:11:46.749239824 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 169, 
          "faulty": "if (Long.MAX_VALUE - a < b) return Long.MAX_VALUE;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 164, 
          "faulty": "if (workKey.isDeleted()) return;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java", 
          "line": 53, 
          "faulty": "switch (Type.valueOf(options.get(TYPE))) {\ncase VARNUM:\n  encoder=new VarNumEncoder();\nreturn;\ncase LONG:\nencoder=new LongEncoder();\nreturn;\ncase STRING:\nencoder=new StringEncoder();\nreturn;\ndefault :\nthrow new IllegalArgumentException();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_282/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:04:53.314754548 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1918/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:10:08.108848676 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n@@ -179,8 +166,6 @@\n     Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);\n     \n     super.seek(seekRange, columnFamilies, inclusive);\n-    findTop();\n-    \n     if (range.getStartKey() != null) {\n       while (hasTop() && getTopKey().equals(range.getStartKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS)\n           && getTopKey().getTimestamp() > range.getStartKey().getTimestamp()) {\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 182, 
          "faulty": "findTop();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1444/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:32.248456878 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_516/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:05:37.187617794 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1426/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:29.172444047 -0500\n@@ -160,15 +160,6 @@\n     // check if aggregation is needed\n     if (super.hasTop()) {\n       workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n     }\n   }\n   \n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:02:27.428597000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_1493/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java\t2018-12-28 20:08:41.084493637 -0500\n@@ -157,19 +157,6 @@\n    * be null.\n    */\n   private void findTop() throws IOException {\n-    // check if aggregation is needed\n-    if (super.hasTop()) {\n-      workKey.set(super.getTopKey());\n-      if (combiners.isEmpty() || combiners.contains(workKey)) {\n-        if (workKey.isDeleted())\n-          return;\n-        topKey = workKey;\n-        Iterator<Value> viter = new ValueIterator(getSource());\n-        topValue = reduce(topKey, viter);\n-        while (viter.hasNext())\n-          viter.next();\n-      }\n-    }\n   }\n   \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 161, 
          "faulty": "if (super.hasTop()) {\n  workKey.set(super.getTopKey());\n  if (combiners.isEmpty() || combiners.contains(workKey)) {\n    if (workKey.isDeleted())     return;\n    topKey=workKey;\n    Iterator<Value> viter=new ValueIterator(getSource());\n    topValue=reduce(topKey,viter);\n    while (viter.hasNext())     viter.next();\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java", 
          "line": 163, 
          "faulty": "if (combiners.isEmpty() || combiners.contains(workKey)) {\n  if (workKey.isDeleted())   return;\n  topKey=workKey;\n  Iterator<Value> viter=new ValueIterator(getSource());\n  topValue=reduce(topKey,viter);\n  while (viter.hasNext())   viter.next();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}