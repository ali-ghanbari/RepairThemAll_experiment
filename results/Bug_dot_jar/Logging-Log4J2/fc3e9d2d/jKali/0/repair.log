cd /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
	-location . \
	-id Logging-Log4J2-fc3e9d2d \
	-failing org.apache.logging.log4j.core.filter.StructuredDataFilterTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder core/src/main/java \
	-srctestfolder core/src/test/java \
	-binjavafolder core/target/classes \
	-bintestfolder core/target/test-classes \
	-parameters x:x \
	-dependencies /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/log4j12-api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/slf4j-impl/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/jcl-bridge/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/flume-ng/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/web/target/classes:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar:/home/tdurieux/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.2.0/flume-ng-core-1.2.0.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.3/jackson-core-asl-1.9.3.jar:/home/tdurieux/.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-hdfs-sink/1.2.0/flume-hdfs-sink-1.2.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.3/jackson-mapper-asl-1.9.3.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-ext/1.7.1/slf4j-ext-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.8.2.2/derby-10.8.2.2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20110124/servlet-api-2.5-20110124.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar:/home/tdurieux/.m2/repository/org/fusesource/jansi/jansi/1.9/jansi-1.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-file-channel/1.2.0/flume-file-channel-1.2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar:/home/tdurieux/.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-api/2.0-beta4-SNAPSHOT/log4j-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-irc-sink/1.2.0/flume-irc-sink-1.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.3.1/junit-4.3.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-node/1.2.0/flume-ng-node-1.2.0.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.1/slf4j-api-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.2.0/flume-ng-configuration-1.2.0.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.6.3/avro-ipc-1.6.3.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.0/geronimo-jms_1.1_spec-1.0.jar:/home/tdurieux/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.2.0/flume-ng-sdk-1.2.0.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/1.4.1/commons-net-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-core/1.0.1/hadoop-core-1.0.1.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/osgi/core/4.3.0/core-4.3.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.6.3/avro-1.6.3.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j12-api/2.0-beta4-SNAPSHOT/log4j12-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-jdbc-channel/1.2.0/flume-jdbc-channel-1.2.0.jar:/home/tdurieux/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j-slf4j-impl/2.0-beta4-SNAPSHOT/log4j-slf4j-impl-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2019-01-01 09:12:30,545 INFO main - command line arguments: [-mode  jkali  -location  .  -id  Logging-Log4J2-fc3e9d2d  -failing  org.apache.logging.log4j.core.filter.StructuredDataFilterTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  core/src/main/java  -srctestfolder  core/src/test/java  -binjavafolder  core/target/classes  -bintestfolder  core/target/test-classes  -parameters  x:x  -dependencies  /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/log4j12-api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/slf4j-impl/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/jcl-bridge/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/flume-ng/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/web/target/classes:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar:/home/tdurieux/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.2.0/flume-ng-core-1.2.0.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.3/jackson-core-asl-1.9.3.jar:/home/tdurieux/.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-hdfs-sink/1.2.0/flume-hdfs-sink-1.2.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.3/jackson-mapper-asl-1.9.3.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-ext/1.7.1/slf4j-ext-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.8.2.2/derby-10.8.2.2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20110124/servlet-api-2.5-20110124.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar:/home/tdurieux/.m2/repository/org/fusesource/jansi/jansi/1.9/jansi-1.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-file-channel/1.2.0/flume-file-channel-1.2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar:/home/tdurieux/.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-api/2.0-beta4-SNAPSHOT/log4j-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-irc-sink/1.2.0/flume-irc-sink-1.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.3.1/junit-4.3.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-node/1.2.0/flume-ng-node-1.2.0.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.1/slf4j-api-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.2.0/flume-ng-configuration-1.2.0.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.6.3/avro-ipc-1.6.3.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.0/geronimo-jms_1.1_spec-1.0.jar:/home/tdurieux/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.2.0/flume-ng-sdk-1.2.0.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/1.4.1/commons-net-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-core/1.0.1/hadoop-core-1.0.1.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/osgi/core/4.3.0/core-4.3.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.6.3/avro-1.6.3.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j12-api/2.0-beta4-SNAPSHOT/log4j12-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-jdbc-channel/1.2.0/flume-jdbc-channel-1.2.0.jar:/home/tdurieux/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j-slf4j-impl/2.0-beta4-SNAPSHOT/log4j-slf4j-impl-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
2019-01-01 09:12:30,547 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:842) - Source folders: [/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./core/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:861) - Source Test folders: [/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./core/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./output_astor/AstorMain-Logging-Log4J2-fc3e9d2d//bin//default from 75 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar, /home/tdurieux/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar, /home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar, /home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, /home/tdurieux/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.2.0/flume-ng-core-1.2.0.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar, /home/tdurieux/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.3/jackson-core-asl-1.9.3.jar, /home/tdurieux/.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar, /home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-hdfs-sink/1.2.0/flume-hdfs-sink-1.2.0.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.3/jackson-mapper-asl-1.9.3.jar, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar, /home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/log4j12-api/target/classes/, /home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/slf4j-impl/target/classes/, /home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar, /home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-ext/1.7.1/slf4j-ext-1.7.1.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.8.2.2/derby-10.8.2.2.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/jcl-bridge/target/classes/, /home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar, /home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20110124/servlet-api-2.5-20110124.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar, /home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar, /home/tdurieux/.m2/repository/org/fusesource/jansi/jansi/1.9/jansi-1.9.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-file-channel/1.2.0/flume-file-channel-1.2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar, /home/tdurieux/.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-api/2.0-beta4-SNAPSHOT/log4j-api-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-irc-sink/1.2.0/flume-irc-sink-1.2.0.jar, /home/tdurieux/.m2/repository/junit/junit/4.3.1/junit-4.3.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-node/1.2.0/flume-ng-node-1.2.0.jar, /home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar, /home/tdurieux/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar, /home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.1/slf4j-api-1.7.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.2.0/flume-ng-configuration-1.2.0.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar, /home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.6.3/avro-ipc-1.6.3.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar, /home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.0/geronimo-jms_1.1_spec-1.0.jar, /home/tdurieux/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.2.0/flume-ng-sdk-1.2.0.jar, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/commons-net/commons-net/1.4.1/commons-net-1.4.1.jar, /home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-core/1.0.1/hadoop-core-1.0.1.jar, /home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/flume-ng/target/classes/, /home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./output_astor/AstorMain-Logging-Log4J2-fc3e9d2d//bin//default, /home/tdurieux/.m2/repository/org/osgi/core/4.3.0/core-4.3.0.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/web/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/api/target/classes/, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/apache/avro/avro/1.6.3/avro-1.6.3.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j12-api/2.0-beta4-SNAPSHOT/log4j12-api-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-jdbc-channel/1.2.0/flume-jdbc-channel-1.2.0.jar, /home/tdurieux/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar, /home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j-slf4j-impl/2.0-beta4-SNAPSHOT/log4j-slf4j-impl-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.layout.SerializedLayoutTest#testLayout
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.layout.HTMLLayoutTest#testLayout
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.AppenderRefLevelTest#logger1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.AppenderRefLevelTest#logger2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.AppenderRefLevelTest#logger3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.FailoverAppenderTest#testFailover
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.filter.MapFilterTest#testConfig
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.routing.RoutingAppenderTest#routingTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.filter.BurstFilterTest#test
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rewrite.RewriteAppenderTest#testProperties
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rewrite.RewriteAppenderTest#rewriteTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.ExtendedThrowableTest#testException
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#testReconfiguration
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#basicFlow
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#debugObject
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#simpleFlow
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#mdc
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#catching
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#debug
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#debugWithParms
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#throwing
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.LoggerTest#structuredData
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.layout.XMLLayoutTest#testLayout
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.SimplePerfTest#debugDisabled
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.SimplePerfTest#debugLogger
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.SimplePerfTest#debugDisabledByLevel
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rolling.RollingAppenderTimeAndSizeTest#testAppender
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.RootThrowableTest#testException
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.StyleConverterTest#testReplacement
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.routing.JSONRoutingAppenderTest#routingTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.XMLLoggerPropsTest#testWithProps
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rolling.RollingAppenderSizeTest#testAppender
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rolling.RollingAppenderTimeTest#testAppender
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.filter.StructuredDataFilterTest#testConfig
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.routing.JSONRoutingAppender2Test#routingTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.FileOutputTest#testConfig
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.AsynchAppenderTest#rewriteTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testBadStatus
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testReconfiguration
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testBadFilterParam
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testFromStreamNoId
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testFromFile
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testFromClassPath
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testNoFilters
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testBadFileName
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testByName
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testFromStream
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.TestConfigurator#testBadLayout
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.ReflectionComparison#test1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.RegexReplacementTest#testReplacement
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.RegexReplacementTest#testConverter
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.RootThrowablePatternConverterTest#testFull
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#basicFlow
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#debugObject
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#simpleFlow
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#mdc
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#catching
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#debug
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#debugWithParms
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#throwing
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.StrictXMLConfigTest#structuredData
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.FileConfigTest#testReconfiguration
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.XMLConfigurationTest#testLogger
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.config.XMLConfigurationTest#logToFile
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.filter.DynamicThresholdFilterTest#testConfig
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverterTest#testFull
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverterTest#testFiltering
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.logging.log4j.core.appender.rolling.RollingAppenderUncompressedTest#testAppender
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:134, fails: 68, GZoltar suspicious 6816, with positive susp 1208
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 134
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 1000 with susp > 0.1, we consider: 1000
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./output_astor/AstorMain-Logging-Log4J2-fc3e9d2d//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./output_astor/AstorMain-Logging-Log4J2-fc3e9d2d//src//default, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/api/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/log4j12-api/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/slf4j-impl/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/jcl-bridge/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/flume-ng/target/classes/, /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/web/target/classes/, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar, /home/tdurieux/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar, /home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar, /home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, /home/tdurieux/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.2.0/flume-ng-core-1.2.0.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar, /home/tdurieux/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.3/jackson-core-asl-1.9.3.jar, /home/tdurieux/.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar, /home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-hdfs-sink/1.2.0/flume-hdfs-sink-1.2.0.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.3/jackson-mapper-asl-1.9.3.jar, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar, /home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar, /home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-ext/1.7.1/slf4j-ext-1.7.1.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.8.2.2/derby-10.8.2.2.jar, /home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar, /home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20110124/servlet-api-2.5-20110124.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar, /home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar, /home/tdurieux/.m2/repository/org/fusesource/jansi/jansi/1.9/jansi-1.9.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-file-channel/1.2.0/flume-file-channel-1.2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar, /home/tdurieux/.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-api/2.0-beta4-SNAPSHOT/log4j-api-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-irc-sink/1.2.0/flume-irc-sink-1.2.0.jar, /home/tdurieux/.m2/repository/junit/junit/4.3.1/junit-4.3.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-node/1.2.0/flume-ng-node-1.2.0.jar, /home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar, /home/tdurieux/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar, /home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.1/slf4j-api-1.7.1.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.2.0/flume-ng-configuration-1.2.0.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar, /home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.6.3/avro-ipc-1.6.3.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar, /home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.0/geronimo-jms_1.1_spec-1.0.jar, /home/tdurieux/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.2.0/flume-ng-sdk-1.2.0.jar, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/commons-net/commons-net/1.4.1/commons-net-1.4.1.jar, /home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-core/1.0.1/hadoop-core-1.0.1.jar, /home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, /home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar, /home/tdurieux/.m2/repository/org/osgi/core/4.3.0/core-4.3.0.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/apache/avro/avro/1.6.3/avro-1.6.3.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j12-api/2.0-beta4-SNAPSHOT/log4j12-api-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-jdbc-channel/1.2.0/flume-jdbc-channel-1.2.0.jar, /home/tdurieux/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar, /home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar, /home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j-slf4j-impl/2.0-beta4-SNAPSHOT/log4j-slf4j-impl-2.0-beta4-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.LogManager, methodName=org.apache.logging.log4j.LogManager{getLogger(Ljava/lang/String;)Lorg/apache/logging/log4j/Logger; 0.0, lineNumber=165, susp=0.7486371059063726]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.Level, methodName=org.apache.logging.log4j.Level{intLevel()I 0.0, lineNumber=156, susp=0.6096489371969633]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{getName()Ljava/lang/String; 0.0, lineNumber=1483, susp=0.5756736625034038]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.LogManager, methodName=org.apache.logging.log4j.LogManager{getContext(Z)Lorg/apache/logging/log4j/spi/LoggerContext; 0.0, lineNumber=218, susp=0.4880935300919764]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{debug(Ljava/lang/String;)V 0.0, lineNumber=398, susp=0.46837968853801915]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{debug(Ljava/lang/String;)V 0.0, lineNumber=401, susp=0.46837968853801915]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{warn(Ljava/lang/String;)V 0.0, lineNumber=789, susp=0.44221821104826564]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{warn(Ljava/lang/String;)V 0.0, lineNumber=792, susp=0.44221821104826564]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=235, susp=0.4338609156373123]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{isWarnEnabled(Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=929, susp=0.4338609156373123]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.BasicConfigurationFactory, methodName=org.apache.logging.log4j.core.BasicConfigurationFactory{getConfiguration(Ljava/lang/String;Ljava/net/URI;)Lorg/apache/logging/log4j/core/config/Configuration; 0.0, lineNumber=33, susp=0.4338609156373123]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.LogManager, methodName=org.apache.logging.log4j.LogManager{getContext(Ljava/lang/ClassLoader;Z)Lorg/apache/logging/log4j/spi/LoggerContext; 0.0, lineNumber=233, susp=0.4036036763977875]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=231, susp=0.38549553972194134]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{isDebugEnabled(Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=536, susp=0.38549553972194134]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.simple.SimpleLogger, methodName=org.apache.logging.log4j.simple.SimpleLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)Z 0.0, lineNumber=160, susp=0.3821578531790892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=225, susp=0.3821578531790892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)Z 0.0, lineNumber=198, susp=0.37890538677040353]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z 0.0, lineNumber=222, susp=0.37264205642672216]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{isEmpty()Z 0.0, lineNumber=161, susp=0.3290725908572088]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{isEmpty()Z 0.0, lineNumber=162, susp=0.3290725908572088]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{getDepth()I 0.0, lineNumber=208, susp=0.3290725908572088]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{getDepth()I 0.0, lineNumber=209, susp=0.3290725908572088]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{reset()V 0.0, lineNumber=117, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{reset()V 0.0, lineNumber=118, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{reset()V 0.0, lineNumber=119, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{clear()V 0.0, lineNumber=138, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{clear()V 0.0, lineNumber=140, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{clear()V 0.0, lineNumber=142, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{clear()V 0.0, lineNumber=143, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{clear()V 0.0, lineNumber=144, susp=0.2979270115341687]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{error(Ljava/lang/String;Ljava/lang/Throwable;)V 0.0, lineNumber=1012, susp=0.2711630722733202]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger, methodName=org.apache.logging.log4j.status.StatusLogger{getLogger()Lorg/apache/logging/log4j/status/StatusLogger; 0.0, lineNumber=72, susp=0.2703643575125035]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.LogManager, methodName=org.apache.logging.log4j.LogManager{getContext()Lorg/apache/logging/log4j/spi/LoggerContext; 0.0, lineNumber=205, susp=0.25332019855244947]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{error(Ljava/lang/String;Ljava/lang/Throwable;)V 0.0, lineNumber=1011, susp=0.2475368857441686]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{error(Ljava/lang/String;)V 0.0, lineNumber=987, susp=0.2475368857441686]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{error(Ljava/lang/String;)V 0.0, lineNumber=986, susp=0.22917462425705284]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLogger, methodName=org.apache.logging.log4j.spi.AbstractLogger{error(Ljava/lang/String;)V 0.0, lineNumber=989, susp=0.22917462425705284]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{getImmutableContext()Ljava/util/Map; 0.0, lineNumber=152, susp=0.22687130324325755]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{getImmutableContext()Ljava/util/Map; 0.0, lineNumber=153, susp=0.22687130324325755]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.EventLogger, methodName=org.apache.logging.log4j.EventLogger{logEvent(Lorg/apache/logging/log4j/message/StructuredDataMessage;)V 0.0, lineNumber=54, susp=0.21693045781865616]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.EventLogger, methodName=org.apache.logging.log4j.EventLogger{logEvent(Lorg/apache/logging/log4j/message/StructuredDataMessage;)V 0.0, lineNumber=55, susp=0.21693045781865616]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLoggerWrapper, methodName=org.apache.logging.log4j.spi.AbstractLoggerWrapper{log(Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V 0.0, lineNumber=53, susp=0.21693045781865616]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.spi.AbstractLoggerWrapper, methodName=org.apache.logging.log4j.spi.AbstractLoggerWrapper{log(Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V 0.0, lineNumber=54, susp=0.21693045781865616]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{getElapsedNanoTime()J 0.0, lineNumber=124, susp=0.21004201260420147]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{getFormat()Ljava/lang/String; 0.0, lineNumber=181, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=233, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=234, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=235, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=236, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=237, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=240, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=242, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=243, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=244, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=248, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=251, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=252, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=253, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=254, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=255, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=256, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=257, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=258, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=259, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{asString(Lorg/apache/logging/log4j/message/StructuredDataMessage$Format;Lorg/apache/logging/log4j/message/StructuredDataId;)Ljava/lang/String; 0.0, lineNumber=262, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{getFormattedMessage([Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=285, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{getFormattedMessage([Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=295, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataId, methodName=org.apache.logging.log4j.message.StructuredDataId{makeId(Lorg/apache/logging/log4j/message/StructuredDataId;)Lorg/apache/logging/log4j/message/StructuredDataId; 0.0, lineNumber=110, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataId, methodName=org.apache.logging.log4j.message.StructuredDataId{makeId(Lorg/apache/logging/log4j/message/StructuredDataId;)Lorg/apache/logging/log4j/message/StructuredDataId; 0.0, lineNumber=111, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataId, methodName=org.apache.logging.log4j.message.StructuredDataId{isReserved()Z 0.0, lineNumber=179, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataId, methodName=org.apache.logging.log4j.message.StructuredDataId{toString()Ljava/lang/String; 0.0, lineNumber=184, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.SimpleMessage, methodName=org.apache.logging.log4j.message.SimpleMessage{getFormattedMessage()Ljava/lang/String; 0.0, lineNumber=49, susp=0.18015093964441797]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.MarkerManager, methodName=org.apache.logging.log4j.MarkerManager{getMarker(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker; 0.0, lineNumber=40, susp=0.1750350105035012]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.MarkerManager, methodName=org.apache.logging.log4j.MarkerManager{getMarker(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker; 0.0, lineNumber=41, susp=0.1750350105035012]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{getType()Ljava/lang/String; 0.0, lineNumber=166, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext$ThreadContextStack, methodName=org.apache.logging.log4j.ThreadContext$ThreadContextStack{getDepth()I 0.0, lineNumber=436, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=107, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=108, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext$ImmutableStack, methodName=org.apache.logging.log4j.ThreadContext$ImmutableStack{getDepth()I 0.0, lineNumber=461, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.MapMessage, methodName=org.apache.logging.log4j.message.MapMessage{appendMap(Ljava/lang/StringBuilder;)V 0.0, lineNumber=235, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.MapMessage, methodName=org.apache.logging.log4j.message.MapMessage{appendMap(Ljava/lang/StringBuilder;)V 0.0, lineNumber=236, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.MapMessage, methodName=org.apache.logging.log4j.message.MapMessage{appendMap(Ljava/lang/StringBuilder;)V 0.0, lineNumber=243, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataMessage, methodName=org.apache.logging.log4j.message.StructuredDataMessage{getId()Lorg/apache/logging/log4j/message/StructuredDataId; 0.0, lineNumber=142, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.message.StructuredDataId, methodName=org.apache.logging.log4j.message.StructuredDataId{getName()Ljava/lang/String; 0.0, lineNumber=163, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.LogManager, methodName=org.apache.logging.log4j.LogManager{getLogger(Ljava/lang/Class;)Lorg/apache/logging/log4j/Logger; 0.0, lineNumber=174, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{start()V 0.0, lineNumber=64, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{start()V 0.0, lineNumber=65, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{start()V 0.0, lineNumber=66, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{start()V 0.0, lineNumber=67, susp=0.17149858514250882]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=74, susp=0.16269784336399212]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=86, susp=0.15655607277128739]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=89, susp=0.15655607277128739]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=90, susp=0.15655607277128739]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=94, susp=0.15655607277128739]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=95, susp=0.15655607277128739]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{clear()V 0.0, lineNumber=125, susp=0.15339299776947407]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{clear()V 0.0, lineNumber=126, susp=0.15339299776947407]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{remove(Ljava/lang/String;)V 0.0, lineNumber=115, susp=0.14852213144650114]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{remove(Ljava/lang/String;)V 0.0, lineNumber=116, susp=0.14852213144650114]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{remove(Ljava/lang/String;)V 0.0, lineNumber=117, susp=0.14852213144650114]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{remove(Ljava/lang/String;)V 0.0, lineNumber=119, susp=0.14852213144650114]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=91, susp=0.14625448482542613]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.ThreadContext, methodName=org.apache.logging.log4j.ThreadContext{put(Ljava/lang/String;Ljava/lang/String;)V 0.0, lineNumber=92, susp=0.14625448482542613]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=71, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=72, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=84, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{stop()V 0.0, lineNumber=74, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{stop()V 0.0, lineNumber=75, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{stop()V 0.0, lineNumber=76, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{stop()V 0.0, lineNumber=77, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=143, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=144, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=148, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=152, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=156, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=158, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=160, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=162, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=164, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=166, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=168, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=170, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=172, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=174, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=178, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=183, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=184, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=185, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=186, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=187, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=188, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=189, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=191, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=193, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=195, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=197, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=199, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=201, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=203, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=205, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=207, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=211, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=216, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=217, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=218, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=219, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=220, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=222, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.core.Timer, methodName=org.apache.logging.log4j.core.Timer{toString()Ljava/lang/String; 0.0, lineNumber=227, susp=0.1375047745542317]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=75, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=76, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=77, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=78, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=79, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=80, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=81, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.status.StatusLogger$BoundedQueue, methodName=org.apache.logging.log4j.status.StatusLogger$BoundedQueue{add(Ljava/lang/Object;)Z 0.0, lineNumber=259, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{append(Lorg/apache/logging/log4j/core/LogEvent;)V 0.0, lineNumber=82, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=87, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=91, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=92, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=93, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=94, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=96, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=97, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=99, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=106, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=110, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=111, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=116, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=117, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=118, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.logging.log4j.test.appender.ListAppender, methodName=org.apache.logging.log4j.test.appender.ListAppender{write([B)V 0.0, lineNumber=121, susp=0.12126781251816648]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 1000,  705
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 705
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 705, #ops: 0, parent:-]
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:286) - Error reading the validation process
 output: 
/var/lib/oar/.batch_job_bashrc: line 5: /home/tdurieux/.bashrc: No such file or directory
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:727) - Initial run of test suite fails
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= core/target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 2882
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= core/src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.logging.log4j.core.filter.StructuredDataFilterTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Logging-Log4J2-fc3e9d2d
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= core/target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/log4j12-api/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/slf4j-impl/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/jcl-bridge/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/flume-ng/target/classes:/tmp/jKali_Bug_dot_jar_Logging-Log4J2_fc3e9d2d/web/target/classes:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar:/home/tdurieux/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.2.0/flume-ng-core-1.2.0.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.7/logback-classic-1.0.7.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.3/jackson-core-asl-1.9.3.jar:/home/tdurieux/.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-hdfs-sink/1.2.0/flume-hdfs-sink-1.2.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.3/jackson-mapper-asl-1.9.3.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.7/logback-core-1.0.7.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-ext/1.7.1/slf4j-ext-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.8.2.2/derby-10.8.2.2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20110124/servlet-api-2.5-20110124.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar:/home/tdurieux/.m2/repository/org/fusesource/jansi/jansi/1.9/jansi-1.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-file-channel/1.2.0/flume-file-channel-1.2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar:/home/tdurieux/.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-api/2.0-beta4-SNAPSHOT/log4j-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sinks/flume-irc-sink/1.2.0/flume-irc-sink-1.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.3.1/junit-4.3.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-node/1.2.0/flume-ng-node-1.2.0.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.1/slf4j-api-1.7.1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.2.0/flume-ng-configuration-1.2.0.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.6.3/avro-ipc-1.6.3.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.0/geronimo-jms_1.1_spec-1.0.jar:/home/tdurieux/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.2.0/flume-ng-sdk-1.2.0.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/1.4.1/commons-net-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-core/1.0.1/hadoop-core-1.0.1.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/osgi/core/4.3.0/core-4.3.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/log4j-core/2.0-beta4-SNAPSHOT/log4j-core-2.0-beta4-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.6.3/avro-1.6.3.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j12-api/2.0-beta4-SNAPSHOT/log4j12-api-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-channels/flume-jdbc-channel/1.2.0/flume-jdbc-channel-1.2.0.jar:/home/tdurieux/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/logging/log4j/adapters/log4j-slf4j-impl/2.0-beta4-SNAPSHOT/log4j-slf4j-impl-2.0-beta4-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= core/src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	return locateContext(loader, null); }else { 	if ((org.apache.logging.log4j.co[...] ` -topatch--> `if (true) { 	return locateContext(loader, null); }else { 	if ((org.apache.logging.log4j.core.selecto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	return locateContext(loader, null); }else { 	if ((org.apache.logging.log4j.co[...] ` -topatch--> `if (false) { 	return locateContext(loader, null); }else { 	if ((org.apache.logging.log4j.core.select[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	return locateContext(loader, null); }else { 	if ((org.apache.logging.log4j.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getCallerClass) != null) { 	t[...] ` -topatch--> `if (true) { 	try { 		java.lang.Class clazz = java.lang.Class.class; 		boolean next = false; 		for (i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getCallerClass) != null) { 	t[...] ` -topatch--> `if (false) { 	try { 		java.lang.Class clazz = java.lang.Class.class; 		boolean next = false; 		for ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getCallerClass) != null) { 	t[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 78, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int index = 2; clazz != null; ++index) { 	java.lang.Object[] params = new java.lang.Object[]{ i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `clazz = ((java.lang.Class) (org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getCal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.securityManager) != null) { 	[...] ` -topatch--> `if (true) { 	java.lang.Class clazz = org.apache.logging.log4j.core.selector.ClassLoaderContextSelect[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.securityManager) != null) { 	[...] ` -topatch--> `if (false) { 	java.lang.Class clazz = org.apache.logging.log4j.core.selector.ClassLoaderContextSelec[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.securityManager) != null) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz != null) { 	return locateContext(clazz.getClassLoader(), null); } ` -topatch--> `if (true) { 	return locateContext(clazz.getClassLoader(), null); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz != null) { 	return locateContext(clazz.getClassLoader(), null); } ` -topatch--> `if (false) { 	return locateContext(clazz.getClassLoader(), null); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz != null) { 	return locateContext(clazz.getClassLoader(), null); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 103, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return locateContext(clazz.getClassLoader(), null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ref == null) { 	org.apache.logging.log4j.core.LoggerContext ctx = new org.apache.logging.log4j.c[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.LoggerContext ctx = new org.apache.logging.log4j.core.Log[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ref == null) { 	org.apache.logging.log4j.core.LoggerContext ctx = new org.apache.logging.log4j.c[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.LoggerContext ctx = new org.apache.logging.log4j.core.Lo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ref == null) { 	org.apache.logging.log4j.core.LoggerContext ctx = new org.apache.logging.log4j.c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (true) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (false) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 171, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ctx ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 219, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class clazz : classes) { 	if (clazz.getName().equals(fqcn)) { 		next = true; 		contin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.getName().equals(fqcn)) { 	next = true; 	continue; } ` -topatch--> `if (true) { 	next = true; 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.getName().equals(fqcn)) { 	next = true; 	continue; } ` -topatch--> `if (false) { 	next = true; 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.getName().equals(fqcn)) { 	next = true; 	continue; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 221, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `next = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 222, pointed element: CtContinueImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtContinueImpl) `continue ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	return clazz; } ` -topatch--> `if (true) { 	return clazz; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	return clazz; } ` -topatch--> `if (false) { 	return clazz; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	return clazz; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 225, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return clazz ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jContextFactory line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ctx.getStatus()) == (org.apache.logging.log4j.core.LoggerContext.Status.INITIALIZED)) { 	ctx.st[...] ` -topatch--> `if (true) { 	ctx.start(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jContextFactory line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ctx.getStatus()) == (org.apache.logging.log4j.core.LoggerContext.Status.INITIALIZED)) { 	ctx.st[...] ` -topatch--> `if (false) { 	ctx.start(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jContextFactory line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((ctx.getStatus()) == (org.apache.logging.log4j.core.LoggerContext.Status.INITIALIZED)) { 	ctx.st[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (currentContext) { 	org.apache.logging.log4j.core.LoggerContext ctx = org.apache.logging.log4j.co[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.LoggerContext ctx = org.apache.logging.log4j.core.impl.Co[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (currentContext) { 	org.apache.logging.log4j.core.LoggerContext ctx = org.apache.logging.log4j.co[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.LoggerContext ctx = org.apache.logging.log4j.core.impl.C[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (currentContext) { 	org.apache.logging.log4j.core.LoggerContext ctx = org.apache.logging.log4j.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 196, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.logging.log4j.core.Logger logger = loggers.get(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (logger != null) { 	return logger; } ` -topatch--> `if (true) { 	return logger; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (logger != null) { 	return logger; } ` -topatch--> `if (false) { 	return logger; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (logger != null) { 	return logger; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 198, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return logger ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.NameUtil line: 28, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((name.length()) == 0) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.NameUtil line: 28, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((name.length()) == 0) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.NameUtil line: 28, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((name.length()) == 0) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.NameUtil line: 29, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 397, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((substr = org.apache.logging.log4j.core.helpers.NameUtil.getSubName(substr)) != null) { 	if ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(name)) { 	return loggers.get(name); } ` -topatch--> `if (true) { 	return this.loggers.get(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(name)) { 	return loggers.get(name); } ` -topatch--> `if (false) { 	return this.loggers.get(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(name)) { 	return loggers.get(name); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(substr)) { 	return loggers.get(substr); } ` -topatch--> `if (true) { 	return this.loggers.get(substr); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(substr)) { 	return loggers.get(substr); } ` -topatch--> `if (false) { 	return this.loggers.get(substr); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (loggers.containsKey(substr)) { 	return loggers.get(substr); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 189, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers were configured, usin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 190, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setToDefault() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 191, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 215, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setName(org.apache.logging.log4j.core.config.DefaultConfiguration.DEFAULT_NAME) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `appender.start() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 220, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addAppender(appender) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 221, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.logging.log4j.core.config.LoggerConfig root = getRootLogger() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 222, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `root.addAppender(appender, null, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 226, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `root.setLevel(level) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 287, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `appenders.put(appender.getName(), appender) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 217, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.level = level ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) == w) { 	return 0; }else 	if ((weight) > w) { 		return -1; 	}else { 		return 1; 	} ` -topatch--> `if (true) { 	return 0; }else 	if ((this.weight) > w) { 		return -1; 	}else { 		return 1; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) == w) { 	return 0; }else 	if ((weight) > w) { 		return -1; 	}else { 		return 1; 	} ` -topatch--> `if (false) { 	return 0; }else 	if ((this.weight) > w) { 		return -1; 	}else { 		return 1; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) == w) { 	return 0; }else 	if ((weight) > w) { 		return -1; 	}else { 		return 1; 	} ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 301, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) > w) { 	return -1; }else { 	return 1; } ` -topatch--> `if (true) { 	return -1; }else { 	return 1; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) > w) { 	return -1; }else { 	return 1; } ` -topatch--> `if (false) { 	return -1; }else { 	return 1; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((weight) > w) { 	return -1; }else { 	return 1; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 305, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return 1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.NullPointerException("No Configuration was provided"); } ` -topatch--> `if (true) { 	throw new java.lang.NullPointerException("No Configuration was provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.NullPointerException("No Configuration was provided"); } ` -topatch--> `if (false) { 	throw new java.lang.NullPointerException("No Configuration was provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.NullPointerException("No Configuration was provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 250, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.addListener(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 251, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.start() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 252, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = config ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 253, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateLoggers() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prev != null) { 	prev.removeListener(this); 	prev.stop(); } ` -topatch--> `if (true) { 	prev.removeListener(this); 	prev.stop(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prev != null) { 	prev.removeListener(this); 	prev.stop(); } ` -topatch--> `if (false) { 	prev.removeListener(this); 	prev.stop(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (prev != null) { 	prev.removeListener(this); 	prev.stop(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 255, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prev.removeListener(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 256, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `prev.stop() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 281, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateLoggers(this.config) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 289, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.Logger logger : loggers.values()) { 	logger.updateConfiguration(c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (factoryClass != null) { 	org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(fa[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(factoryClass); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (factoryClass != null) { 	org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(fa[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(factoryClass); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (factoryClass != null) { 	org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(fa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `manager.collectPlugins() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 105, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.plugins.PluginType type : plugins.values()) { 	try { 		jav[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (o != null) { 	ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.Weighted[...] ` -topatch--> `if (true) { 	ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.WeightedFacto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (o != null) { 	ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.Weighted[...] ` -topatch--> `if (false) { 	ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.WeightedFact[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (o != null) { 	ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.Weighted[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ordered.add(new org.apache.logging.log4j.core.config.ConfigurationFactory.WeightedFactory(weight, cl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 117, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.ConfigurationFactory.WeightedFactory wf : ordered) { 	org.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.config.ConfigurationFactory.addFactory(wf.factoryClass) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.config.ConfigurationFactory.factories.add(((org.apache.logging.log4j.c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pluginManager.collectPlugins() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 113, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setup() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `doConfigure() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 115, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.LoggerConfig logger : loggers.values()) { 	logger.startFil[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 118, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.Appender appender : appenders.values()) { 	appender.start(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 119, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `appender.start() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `startFilter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 129, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.LoggerConfig logger : loggers.values()) { 	logger.clearApp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 135, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = (array.length) - 1; i > 0; --i) { 	array[i].stop(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 138, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stopFilter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 155, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.Node child : rootNode.getChildren()) { 	createConfiguratio[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!setLoggers) { 	org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers w[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers were con[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!setLoggers) { 	org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers w[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers were co[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!setLoggers) { 	org.apache.logging.log4j.core.config.BaseConfiguration.LOGGER.warn("No Loggers w[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 238, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 254, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `listeners.add(listener) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 262, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `listeners.remove(listener) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (name == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error("No name p[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error("No name provided [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (name == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error("No name p[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error("No name provided[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (name == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error("No name p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (layout == null) { 	layout = org.apache.logging.log4j.core.layout.PatternLayout.createLayout(null[...] ` -topatch--> `if (true) { 	layout = org.apache.logging.log4j.core.layout.PatternLayout.createLayout(null, null, nu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (layout == null) { 	layout = org.apache.logging.log4j.core.layout.PatternLayout.createLayout(null[...] ` -topatch--> `if (false) { 	layout = org.apache.logging.log4j.core.layout.PatternLayout.createLayout(null, null, n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (layout == null) { 	layout = org.apache.logging.log4j.core.layout.PatternLayout.createLayout(null[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.System.getProperty("os.name").startsWith("Windows"))) { 	return printStream; }else {[...] ` -topatch--> `if (true) { 	return printStream; }else { 	try { 		java.lang.ClassLoader loader = org.apache.logging.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.System.getProperty("os.name").startsWith("Windows"))) { 	return printStream; }else {[...] ` -topatch--> `if (false) { 	return printStream; }else { 	try { 		java.lang.ClassLoader loader = org.apache.logging[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.System.getProperty("os.name").startsWith("Windows"))) { 	return printStream; }else {[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.ConsoleAppender line: 99, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return printStream ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 926, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.escapeChar = escapeCharacter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 956, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prefixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable prefix matcher [...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Variable prefix matcher must not be null![...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 956, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prefixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable prefix matcher [...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Variable prefix matcher must not be null[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 956, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (prefixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable prefix matcher [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 959, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prefixMatcher = prefixMatcher ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 1021, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (suffixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable suffix matcher [...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Variable suffix matcher must not be null![...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 1021, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (suffixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable suffix matcher [...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Variable suffix matcher must not be null[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 1021, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (suffixMatcher == null) { 	throw new java.lang.IllegalArgumentException("Variable suffix matcher [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 1024, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.suffixMatcher = suffixMatcher ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.lookup.StrSubstitutor line: 1076, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.variableResolver = variableResolver ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 64, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.logging.log4j.core.pattern.NameAbbreviator.MaxElementAbbreviator(java.lang.Int[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 217, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `end = pattern.indexOf('}', i) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end != (-1)) { 	int next = pattern.indexOf("{", i); 	if ((next != (-1)) && (next < end)) { 		i =[...] ` -topatch--> `if (true) { 	int next = pattern.indexOf("{", i); 	if ((next != (-1)) && (next < end)) { 		i = end + [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end != (-1)) { 	int next = pattern.indexOf("{", i); 	if ((next != (-1)) && (next < end)) { 		i =[...] ` -topatch--> `if (false) { 	int next = pattern.indexOf("{", i); 	if ((next != (-1)) && (next < end)) { 		i = end +[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (end != (-1)) { 	int next = pattern.indexOf("{", i); 	if ((next != (-1)) && (next < end)) { 		i =[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((next != (-1)) && (next < end)) { 	i = end + 1; 	++depth; }else 	if (depth > 0) { 		--depth; 	} ` -topatch--> `if (true) { 	i = end + 1; 	++depth; }else 	if (depth > 0) { 		--depth; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((next != (-1)) && (next < end)) { 	i = end + 1; 	++depth; }else 	if (depth > 0) { 		--depth; 	} ` -topatch--> `if (false) { 	i = end + 1; 	++depth; }else 	if (depth > 0) { 		--depth; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 220, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((next != (-1)) && (next < end)) { 	i = end + 1; 	++depth; }else 	if (depth > 0) { 		--depth; 	} ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	--depth; } ` -topatch--> `if (true) { 	--depth; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	--depth; } ` -topatch--> `if (false) { 	--depth; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	--depth; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	break; } ` -topatch--> `if (true) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	break; } ` -topatch--> `if (false) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 234, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `options.add(r) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 235, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = end + 1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `appenders.put(appender.getName(), new org.apache.logging.log4j.core.config.AppenderControl(appender,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 195, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `convBuf.append(pattern.charAt(i)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 196, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.append(pattern.charAt(i)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 197, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 320, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `formattingInfo = new org.apache.logging.log4j.core.pattern.FormattingInfo(formattingInfo.isLeftAlign[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 322, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.MIN_STATE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.DOT_STATE; [...] ` -topatch--> `if (true) { 	state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.DOT_STATE; }els[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.DOT_STATE; [...] ` -topatch--> `if (false) { 	state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.DOT_STATE; }el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.DOT_STATE; [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 347, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = finalizeConverter(c, pattern, i, currentLiteral, formattingInfo,  converterRules, patternConvert[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 349, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.LITERAL_STATE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 350, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `formattingInfo = org.apache.logging.log4j.core.pattern.FormattingInfo.getDefault() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 351, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.setLength(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 57, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LoggerPatternConverter line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Lo[...] ` -topatch--> `if (true) { 	return org.apache.logging.log4j.core.pattern.LoggerPatternConverter.INSTANCE; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LoggerPatternConverter line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Lo[...] ` -topatch--> `if (false) { 	return org.apache.logging.log4j.core.pattern.LoggerPatternConverter.INSTANCE; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LoggerPatternConverter line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Lo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 157, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.apache.logging.log4j.core[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 228, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = new org.apache.logging.log4j.core.Logger.PrivateConfig(config, this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 290, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.updateConfiguration(config) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((pattern.length()) > 0) {   	java.lang.String trimmed = pattern.trim();  	if ((trimmed.length())[...] ` -topatch--> `if (true) {   	java.lang.String trimmed = pattern.trim();  	if ((trimmed.length()) == 0) { 		return [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((pattern.length()) > 0) {   	java.lang.String trimmed = pattern.trim();  	if ((trimmed.length())[...] ` -topatch--> `if (false) {   	java.lang.String trimmed = pattern.trim();  	if ((trimmed.length()) == 0) { 		return[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((pattern.length()) > 0) {   	java.lang.String trimmed = pattern.trim();  	if ((trimmed.length())[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((trimmed.length()) == 0) { 	return org.apache.logging.log4j.core.pattern.NameAbbreviator.DEFAULT[...] ` -topatch--> `if (true) { 	return org.apache.logging.log4j.core.pattern.NameAbbreviator.DEFAULT; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((trimmed.length()) == 0) { 	return org.apache.logging.log4j.core.pattern.NameAbbreviator.DEFAULT[...] ` -topatch--> `if (false) { 	return org.apache.logging.log4j.core.pattern.NameAbbreviator.DEFAULT; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((trimmed.length()) == 0) { 	return org.apache.logging.log4j.core.pattern.NameAbbreviator.DEFAULT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 55, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (((i < (trimmed.length())) && ((trimmed.charAt(i)) >= '0')) &&  ((trimmed.charAt(i)) <= '9')) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i == (trimmed.length())) { 	return new org.apache.logging.log4j.core.pattern.NameAbbreviator.Max[...] ` -topatch--> `if (true) { 	return new org.apache.logging.log4j.core.pattern.NameAbbreviator.MaxElementAbbreviator([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i == (trimmed.length())) { 	return new org.apache.logging.log4j.core.pattern.NameAbbreviator.Max[...] ` -topatch--> `if (false) { 	return new org.apache.logging.log4j.core.pattern.NameAbbreviator.MaxElementAbbreviator[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (i == (trimmed.length())) { 	return new org.apache.logging.log4j.core.pattern.NameAbbreviator.Max[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.Configurator line: 43, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.logging.log4j.core.config.Configurator.initialize(name, loader, uri) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.Configurator line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ctx.setConfiguration(config) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.Configurator line: 63, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ctx ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 271, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.getConfigurationMonitor().checkConfiguration() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, marke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, mark[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.appender.AbstractManager.lock.lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (manager == null) { 	manager = factory.createManager(name, data); 	if (manager == null) { 		throw[...] ` -topatch--> `if (true) { 	manager = factory.createManager(name, data); 	if (manager == null) { 		throw new java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (manager == null) { 	manager = factory.createManager(name, data); 	if (manager == null) { 		throw[...] ` -topatch--> `if (false) { 	manager = factory.createManager(name, data); 	if (manager == null) { 		throw new java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (manager == null) { 	manager = factory.createManager(name, data); 	if (manager == null) { 		throw[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 74, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(manager.count)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 75, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return manager ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractManager line: 77, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.appender.AbstractManager.lock.unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LevelPatternConverter line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Le[...] ` -topatch--> `if (true) { 	return org.apache.logging.log4j.core.pattern.LevelPatternConverter.INSTANCE; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LevelPatternConverter line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Le[...] ` -topatch--> `if (false) { 	return org.apache.logging.log4j.core.pattern.LevelPatternConverter.INSTANCE; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LevelPatternConverter line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((options == null) || ((options.length) == 0)) { 	return org.apache.logging.log4j.core.pattern.Le[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LevelPatternConverter line: 55, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.logging.log4j.core.pattern.LevelPatternConverter.INSTANCE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (charset != null) { 	if (java.nio.charset.Charset.isSupported(charset)) { 		c = java.nio.charset.[...] ` -topatch--> `if (true) { 	if (java.nio.charset.Charset.isSupported(charset)) { 		c = java.nio.charset.Charset.for[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (charset != null) { 	if (java.nio.charset.Charset.isSupported(charset)) { 		c = java.nio.charset.[...] ` -topatch--> `if (false) { 	if (java.nio.charset.Charset.isSupported(charset)) { 		c = java.nio.charset.Charset.fo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (charset != null) { 	if (java.nio.charset.Charset.isSupported(charset)) { 		c = java.nio.charset.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (header != null) { 	try { 		this.os.write(header, 0, header.length); 	} catch (java.io.IOExceptio[...] ` -topatch--> `if (true) { 	try { 		this.os.write(header, 0, header.length); 	} catch (java.io.IOException ioe) { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (header != null) { 	try { 		this.os.write(header, 0, header.length); 	} catch (java.io.IOExceptio[...] ` -topatch--> `if (false) { 	try { 		this.os.write(header, 0, header.length); 	} catch (java.io.IOException ioe) { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (header != null) { 	try { 		this.os.write(header, 0, header.length); 	} catch (java.io.IOExceptio[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (footer != null) { 	this.footer = footer; } ` -topatch--> `if (true) { 	this.footer = footer; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (footer != null) { 	this.footer = footer; } ` -topatch--> `if (false) { 	this.footer = footer; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (footer != null) { 	this.footer = footer; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `if (true) { 	((org.apache.logging.log4j.core.LifeCycle) (this.filter)).start(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `if (false) { 	((org.apache.logging.log4j.core.LifeCycle) (this.filter)).start(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `if (true) { 	((org.apache.logging.log4j.core.LifeCycle) (this.filter)).stop(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `if (false) { 	((org.apache.logging.log4j.core.LifeCycle) (this.filter)).stop(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.filter.AbstractFilterable line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((filter) != null) && ((filter) instanceof org.apache.logging.log4j.core.LifeCycle)) { 	((org.ap[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractAppender line: 138, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `startFilter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractAppender line: 139, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.started = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getLayout()) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error(([...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No layout set f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getLayout()) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error(([...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No layout set [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((getLayout()) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error(([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((manager) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No OutputStream[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((manager) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No OutputStrea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((manager) == null) { 	org.apache.logging.log4j.core.appender.AbstractAppender.LOGGER.error((("No[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 222, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `loader1 = org.apache.logging.log4j.core.helpers.Loader.getTCL() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.helpers.Loader.isChild(loader1, loader2)) { 	return org.apache.log[...] ` -topatch--> `if (true) { 	return org.apache.logging.log4j.core.helpers.Loader.isChild(loader1, loader3) ? loader1[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.helpers.Loader.isChild(loader1, loader2)) { 	return org.apache.log[...] ` -topatch--> `if (false) { 	return org.apache.logging.log4j.core.helpers.Loader.isChild(loader1, loader3) ? loader[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.helpers.Loader.isChild(loader1, loader2)) { 	return org.apache.log[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 232, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.logging.log4j.core.helpers.Loader.isChild(loader2, loader3) ? loader2 : loader3 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader1 != null) && (loader2 != null)) { 	java.lang.ClassLoader parent = loader1.getParent(); 	[...] ` -topatch--> `if (true) { 	java.lang.ClassLoader parent = loader1.getParent(); 	while ((parent != null) && (parent[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader1 != null) && (loader2 != null)) { 	java.lang.ClassLoader parent = loader1.getParent(); 	[...] ` -topatch--> `if (false) { 	java.lang.ClassLoader parent = loader1.getParent(); 	while ((parent != null) && (paren[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader1 != null) && (loader2 != null)) { 	java.lang.ClassLoader parent = loader1.getParent(); 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 239, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((parent != null) && (parent != loader2)) { 	parent = parent.getParent(); }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 240, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parent = parent.getParent() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 242, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return parent != null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((java.lang.System.getSecurityManager()) == null) { 	cl = java.lang.Thread.currentThread().getCon[...] ` -topatch--> `if (true) { 	cl = java.lang.Thread.currentThread().getContextClassLoader(); }else { 	cl = java.secur[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((java.lang.System.getSecurityManager()) == null) { 	cl = java.lang.Thread.currentThread().getCon[...] ` -topatch--> `if (false) { 	cl = java.lang.Thread.currentThread().getContextClassLoader(); }else { 	cl = java.secu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((java.lang.System.getSecurityManager()) == null) { 	cl = java.lang.Thread.currentThread().getCon[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 259, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cl = java.lang.Thread.currentThread().getContextClassLoader() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.ap[...] ` -topatch--> `if (true) { 	return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.apache.loggi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.ap[...] ` -topatch--> `if (false) { 	return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.apache.logg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	return new org.apache.logging.log4j.core.pattern.PatternParser(config, org.ap[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 287, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `patternConverters.add(new org.apache.logging.log4j.core.pattern.LiteralPatternConverter(config,  cur[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 289, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `formattingInfos.add(org.apache.logging.log4j.core.pattern.FormattingInfo.getDefault()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 298, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.append(c) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `parse(pattern, converters, fields) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 138, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.pattern.PatternConverter converter : converters) { 	org.apache.lo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (converter instanceof org.apache.logging.log4j.core.pattern.LogEventPatternConverter) { 	pc = ((o[...] ` -topatch--> `if (true) { 	pc = ((org.apache.logging.log4j.core.pattern.LogEventPatternConverter) (converter)); 	t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (converter instanceof org.apache.logging.log4j.core.pattern.LogEventPatternConverter) { 	pc = ((o[...] ` -topatch--> `if (false) { 	pc = ((org.apache.logging.log4j.core.pattern.LogEventPatternConverter) (converter)); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (converter instanceof org.apache.logging.log4j.core.pattern.LogEventPatternConverter) { 	pc = ((o[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pc = ((org.apache.logging.log4j.core.pattern.LogEventPatternConverter) (converter)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 142, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `handlesExceptions |= pc.handlesThrowable() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 148, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fieldIter.hasNext()) { 	field = fieldIter.next(); }else { 	field = org.apache.logging.log4j.core[...] ` -topatch--> `if (true) { 	field = fieldIter.next(); }else { 	field = org.apache.logging.log4j.core.pattern.Format[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 148, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fieldIter.hasNext()) { 	field = fieldIter.next(); }else { 	field = org.apache.logging.log4j.core[...] ` -topatch--> `if (false) { 	field = fieldIter.next(); }else { 	field = org.apache.logging.log4j.core.pattern.Forma[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 148, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fieldIter.hasNext()) { 	field = fieldIter.next(); }else { 	field = org.apache.logging.log4j.core[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 149, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `field = fieldIter.next() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 153, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list.add(new org.apache.logging.log4j.core.pattern.PatternFormatter(pc, field)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 460, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parms[i] = config ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	java.util.Stack<j[...] ` -topatch--> `if (true) { 	java.util.Stack<java.lang.Class<?>> classes = new java.util.Stack<java.lang.Class<?>>()[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	java.util.Stack<j[...] ` -topatch--> `if (false) { 	java.util.Stack<java.lang.Class<?>> classes = new java.util.Stack<java.lang.Class<?>>([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 306, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	java.util.Stack<j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 310, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (clazz != null) { 	classes.push(clazz); 	clazz = getCallerClass((++index)); }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 314, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return classes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rootTrace != null) { 	int rootIndex = (rootTrace.length) - 1; 	int stackIndex = (stackTrace.leng[...] ` -topatch--> `if (true) { 	int rootIndex = (rootTrace.length) - 1; 	int stackIndex = (stackTrace.length) - 1; 	whi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rootTrace != null) { 	int rootIndex = (rootTrace.length) - 1; 	int stackIndex = (stackTrace.leng[...] ` -topatch--> `if (false) { 	int rootIndex = (rootTrace.length) - 1; 	int stackIndex = (stackTrace.length) - 1; 	wh[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rootTrace != null) { 	int rootIndex = (rootTrace.length) - 1; 	int stackIndex = (stackTrace.leng[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 348, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `commonElementCount = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 349, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stackLength = stackTrace.length ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	try { 		java.lang[...] ` -topatch--> `if (true) { 	try { 		java.lang.Object[] params = new java.lang.Object[]{ index }; 		return ((java.la[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	try { 		java.lang[...] ` -topatch--> `if (false) { 	try { 		java.lang.Object[] params = new java.lang.Object[]{ index }; 		return ((java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass) != null) { 	try { 		java.lang[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 438, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ((java.lang.Class<?>) (org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass.invok[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.ResolverUtil line: 131, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.classloader = classloader ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.ResolverUtil line: 228, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `packageName = packageName.replace('.', '/') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.ResolverUtil line: 233, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `urls = loader.getResources(packageName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.ResolverUtil line: 239, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (urls.hasMoreElements()) { 	try { 		java.net.URL url = urls.nextElement(); 		java.lang.String [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `convBuf.setLength(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.Character.isUnicodeIdentifierStart(lastChar))) { 	return i; } ` -topatch--> `if (true) { 	return i; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.Character.isUnicodeIdentifierStart(lastChar))) { 	return i; } ` -topatch--> `if (false) { 	return i; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(java.lang.Character.isUnicodeIdentifierStart(lastChar))) { 	return i; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 192, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `convBuf.append(lastChar) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 194, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((i < (pattern.length())) && (java.lang.Character.isUnicodeIdentifierPart(pattern.charAt(i))))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 212, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((i < (pattern.length())) && ((pattern.charAt(i)) == '{')) { 	int begin = i++; 	int end; 	int [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pattern == null) { 	throw new java.lang.NullPointerException("pattern"); } ` -topatch--> `if (true) { 	throw new java.lang.NullPointerException("pattern"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pattern == null) { 	throw new java.lang.NullPointerException("pattern"); } ` -topatch--> `if (false) { 	throw new java.lang.NullPointerException("pattern"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pattern == null) { 	throw new java.lang.NullPointerException("pattern"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 262, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (i < patternLength) { 	c = pattern.charAt((i++));  	switch (state) { 		case LITERAL_STATE :   [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 263, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = pattern.charAt((i++)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 265, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (state) { 	case LITERAL_STATE :   		if (i == patternLength) { 			currentLiteral.append(c);  	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 277, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (pattern.charAt(i)) { 	case org.apache.logging.log4j.core.pattern.PatternParser.ESCAPE_CHAR :[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 324, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = finalizeConverter(c, pattern, i, currentLiteral, formattingInfo,  converterRules, patternConvert[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 328, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `state = org.apache.logging.log4j.core.pattern.PatternParser.ParserState.LITERAL_STATE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 329, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `formattingInfo = org.apache.logging.log4j.core.pattern.FormattingInfo.getDefault() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 330, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.setLength(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) != 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patte[...] ` -topatch--> `if (true) { 	patternConverters.add(new org.apache.logging.log4j.core.pattern.LiteralPatternConverter[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) != 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patte[...] ` -topatch--> `if (false) { 	patternConverters.add(new org.apache.logging.log4j.core.pattern.LiteralPatternConverte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 393, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) != 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patte[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 415, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = converterId.length(); (i > 0) && (converterClass == null); i--) { 	converterName = conv[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 416, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `converterName = converterName.substring(0, i) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((converterClass == null) && (rules != null)) { 	converterClass = rules.get(converterName); } ` -topatch--> `if (true) { 	converterClass = rules.get(converterName); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((converterClass == null) && (rules != null)) { 	converterClass = rules.get(converterName); } ` -topatch--> `if (false) { 	converterClass = rules.get(converterName); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((converterClass == null) && (rules != null)) { 	converterClass = rules.get(converterName); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 419, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `converterClass = rules.get(converterName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (converterClass == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("U[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("Unrecognized format[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (converterClass == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("U[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("Unrecognized forma[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (converterClass == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("U[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 433, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Method method : methods) { 	if (((java.lang.reflect.Modifier.isStatic(method.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 434, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((java.lang.reflect.Modifier.isStatic(method.getModifiers())) && (method.getDeclaringClass().equ[...] ` -topatch--> `if (true)  { 	if (newInstanceMethod == null) { 		newInstanceMethod = method; 	}else 		if (method.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 434, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((java.lang.reflect.Modifier.isStatic(method.getModifiers())) && (method.getDeclaringClass().equ[...] ` -topatch--> `if (false)  { 	if (newInstanceMethod == null) { 		newInstanceMethod = method; 	}else 		if (method.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 434, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((java.lang.reflect.Modifier.isStatic(method.getModifiers())) && (method.getDeclaringClass().equ[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	newInstanceMethod = method; }else 	if (method.getReturnType().equa[...] ` -topatch--> `if (true) { 	newInstanceMethod = method; }else 	if (method.getReturnType().equals(newInstanceMethod.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	newInstanceMethod = method; }else 	if (method.getReturnType().equa[...] ` -topatch--> `if (false) { 	newInstanceMethod = method; }else 	if (method.getReturnType().equals(newInstanceMethod[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	newInstanceMethod = method; }else 	if (method.getReturnType().equa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 437, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newInstanceMethod = method ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error(([...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("Class " + converter[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error(([...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error((("Class " + converte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newInstanceMethod == null) { 	org.apache.logging.log4j.core.pattern.PatternParser.LOGGER.error(([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 452, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parms != null) { 	int i = 0; 	boolean errors = false; 	for (java.lang.Class<?> clazz : parmTypes[...] ` -topatch--> `if (true) { 	int i = 0; 	boolean errors = false; 	for (java.lang.Class<?> clazz : parmTypes) { 		if [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 452, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parms != null) { 	int i = 0; 	boolean errors = false; 	for (java.lang.Class<?> clazz : parmTypes[...] ` -topatch--> `if (false) { 	int i = 0; 	boolean errors = false; 	for (java.lang.Class<?> clazz : parmTypes) { 		if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 452, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parms != null) { 	int i = 0; 	boolean errors = false; 	for (java.lang.Class<?> clazz : parmTypes[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 455, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class<?> clazz : parmTypes) { 	if ((clazz.isArray()) && (clazz.getName().equals("[Lja[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((clazz.isArray()) && (clazz.getName().equals("[Ljava.lang.String;"))) { 	java.lang.String[] opti[...] ` -topatch--> `if (true) { 	java.lang.String[] optionsArray = options.toArray(new java.lang.String[options.size()])[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((clazz.isArray()) && (clazz.getName().equals("[Ljava.lang.String;"))) { 	java.lang.String[] opti[...] ` -topatch--> `if (false) { 	java.lang.String[] optionsArray = options.toArray(new java.lang.String[options.size()][...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((clazz.isArray()) && (clazz.getName().equals("[Ljava.lang.String;"))) { 	java.lang.String[] opti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 458, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parms[i] = optionsArray ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 459, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.isAssignableFrom(org.apache.logging.log4j.core.config.Configuration.class)) { 	parms[i] = [...] ` -topatch--> `if (true) { 	parms[i] = this.config; }else { 	org.apache.logging.log4j.core.pattern.PatternParser.LO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 459, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.isAssignableFrom(org.apache.logging.log4j.core.config.Configuration.class)) { 	parms[i] = [...] ` -topatch--> `if (false) { 	parms[i] = this.config; }else { 	org.apache.logging.log4j.core.pattern.PatternParser.L[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 459, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (clazz.isAssignableFrom(org.apache.logging.log4j.core.config.Configuration.class)) { 	parms[i] = [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 466, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++i ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 468, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (errors) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 468, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (errors) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 468, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (errors) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 476, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newObj instanceof org.apache.logging.log4j.core.pattern.PatternConverter) { 	currentLiteral.dele[...] ` -topatch--> `if (true) { 	currentLiteral.delete(0, ((currentLiteral.length()) -  	((converterId.length()) - (conv[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 476, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newObj instanceof org.apache.logging.log4j.core.pattern.PatternConverter) { 	currentLiteral.dele[...] ` -topatch--> `if (false) { 	currentLiteral.delete(0, ((currentLiteral.length()) -  	((converterId.length()) - (con[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 476, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newObj instanceof org.apache.logging.log4j.core.pattern.PatternConverter) { 	currentLiteral.dele[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 477, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.delete(0, ((currentLiteral.length()) -  ((converterId.length()) - (converterName.leng[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 480, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ((org.apache.logging.log4j.core.pattern.PatternConverter) (newObj)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 509, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = org.apache.logging.log4j.core.pattern.PatternParser.extractConverter(c, pattern, i, convBuf, cur[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 514, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = org.apache.logging.log4j.core.pattern.PatternParser.extractOptions(pattern, i, options) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 518, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pc == null) { 	java.lang.StringBuilder msg;  	if ((converterId == null) || ((converterId.length([...] ` -topatch--> `if (true) { 	java.lang.StringBuilder msg;  	if ((converterId == null) || ((converterId.length()) == [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 518, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pc == null) { 	java.lang.StringBuilder msg;  	if ((converterId == null) || ((converterId.length([...] ` -topatch--> `if (false) { 	java.lang.StringBuilder msg;  	if ((converterId == null) || ((converterId.length()) ==[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 518, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pc == null) { 	java.lang.StringBuilder msg;  	if ((converterId == null) || ((converterId.length([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 538, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `patternConverters.add(pc) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 539, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `formattingInfos.add(formattingInfo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 541, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) > 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patter[...] ` -topatch--> `if (true) { 	patternConverters.add(new org.apache.logging.log4j.core.pattern.LiteralPatternConverter[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 541, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) > 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patter[...] ` -topatch--> `if (false) { 	patternConverters.add(new org.apache.logging.log4j.core.pattern.LiteralPatternConverte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 541, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentLiteral.length()) > 0) { 	patternConverters.add(new org.apache.logging.log4j.core.patter[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternParser line: 547, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentLiteral.setLength(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `collectPlugins(true, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap.containsKey(type)) { 	p[...] ` -topatch--> `if (true) { 	this.plugins = org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap.containsKey(type)) { 	p[...] ` -topatch--> `if (false) { 	this.plugins = org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap.containsKey(type)) { 	p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 136, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `plugins = org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap.get(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 137, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `preLoad = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	resolver.setClassLoader(loader); } ` -topatch--> `if (true) { 	resolver.setClassLoader(loader); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	resolver.setClassLoader(loader); } ` -topatch--> `if (false) { 	resolver.setClassLoader(loader); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (loader != null) { 	resolver.setClassLoader(loader); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 143, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resolver.setClassLoader(loader) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (preLoad) { 	java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.Concurrent[...] ` -topatch--> `if (true) { 	java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (preLoad) { 	java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.Concurrent[...] ` -topatch--> `if (false) { 	java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (preLoad) { 	java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.Concurrent[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((plugins.size()) == 0) { 	if (pkgs == null) { 		org.apache.logging.log4j.core.config.plugins.Plu[...] ` -topatch--> `if (true) { 	if (pkgs == null) { 		org.apache.logging.log4j.core.config.plugins.PluginManager.packag[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((plugins.size()) == 0) { 	if (pkgs == null) { 		org.apache.logging.log4j.core.config.plugins.Plu[...] ` -topatch--> `if (false) { 	if (pkgs == null) { 		org.apache.logging.log4j.core.config.plugins.PluginManager.packa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((plugins.size()) == 0) { 	if (pkgs == null) { 		org.apache.logging.log4j.core.config.plugins.Plu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 165, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String pkg : org.apache.logging.log4j.core.config.plugins.PluginManager.packages) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resolver.findInPackage(test, pkg) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 168, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class<?> item : resolver.getClasses()) { 	org.apache.logging.log4j.core.config.plugin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 179, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `plugins = org.apache.logging.log4j.core.config.plugins.PluginManager.pluginTypeMap.get(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(" in ") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 184, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `elapsed %= org.apache.logging.log4j.core.config.plugins.PluginManager.NANOS_PER_SECOND ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 185, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(numFormat.format(seconds)).append('.') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 186, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `numFormat = new java.text.DecimalFormat("000000000") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 187, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(numFormat.format(elapsed)).append(" seconds") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.plugins.PluginManager line: 188, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.config.plugins.PluginManager.LOGGER.debug(sb.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 201, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `logger = newInstance(this, name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (data == null) { 	data = new org.apache.logging.log4j.message.SimpleMessage(""); } ` -topatch--> `if (true) { 	data = new org.apache.logging.log4j.message.SimpleMessage(""); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (data == null) { 	data = new org.apache.logging.log4j.message.SimpleMessage(""); } ` -topatch--> `if (false) { 	data = new org.apache.logging.log4j.message.SimpleMessage(""); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (data == null) { 	data = new org.apache.logging.log4j.message.SimpleMessage(""); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 105, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.config.getConfigurationMonitor().checkConfiguration() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.loggerConfig.log(getName(), marker, fqcn, level, data, t) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties) != null) { 	props = new java.util.ArrayList<org.apache.logging.log4j.core.config.Pr[...] ` -topatch--> `if (true) { 	props = new java.util.ArrayList<org.apache.logging.log4j.core.config.Property>(this.pro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties) != null) { 	props = new java.util.ArrayList<org.apache.logging.log4j.core.config.Pr[...] ` -topatch--> `if (false) { 	props = new java.util.ArrayList<org.apache.logging.log4j.core.config.Property>(this.pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties) != null) { 	props = new java.util.ArrayList<org.apache.logging.log4j.core.config.Pr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.ThreadContext.isEmpty()) && ((properties == null) || ((properties.size[...] ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.ThreadContext.isEmpty()) && ((properties == null) || ((properties.size[...] ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.logging.log4j.ThreadContext.isEmpty()) && ((properties == null) || ((properties.size[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 187, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return buf ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 163, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `threadName = java.lang.Thread.currentThread().getName() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 145, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `os.flush() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `manager.flush() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 265, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.LoggerContext.logger.debug(("Reconfiguration started for context " + ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 267, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setConfiguration(instance) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.LoggerContext line: 274, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.LoggerContext.logger.debug("Reconfiguration completed") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 184, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = count; i > 0; i--) { 	end = buf.lastIndexOf('.', (end - 1)); 	if (end == (-1)) { 		retu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 185, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `end = buf.lastIndexOf('.', (end - 1)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	return buf; } ` -topatch--> `if (true) { 	return buf; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	return buf; } ` -topatch--> `if (false) { 	return buf; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.NameAbbreviator line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (end == (-1)) { 	return buf; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getFilter()) != null) { 	org.apache.logging.log4j.core.Filter.Result r = getFilter().filter(eve[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.Filter.Result r = getFilter().filter(event); 	if (r == (o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getFilter()) != null) { 	org.apache.logging.log4j.core.Filter.Result r = getFilter().filter(eve[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.Filter.Result r = getFilter().filter(event); 	if (r == ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((getFilter()) != null) { 	org.apache.logging.log4j.core.Filter.Result r = getFilter().filter(eve[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((level) != null) { 	if ((intLevel) < (event.getLevel().intLevel())) { 		return; 	} } ` -topatch--> `if (true) { 	if ((this.intLevel) < (event.getLevel().intLevel())) { 		return; 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((level) != null) { 	if ((intLevel) < (event.getLevel().intLevel())) { 		return; 	} } ` -topatch--> `if (false) { 	if ((this.intLevel) < (event.getLevel().intLevel())) { 		return; 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((level) != null) { 	if ((intLevel) < (event.getLevel().intLevel())) { 		return; 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((recursive.get()) != null) { 	appender.getHandler().error(("Recursive call to appender " + (appe[...] ` -topatch--> `if (true) { 	this.appender.getHandler().error(("Recursive call to appender " + (this.appender.getNam[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((recursive.get()) != null) { 	appender.getHandler().error(("Recursive call to appender " + (appe[...] ` -topatch--> `if (false) { 	this.appender.getHandler().error(("Recursive call to appender " + (this.appender.getNa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((recursive.get()) != null) { 	appender.getHandler().error(("Recursive call to appender " + (appe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `recursive.set(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(appender.isStarted())) { 	appender.getHandler().error(("Attempted to append to non-started app[...] ` -topatch--> `if (true) { 	this.appender.getHandler().error(("Attempted to append to non-started appender " + (thi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(appender.isStarted())) { 	appender.getHandler().error(("Attempted to append to non-started app[...] ` -topatch--> `if (false) { 	this.appender.getHandler().error(("Attempted to append to non-started appender " + (th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(appender.isStarted())) { 	appender.getHandler().error(("Attempted to append to non-started app[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((appender) instanceof org.apache.logging.log4j.core.filter.Filterable) && (((org.apache.logging[...] ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((appender) instanceof org.apache.logging.log4j.core.filter.Filterable) && (((org.apache.logging[...] ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((appender) instanceof org.apache.logging.log4j.core.filter.Filterable) && (((org.apache.logging[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 98, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `appender.append(event) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.AppenderControl line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `recursive.set(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 281, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `log(event) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 310, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `counter.incrementAndGet() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isFiltered(event)) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isFiltered(event)) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isFiltered(event)) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 316, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `callAppenders(event) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((additive) && ((parent) != null)) { 	parent.log(event); } ` -topatch--> `if (true) { 	this.parent.log(event); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((additive) && ((parent) != null)) { 	parent.log(event); } ` -topatch--> `if (false) { 	this.parent.log(event); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((additive) && ((parent) != null)) { 	parent.log(event); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 322, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((counter.decrementAndGet()) == 0) { 	synchronized(this) { 		if (shutdown) { 			notifyAll(); 		} [...] ` -topatch--> `if (true) { 	synchronized(this) { 		if (this.shutdown) { 			notifyAll(); 		} 	}  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 322, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((counter.decrementAndGet()) == 0) { 	synchronized(this) { 		if (shutdown) { 			notifyAll(); 		} [...] ` -topatch--> `if (false) { 	synchronized(this) { 		if (this.shutdown) { 			notifyAll(); 		} 	}  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 322, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((counter.decrementAndGet()) == 0) { 	synchronized(this) { 		if (shutdown) { 			notifyAll(); 		} [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 323, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(this) { 	if (shutdown) { 		notifyAll(); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	notifyAll(); } ` -topatch--> `if (true) { 	notifyAll(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	notifyAll(); } ` -topatch--> `if (false) { 	notifyAll(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	notifyAll(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 334, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.AppenderControl control : appenders.values()) { 	control.c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 335, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `control.callAppender(event) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 118, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.ThreadPatternConverter line: 57, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(event.getThreadName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 163, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(this) { 	if (timestamp != (lastTimestamp)) { 		lastTimestamp = timestamp; 		cachedDate [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp != (lastTimestamp)) { 	lastTimestamp = timestamp; 	cachedDate = simpleFormat.format(ti[...] ` -topatch--> `if (true) { 	this.lastTimestamp = timestamp; 	this.cachedDate = this.simpleFormat.format(timestamp);[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp != (lastTimestamp)) { 	lastTimestamp = timestamp; 	cachedDate = simpleFormat.format(ti[...] ` -topatch--> `if (false) { 	this.lastTimestamp = timestamp; 	this.cachedDate = this.simpleFormat.format(timestamp)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp != (lastTimestamp)) { 	lastTimestamp = timestamp; 	cachedDate = simpleFormat.format(ti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 165, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastTimestamp = timestamp ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 166, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cachedDate = simpleFormat.format(timestamp) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.DatePatternConverter line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `output.append(cachedDate) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `os.write(bytes, offset, length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 140, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.pattern.PatternFormatter formatter : formatters) { 	formatter.for[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 141, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `formatter.format(event, buf) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((replace) != null) { 	str = replace.format(str); } ` -topatch--> `if (true) { 	str = this.replace.format(str); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((replace) != null) { 	str = replace.format(str); } ` -topatch--> `if (false) { 	str = this.replace.format(str); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.PatternLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((replace) != null) { 	str = replace.format(str); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.OutputStreamManager line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `write(bytes, 0, bytes.length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LevelPatternConverter line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `output.append(((levelMap) == null ? event.getLevel().toString() : levelMap.get(event.getLevel()))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LoggerPatternConverter line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(abbreviate(event.getLoggerName())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 110, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `readLock.lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `manager.write(getLayout().toByteArray(event)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.immediateFlush) { 	manager.flush(); } ` -topatch--> `if (true) { 	this.manager.flush(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.immediateFlush) { 	manager.flush(); } ` -topatch--> `if (false) { 	this.manager.flush(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.immediateFlush) { 	manager.flush(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `readLock.unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((threadName) == null) { 	threadName = java.lang.Thread.currentThread().getName(); } ` -topatch--> `if (true) { 	this.threadName = java.lang.Thread.currentThread().getName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((threadName) == null) { 	threadName = java.lang.Thread.currentThread().getName(); } ` -topatch--> `if (false) { 	this.threadName = java.lang.Thread.currentThread().getName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((threadName) == null) { 	threadName = java.lang.Thread.currentThread().getName(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 284, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.getConfigurationMonitor().checkConfiguration() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, marke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, mark[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LiteralPatternConverter line: 54, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append((substitute ? config.getSubst().replace(event, literal) : literal)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter line: 63, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(lineSep) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternFormatter line: 36, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `converter.format(event, buf) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.PatternFormatter line: 37, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `field.format(startField, buf) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (msg != null) { 	java.lang.String result; 	if (msg instanceof org.apache.logging.log4j.message.Mu[...] ` -topatch--> `if (true) { 	java.lang.String result; 	if (msg instanceof org.apache.logging.log4j.message.Multiform[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (msg != null) { 	java.lang.String result; 	if (msg instanceof org.apache.logging.log4j.message.Mu[...] ` -topatch--> `if (false) { 	java.lang.String result; 	if (msg instanceof org.apache.logging.log4j.message.Multifor[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (msg != null) { 	java.lang.String result; 	if (msg instanceof org.apache.logging.log4j.message.Mu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (msg instanceof org.apache.logging.log4j.message.MultiformatMessage) { 	result = ((org.apache.log[...] ` -topatch--> `if (true) { 	result = ((org.apache.logging.log4j.message.MultiformatMessage) (msg)).getFormattedMess[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (msg instanceof org.apache.logging.log4j.message.MultiformatMessage) { 	result = ((org.apache.log[...] ` -topatch--> `if (false) { 	result = ((org.apache.logging.log4j.message.MultiformatMessage) (msg)).getFormattedMes[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (msg instanceof org.apache.logging.log4j.message.MultiformatMessage) { 	result = ((org.apache.log[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 70, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append((((config) != null) && (result.contains("${")) ?  config.getSubst().replace(event,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength > (maxLength)) { 	buffer.delete(fieldStart, ((buffer.length()) - (maxLength))); }else [...] ` -topatch--> `if (true) { 	buffer.delete(fieldStart, ((buffer.length()) - (this.maxLength))); }else 	if (rawLength[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength > (maxLength)) { 	buffer.delete(fieldStart, ((buffer.length()) - (maxLength))); }else [...] ` -topatch--> `if (false) { 	buffer.delete(fieldStart, ((buffer.length()) - (this.maxLength))); }else 	if (rawLengt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength > (maxLength)) { 	buffer.delete(fieldStart, ((buffer.length()) - (maxLength))); }else [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength < (minLength)) { 	if (leftAlign) { 		final int fieldEnd = buffer.length(); 		buffer.se[...] ` -topatch--> `if (true) { 	if (this.leftAlign) { 		final int fieldEnd = buffer.length(); 		buffer.setLength((field[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength < (minLength)) { 	if (leftAlign) { 		final int fieldEnd = buffer.length(); 		buffer.se[...] ` -topatch--> `if (false) { 	if (this.leftAlign) { 		final int fieldEnd = buffer.length(); 		buffer.setLength((fiel[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rawLength < (minLength)) { 	if (leftAlign) { 		final int fieldEnd = buffer.length(); 		buffer.se[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 205, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ctx ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (true) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (false) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 70, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return getDefault() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (true) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `if (false) { 	return ctx; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ctx != null) { 	return ctx; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties == null) || ((properties.size()) == 0)) { 	return org.apache.logging.log4j.ThreadCon[...] ` -topatch--> `if (true) { 	return org.apache.logging.log4j.ThreadContext.getImmutableContext(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties == null) || ((properties.size()) == 0)) { 	return org.apache.logging.log4j.ThreadCon[...] ` -topatch--> `if (false) { 	return org.apache.logging.log4j.ThreadContext.getImmutableContext(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((properties == null) || ((properties.size()) == 0)) { 	return org.apache.logging.log4j.ThreadCon[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 121, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.logging.log4j.ThreadContext.getImmutableContext() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 310, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `config.getConfigurationMonitor().checkConfiguration() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, marke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(this.logger, level, mark[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.Logger line: 312, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.logging.log4j.core.Filter.Result r = filter.filter(logger, level, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `result = msg.getFormattedMessage() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Transform line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((input == null) ||  ((input.length()) == 0)) ||  (((((input.indexOf('"')) == (-1)) &&  ((input.[...] ` -topatch--> `if (true)      { 	return input; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Transform line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((input == null) ||  ((input.length()) == 0)) ||  (((((input.indexOf('"')) == (-1)) &&  ((input.[...] ` -topatch--> `if (false)      { 	return input; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Transform line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((input == null) ||  ((input.length()) == 0)) ||  (((((input.indexOf('"')) == (-1)) &&  ((input.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Transform line: 53, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return input ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.MessagePatternConverter line: 66, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `result = ((org.apache.logging.log4j.message.MultiformatMessage) (msg)).getFormattedMessage(formats) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((options != null) && ((options.length) == 1)) && ((options[0].length()) > 0)) { 	java.lang.Stri[...] ` -topatch--> `if (true) { 	java.lang.String[] opts = options[0].split(",", 2); 	java.lang.String first = opts[0].t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((options != null) && ((options.length) == 1)) && ((options[0].length()) > 0)) { 	java.lang.Stri[...] ` -topatch--> `if (false) { 	java.lang.String[] opts = options[0].split(",", 2); 	java.lang.String first = opts[0].[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((options != null) && ((options.length) == 1)) && ((options[0].length()) > 0)) { 	java.lang.Stri[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 228, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.StackTraceElement element : stackTrace) { 	java.lang.String className = element.getCl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	if (fqcnOfLogger.equals(className)) { 		continue; 	} 	location = element; 	break; } ` -topatch--> `if (true) { 	if (this.fqcnOfLogger.equals(className)) { 		continue; 	} 	this.location = element; 	br[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	if (fqcnOfLogger.equals(className)) { 		continue; 	} 	location = element; 	break; } ` -topatch--> `if (false) { 	if (this.fqcnOfLogger.equals(className)) { 		continue; 	} 	this.location = element; 	b[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (next) { 	if (fqcnOfLogger.equals(className)) { 		continue; 	} 	location = element; 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	continue; } ` -topatch--> `if (true) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	continue; } ` -topatch--> `if (false) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	continue; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 234, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `location = element ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 235, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	next = true; }else 	if (org.apache.logging.log4j.core.impl.Lo[...] ` -topatch--> `if (true) { 	next = true; }else 	if (org.apache.logging.log4j.core.impl.Log4jLogEvent.NOT_AVAIL.equa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	next = true; }else 	if (org.apache.logging.log4j.core.impl.Lo[...] ` -topatch--> `if (false) { 	next = true; }else 	if (org.apache.logging.log4j.core.impl.Log4jLogEvent.NOT_AVAIL.equ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fqcnOfLogger.equals(className)) { 	next = true; }else 	if (org.apache.logging.log4j.core.impl.Lo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 239, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `next = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.impl.Log4jLogEvent.NOT_AVAIL.equals(className)) { 	break; } ` -topatch--> `if (true) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.impl.Log4jLogEvent.NOT_AVAIL.equals(className)) { 	break; } ` -topatch--> `if (false) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.logging.log4j.core.impl.Log4jLogEvent.NOT_AVAIL.equals(className)) { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `array[i].stop() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftAlign) { 	final int fieldEnd = buffer.length(); 	buffer.setLength((fieldStart + (minLength))[...] ` -topatch--> `if (true) { 	final int fieldEnd = buffer.length(); 	buffer.setLength((fieldStart + (this.minLength))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftAlign) { 	final int fieldEnd = buffer.length(); 	buffer.setLength((fieldStart + (minLength))[...] ` -topatch--> `if (false) { 	final int fieldEnd = buffer.length(); 	buffer.setLength((fieldStart + (this.minLength)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (leftAlign) { 	final int fieldEnd = buffer.length(); 	buffer.setLength((fieldStart + (minLength))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.setLength((fieldStart + (minLength))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 118, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = fieldEnd; i < (buffer.length()); i++) { 	buffer.setCharAt(i, ' '); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.pattern.FormattingInfo line: 119, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.setCharAt(i, ' ') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 147, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.apache.logging.log4j.core.config.ConfigurationFactory.configFactory = factory ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fqcnOfLogger) == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fqcnOfLogger) == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((fqcnOfLogger) == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((location) == null) { 	java.lang.StackTraceElement[] stackTrace = java.lang.Thread.currentThread[...] ` -topatch--> `if (true) { 	java.lang.StackTraceElement[] stackTrace = java.lang.Thread.currentThread().getStackTra[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((location) == null) { 	java.lang.StackTraceElement[] stackTrace = java.lang.Thread.currentThread[...] ` -topatch--> `if (false) { 	java.lang.StackTraceElement[] stackTrace = java.lang.Thread.currentThread().getStackTr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.Log4jLogEvent line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((location) == null) { 	java.lang.StackTraceElement[] stackTrace = java.lang.Thread.currentThread[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 162, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.config.ConfigurationFactory.factories.remove(factory) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.clearAppenders() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.stopFilter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 184, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `waitForCompletion() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 187, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iterator.hasNext()) { 	org.apache.logging.log4j.core.config.AppenderControl ctl = iterator.ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (shutdown) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 291, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `shutdown = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.LoggerConfig line: 293, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((counter.get()) > 0) { 	try { 		wait(((org.apache.logging.log4j.core.config.LoggerConfig.WAIT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.BaseConfiguration line: 312, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lc.addAppender(appender, null, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 482, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Method method : methods) { 	if (method.getName().equals("getSuppressed")) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 483, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("getSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.g[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.getSuppressed = method; }else 	if (me[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 483, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("getSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.g[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.getSuppressed = method; }else 	if (m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 483, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("getSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 484, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.apache.logging.log4j.core.impl.ThrowableProxy.getSuppressed = method ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("addSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.a[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.addSuppressed = method; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("addSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.a[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.addSuppressed = method; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (method.getName().equals("addSuppressed")) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.a[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 486, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.apache.logging.log4j.core.impl.ThrowableProxy.addSuppressed = method ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 500, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Method method : methods) { 	int modifier = method.getModifiers(); 	if ((metho[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 502, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getName().equals("getCallerClass")) && (java.lang.reflect.Modifier.isStatic(modifier))) [...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass = method; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 502, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getName().equals("getCallerClass")) && (java.lang.reflect.Modifier.isStatic(modifier))) [...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass = method; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 502, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getName().equals("getCallerClass")) && (java.lang.reflect.Modifier.isStatic(modifier))) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 503, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.apache.logging.log4j.core.impl.ThrowableProxy.getCallerClass = method ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.impl.ThrowableProxy line: 504, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 259, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `classLoader = org.apache.logging.log4j.core.helpers.Loader.class.getClassLoader() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (classLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to[...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + reso[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (classLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to[...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + res[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (classLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + resource) + "] us[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `if (true) { 	return url; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `if (false) { 	return url; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 87, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying [...] ` -topatch--> `if (true) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + reso[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying [...] ` -topatch--> `if (false) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + res[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultLoader != null) { 	org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 93, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((((("Trying to find [" + resource) + "] us[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `if (true) { 	return url; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `if (false) { 	return url; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (url != null) { 	return url; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.helpers.Loader line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.logging.log4j.core.helpers.Loader.LOGGER.trace((("Trying to find [" + resource) + "] usin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(true, null); 	if (config == null) { 		config = getC[...] ` -topatch--> `if (true) { 	config = getConfiguration(true, null); 	if (config == null) { 		config = getConfigurati[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(true, null); 	if (config == null) { 		config = getC[...] ` -topatch--> `if (false) { 	config = getConfiguration(true, null); 	if (config == null) { 		config = getConfigurat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(true, null); 	if (config == null) { 		config = getC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 363, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `config = getConfiguration(true, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, name); 	if (config == null) { 		config = get[...] ` -topatch--> `if (true) { 	config = getConfiguration(false, name); 	if (config == null) { 		config = getConfigurat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, name); 	if (config == null) { 		config = get[...] ` -topatch--> `if (false) { 	config = getConfiguration(false, name); 	if (config == null) { 		config = getConfigura[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, name); 	if (config == null) { 		config = get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 365, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `config = getConfiguration(false, name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, null); } ` -topatch--> `if (true) { 	config = getConfiguration(false, null); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, null); } ` -topatch--> `if (false) { 	config = getConfiguration(false, null); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	config = getConfiguration(false, null); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 367, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `config = getConfiguration(false, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 377, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.config.ConfigurationFactory factory : org.apache.logging.log4j.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 381, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (types == null) { 	continue; } ` -topatch--> `if (true) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 381, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (types == null) { 	continue; } ` -topatch--> `if (false) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 381, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (types == null) { 	continue; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 385, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String suffix : types) { 	if (suffix.equals("*")) { 		continue; 	} 	configName = (nam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 386, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (suffix.equals("*")) { 	continue; } ` -topatch--> `if (true) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 386, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (suffix.equals("*")) { 	continue; } ` -topatch--> `if (false) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 386, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (suffix.equals("*")) { 	continue; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 387, pointed element: CtContinueImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtContinueImpl) `continue ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 389, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `configName = (named) ? (prefix + name) + suffix : prefix + suffix ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (source != null) { 	return factory.getConfiguration(source); } ` -topatch--> `if (true) { 	return factory.getConfiguration(source); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (source != null) { 	return factory.getConfiguration(source); } ` -topatch--> `if (false) { 	return factory.getConfiguration(source); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.config.ConfigurationFactory line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (source != null) { 	return factory.getConfiguration(source); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 81, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.logging.log4j.core.layout.HTMLLayout.FontSize fontSize : org.apache.logging.log4j.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fontSize.size.equals(size)) { 	return fontSize; } ` -topatch--> `if (true) { 	return fontSize; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fontSize.size.equals(size)) { 	return fontSize; } ` -topatch--> `if (false) { 	return fontSize; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fontSize.size.equals(size)) { 	return fontSize; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 83, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return fontSize ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP).append("<tr>").append(org.apac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td>") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 121, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(((event.getMillis()) - (jvmStartTime))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td title=\"").append(escapedThread).append(" thread\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(escapedThread) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 127, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td title=\"Level\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (event.getLevel().equals(org.apache.logging.log4j.Level.DEBUG)) { 	sbuf.append("<font color=\"#33[...] ` -topatch--> `if (true) { 	sbuf.append("<font color=\"#339933\">"); 	sbuf.append(org.apache.logging.log4j.core.hel[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (event.getLevel().equals(org.apache.logging.log4j.Level.DEBUG)) { 	sbuf.append("<font color=\"#33[...] ` -topatch--> `if (false) { 	sbuf.append("<font color=\"#339933\">"); 	sbuf.append(org.apache.logging.log4j.core.he[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (event.getLevel().equals(org.apache.logging.log4j.Level.DEBUG)) { 	sbuf.append("<font color=\"#33[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<font color=\"#339933\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(org.apache.logging.log4j.core.helpers.Transform.escapeTags(java.lang.String.valueOf(even[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</font>") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 141, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((escapedLogger.length()) == 0) { 	escapedLogger = "root"; } ` -topatch--> `if (true) { 	escapedLogger = "root"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((escapedLogger.length()) == 0) { 	escapedLogger = "root"; } ` -topatch--> `if (false) { 	escapedLogger = "root"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((escapedLogger.length()) == 0) { 	escapedLogger = "root"; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 145, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `escapedLogger = "root" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 147, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td title=\"").append(escapedLogger).append(" logger\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 148, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(escapedLogger) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 149, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (locationInfo) { 	java.lang.StackTraceElement element = event.getSource(); 	sbuf.append("<td>"); [...] ` -topatch--> `if (true) { 	java.lang.StackTraceElement element = event.getSource(); 	sbuf.append("<td>"); 	sbuf.ap[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (locationInfo) { 	java.lang.StackTraceElement element = event.getSource(); 	sbuf.append("<td>"); [...] ` -topatch--> `if (false) { 	java.lang.StackTraceElement element = event.getSource(); 	sbuf.append("<td>"); 	sbuf.a[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (locationInfo) { 	java.lang.StackTraceElement element = event.getSource(); 	sbuf.append("<td>"); [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 153, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td>") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(org.apache.logging.log4j.core.helpers.Transform.escapeTags(element.getFileName())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 155, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(':') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 156, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(element.getLineNumber()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 157, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<td title=\"Message\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 161, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(org.apache.logging.log4j.core.helpers.Transform.escapeTags(event.getMessage().getFormatt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 162, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 163, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</tr>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextStack().getDepth()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"fo[...] ` -topatch--> `if (true) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-size : ").append(this.fontSize); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextStack().getDepth()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"fo[...] ` -topatch--> `if (false) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-size : ").append(this.fontSize);[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextStack().getDepth()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"fo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextMap().size()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-siz[...] ` -topatch--> `if (true) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-size : ").append(this.fontSize); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextMap().size()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-siz[...] ` -topatch--> `if (false) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-size : ").append(this.fontSize);[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((event.getContextMap().size()) > 0) { 	sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-siz[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<tr><td bgcolor=\"#EEEEEE\" style=\"font-size : ").append(fontSize) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 175, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(";\" colspan=\"6\" ") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 176, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("title=\"Mapped Diagnostic Context\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 177, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("MDC: ").append(org.apache.logging.log4j.core.helpers.Transform.escapeTags(event.getCont[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 178, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("</td></tr>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (throwable != null) { 	sbuf.append("<tr><td bgcolor=\"#993300\" style=\"color:White; font-size : [...] ` -topatch--> `if (true) { 	sbuf.append("<tr><td bgcolor=\"#993300\" style=\"color:White; font-size : ").append(thi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (throwable != null) { 	sbuf.append("<tr><td bgcolor=\"#993300\" style=\"color:White; font-size : [...] ` -topatch--> `if (false) { 	sbuf.append("<tr><td bgcolor=\"#993300\" style=\"color:White; font-size : ").append(th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (throwable != null) { 	sbuf.append("<tr><td bgcolor=\"#993300\" style=\"color:White; font-size : [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 234, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" ") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 235, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("\"http://www.w3.org/TR/html4/loose.dtd\">") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 236, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 237, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<html>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 238, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<head>").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 239, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<title>").append(title).append("</title>").append(org.apache.logging.log4j.core.layout.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 240, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<style type=\"text/css\">").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.logging.log4j.core.layout.HTMLLayout line: 241, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sbuf.append("<!--").append(org.apache.logging.log4j.core.layout.HTMLLayout.LINE_SEP) ` -topatch--> `-` (null) 
