cd /tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source oak-core/src/main/java \
	--classpath "oak-core/target/classes:oak-core/target/test-classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk-api/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-commons/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-blob/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk-remote/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-jcr/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-upgrade/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-http/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-lucene/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-solr-core/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-solr-osgi/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-auth-external/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-auth-ldap/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-run/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-it/mk/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-it/osgi/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-pojosr/target/classes:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-tarmk-failover/target/classes:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.3/tika-core-1.3.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.4/maven-repository-metadata-3.0.4.jar:/home/tdurieux/.m2/repository/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpmime/4.3.1/httpmime-4.3.1.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/3.4.0/pax-exam-junit4-3.4.0.jar:/home/tdurieux/.m2/repository/rome/rome/0.9/rome-0.9.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.7.1/lucene-core-4.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-collections/1.3.0/ops4j-base-util-collections-1.3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.22/kryo-2.22.jar:/home/tdurieux/.m2/repository/org/apache/poi/poi-ooxml/3.10-beta2/poi-ooxml-3.10-beta2.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.3.1/org.osgi.core-4.3.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-join/4.7.1/lucene-join-4.7.1.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/com/googlecode/pojosr/de.kalpatec.pojosr.framework/0.2.1/de.kalpatec.pojosr.framework-0.2.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-maven-commons/1.5.2/pax-url-maven-commons-1.5.2.jar:/home/tdurieux/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.6/log4j-over-slf4j-1.7.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/1.1-SNAPSHOT/oak-mk-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/2.0.0/tinybundles-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.4.0/ops4j-base-spi-1.4.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.4/maven-model-3.0.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.fileinstall/3.2.8/org.apache.felix.fileinstall-3.2.8.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.2.1/org.apache.felix.framework-4.2.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-avl/1.5.5/apacheds-core-avl-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.3.3/httpclient-4.3.3.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.8.0/jackrabbit-data-2.8.0-tests.jar:/home/tdurieux/.m2/repository/edu/ucar/netcdf/4.2-min/netcdf-4.2-min.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.6/jcl-over-slf4j-1.7.6.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-bootstrap-partition/1.5.5/apacheds-bootstrap-partition-1.5.5.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.4.0/ops4j-base-monitors-1.4.0.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.10.v20130312/jetty-security-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0.1/geronimo-stax-api_1.0_spec-1.0.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-ldap/0.9.15/shared-ldap-0.9.15.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-test-framework/4.7.1/lucene-test-framework-4.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.4.0/ops4j-base-io-1.4.0.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.4/maven-model-builder-3.0.4.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.8.0/jackrabbit-core-2.8.0-tests.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.8.0/jackrabbit-jcr-server-2.8.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.4.0/ops4j-base-util-property-1.4.0.jar:/home/tdurieux/.m2/repository/jline/jline/2.11/jline-2.11.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-bootstrap/1.5.5/apacheds-schema-bootstrap-1.5.5.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.10.v20130312/jetty-servlet-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-asn1-codec/0.9.15/shared-asn1-codec-0.9.15.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/8.1.10.v20130312/jetty-webapp-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/org/apache/solr/solr-core/4.7.1/solr-core-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.10.v20130312/jetty-continuation-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/de/l3s/boilerpipe/boilerpipe/1.1.0/boilerpipe-1.1.0.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/apache/jclouds/api/sts/1.7.0/sts-1.7.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.5.2/pax-url-aether-1.5.2.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-utils/1.5.5/apacheds-utils-1.5.5.jar:/home/tdurieux/.m2/repository/bouncycastle/bcprov-jdk15/140/bcprov-jdk15-140.jar:/home/tdurieux/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.2.3/sisu-inject-bean-2.2.3.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.176/h2-1.3.176.jar:/home/tdurieux/.m2/repository/com/spatial4j/spatial4j/0.4.1/spatial4j-0.4.1.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-xml/1.3.0/ops4j-base-util-xml-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-ldap-constants/0.9.15/shared-ldap-constants-0.9.15.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5/plexus-container-default-1.5.5.jar:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-guice/3.0.3/sisu-guice-3.0.3-no_aop.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/1.1-SNAPSHOT/oak-mk-api-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.8.0/jackrabbit-spi-2.8.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.8.1/xercesImpl-2.8.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.10.v20130312/jetty-io-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.7.0/pax-swissbox-lifecycle-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-blob/1.1-SNAPSHOT/oak-blob-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.12.2/mongo-java-driver-2.12.2.jar:/home/tdurieux/.m2/repository/org/apache/ant/ant/1.8.2/ant-1.8.2.jar:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/3.4.0/pax-exam-spi-3.4.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-jdbm-store/1.5.5/apacheds-jdbm-store-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-base/1.5.5/apacheds-xdbm-base-1.5.5.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-spatial/4.7.1/lucene-spatial-4.7.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.8.0/jackrabbit-jcr-tests-2.8.0.jar:/home/tdurieux/.m2/repository/com/carrotsearch/randomizedtesting/junit4-ant/2.0.13/junit4-ant-2.0.13.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jmx/8.1.10.v20130312/jetty-jmx-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-queryparser/4.7.1/lucene-queryparser-4.7.1.jar:/home/tdurieux/.m2/repository/org/easymock/easymock/3.1/easymock-3.1.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/api/api-all/1.0.0-M20/api-all-1.0.0-M20.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-expressions/4.7.1/lucene-expressions-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/james/apache-mime4j-dom/0.7.2/apache-mime4j-dom-0.7.2.jar:/home/tdurieux/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.03/xml-apis-1.3.03.jar:/home/tdurieux/.m2/repository/org/apache/poi/poi-scratchpad/3.10-beta2/poi-scratchpad-3.10-beta2.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar:/home/tdurieux/.m2/repository/biz/aQute/bnd/bndlib/2.2.0/bndlib-2.2.0.jar:/home/tdurieux/.m2/repository/org/codehaus/groovy/groovy-all/2.3.1/groovy-all-2.3.1.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.jaas/0.0.2/org.apache.felix.jaas-0.0.2.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/james/apache-mime4j-core/0.7.2/apache-mime4j-core-0.7.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-auth-external/1.1-SNAPSHOT/oak-auth-external-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.5/xz-1.5.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-jndi/1.5.5/apacheds-core-jndi-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-server-jndi/1.5.5/apacheds-server-jndi-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.logservice/1.0.2/org.apache.sling.commons.logservice-1.0.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.5.2/pax-url-commons-1.5.2.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-entry/1.5.5/apacheds-core-entry-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-sandbox/4.7.1/lucene-sandbox-4.7.1.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-debug-all/4.1/asm-debug-all-4.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.8/commons-compress-1.8.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr/1.8.2/org.apache.felix.scr-1.8.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/1.1-SNAPSHOT/oak-commons-1.1-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.configadmin/1.8.0/org.apache.felix.configadmin-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.7.1/lucene-analyzers-common-4.7.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-asn1/0.9.15/shared-asn1-0.9.15.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.4.0/ops4j-base-lang-1.4.0.jar:/home/tdurieux/.m2/repository/org/antlr/antlr-runtime/3.5/antlr-runtime-3.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/3.4.0/pax-exam-3.4.0.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.0.1B_spec/1.0.1/geronimo-jta_1.0.1B_spec-1.0.1.jar:/home/tdurieux/.m2/repository/com/drewnoakes/metadata-extractor/2.6.2/metadata-extractor-2.6.2.jar:/home/tdurieux/.m2/repository/com/gmongo/gmongo/1.1/gmongo-1.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/4.1/asm-commons-4.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-kerberos-shared/1.5.5/apacheds-kerberos-shared-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-parsers/1.5/tika-parsers-1.5.jar:/home/tdurieux/.m2/repository/com/carrotsearch/hppc/0.5.2/hppc-0.5.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.10.v20130312/jetty-http-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-upgrade/1.1-SNAPSHOT/oak-upgrade-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core/1.5.5/apacheds-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/bouncycastle/bcmail-jdk15/1.45/bcmail-jdk15-1.45.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar:/home/tdurieux/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.9/animal-sniffer-annotations-1.9.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/8.1.10.v20130312/jetty-xml-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.5/tika-core-1.5.jar:/home/tdurieux/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-solr-core/1.1-SNAPSHOT/oak-solr-core-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/1.1-SNAPSHOT/oak-lucene-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.8.0/jackrabbit-data-2.8.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.10.v20130312/jetty-util-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.9.6/org.apache.felix.scr.annotations-1.9.6.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.8.0/jackrabbit-webdav-2.8.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-shared/1.5.5/apacheds-core-shared-1.5.5.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-assistedinject/3.0/guice-assistedinject-3.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-grouping/4.7.1/lucene-grouping-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.8.0/jackrabbit-jcr-commons-2.8.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-protocol-shared/1.5.5/apacheds-protocol-shared-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.jar:/home/tdurieux/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar:/home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.2.Final/netty-3.2.2.Final.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-constants/1.5.5/apacheds-core-constants-1.5.5.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.13.1/aether-util-1.13.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-cursor/0.9.15/shared-cursor-0.9.15.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/1.1-SNAPSHOT/oak-http-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar:/home/tdurieux/.m2/repository/org/99soft/guice/rocoto/6.2/rocoto-6.2.jar:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-tika/0.1/vorbis-java-tika-0.1.jar:/home/tdurieux/.m2/repository/org/aspectj/aspectjrt/1.6.11/aspectjrt-1.6.11.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-misc/4.7.1/lucene-misc-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-queries/4.7.1/lucene-queries-4.7.1.jar:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1.jar:/home/tdurieux/.m2/repository/org/apache/aries/jmx/org.apache.aries.jmx.whiteboard/1.0.0/org.apache.aries.jmx.whiteboard-1.0.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.7.0/pax-swissbox-optional-jcl-1.7.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-interceptor-kerberos/1.5.5/apacheds-interceptor-kerberos-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/pdfbox/fontbox/1.8.4/fontbox-1.8.4.jar:/home/tdurieux/.m2/repository/com/spatial4j/spatial4j/0.3/spatial4j-0.3.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.8.0/jackrabbit-api-2.8.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-unit/1.5.5/apacheds-core-unit-1.5.5.jar:/home/tdurieux/.m2/repository/org/restlet/jee/org.restlet.ext.servlet/2.1.1/org.restlet.ext.servlet-2.1.1.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/noggit/noggit/0.5/noggit-0.5.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/apache/jclouds/api/s3/1.7.0/s3-1.7.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.13.1/aether-connector-wagon-1.13.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-kuromoji/4.7.1/lucene-analyzers-kuromoji-4.7.1.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-blob/1.1-SNAPSHOT/oak-blob-1.1-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.7.3/aws-java-sdk-1.7.3.jar:/home/tdurieux/.m2/repository/org/apache/jclouds/jclouds-core/1.7.0/jclouds-core-1.7.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-registries/1.5.5/apacheds-schema-registries-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-search/1.5.5/apacheds-xdbm-search-1.5.5.jar:/home/tdurieux/.m2/repository/io/netty/netty-codec/4.0.20.Final/netty-codec-4.0.20.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/io/netty/netty-handler/4.0.20.Final/netty-handler-4.0.20.Final.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/com/carrotsearch/randomizedtesting/randomizedtesting-runner/2.0.13/randomizedtesting-runner-2.0.13.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/solr/solr-solrj/4.7.1/solr-solrj-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-server-unit/1.5.5/apacheds-server-unit-1.5.5.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-highlighter/4.7.1/lucene-highlighter-4.7.1.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/1.1-SNAPSHOT/oak-commons-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.7.0/pax-swissbox-core-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/io/netty/netty-common/4.0.20.Final/netty-common-4.0.20.Final.jar:/home/tdurieux/.m2/repository/org/apache/poi/poi/3.10-beta2/poi-3.10-beta2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-tracker/1.7.0/pax-swissbox-tracker-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar:/home/tdurieux/.m2/repository/com/googlecode/concurrentlinkedhashmap/concurrentlinkedhashmap-lru/1.2/concurrentlinkedhashmap-lru-1.2.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.3.2/httpcore-4.3.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-memory/4.7.1/lucene-memory-4.7.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-extras/1.5.5/apacheds-schema-extras-1.5.5.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.13.1/aether-spi-1.13.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.6.0/pax-url-classpath-1.6.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.8.0/jackrabbit-spi-commons-2.8.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/jclouds/jclouds-blobstore/1.7.0/jclouds-blobstore-1.7.0.jar:/home/tdurieux/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-bootstrap-extract/1.5.5/apacheds-bootstrap-extract-1.5.5.jar:/home/tdurieux/.m2/repository/io/netty/netty-transport/4.0.20.Final/netty-transport-4.0.20.Final.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpmime/4.3.3/httpmime-4.3.3.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-tools/1.5.5/apacheds-xdbm-tools-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-auth-external/1.1-SNAPSHOT/oak-auth-external-1.1-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/jclouds/provider/aws-s3/1.7.0/aws-s3-1.7.0.jar:/home/tdurieux/.m2/repository/org/apache/pdfbox/jempbox/1.8.4/jempbox-1.8.4.jar:/home/tdurieux/.m2/repository/io/netty/netty-buffer/4.0.20.Final/netty-buffer-4.0.20.Final.jar:/home/tdurieux/.m2/repository/com/googlecode/mp4parser/isoparser/1.0-RC-1/isoparser-1.0-RC-1.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-deploy/8.1.10.v20130312/jetty-deploy-8.1.10.v20130312.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-jdbm/1.5.5/apacheds-jdbm-1.5.5.jar:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/2.2.3/sisu-inject-plexus-2.2.3.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/jakarta-regexp/jakarta-regexp/1.4/jakarta-regexp-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-phonetic/4.7.1/lucene-analyzers-phonetic-4.7.1.jar:/home/tdurieux/.m2/repository/com/adobe/xmp/xmpcore/5.1.2/xmpcore-5.1.2.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.3.1/org.osgi.compendium-4.3.1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/1.1-SNAPSHOT/oak-mk-remote-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.8.0/jackrabbit-core-2.8.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-aws-ext/2.8.0/jackrabbit-aws-ext-2.8.0.jar:/home/tdurieux/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.4/maven-aether-provider-3.0.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.6/commons-pool-1.6.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.1.0/logback-core-1.1.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.13.1/aether-impl-1.13.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/restlet/jee/org.restlet/2.1.1/org.restlet-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/pdfbox/pdfbox/1.8.4/pdfbox-1.8.4.jar:/home/tdurieux/.m2/repository/com/googlecode/pojosr/de.kalpatec.pojosr.framework.bare/0.2.1/de.kalpatec.pojosr.framework.bare-0.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.10.v20130312/jetty-server-8.1.10.v20130312.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.6.0/pax-url-link-1.6.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-suggest/4.7.1/lucene-suggest-4.7.1.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.7.6/jul-to-slf4j-1.7.6.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/15.0/guava-15.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-protocol-ldap/1.5.5/apacheds-protocol-ldap-1.5.5.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.4.0/ops4j-base-net-1.4.0.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.7/mina-core-2.0.7.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.4.0/ops4j-base-store-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.13.1/aether-api-1.13.1.jar:/home/tdurieux/.m2/repository/org/apache/directmemory/directmemory-cache/0.2/directmemory-cache-0.2.jar:/home/tdurieux/.m2/repository/org/bouncycastle/bcprov-jdk15/1.45/bcprov-jdk15-1.45.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-mvn/3.4.0/pax-exam-link-mvn-3.4.0.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/3.4.0/pax-exam-container-native-3.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-codecs/4.7.1/lucene-codecs-4.7.1.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/poi/poi-ooxml-schemas/3.10-beta2/poi-ooxml-schemas-3.10-beta2.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
10:27:29.539 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [oak-core/src/main/java]
10:27:29.635 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-core/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-core/target/test-classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk-api/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-commons/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-blob/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-mk-remote/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-jcr/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-upgrade/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-http/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-lucene/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-solr-core/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-solr-osgi/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-auth-external/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-auth-ldap/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-run/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-it/mk/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-it/osgi/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-pojosr/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Jackrabbit-Oak_93c1aa40/oak-tarmk-failover/target/classes/, file:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.3/tika-core-1.3.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.4/maven-repository-metadata-3.0.4.jar, file:/home/tdurieux/.m2/repository/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpmime/4.3.1/httpmime-4.3.1.jar, file:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/3.4.0/pax-exam-junit4-3.4.0.jar, file:/home/tdurieux/.m2/repository/rome/rome/0.9/rome-0.9.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.7.1/lucene-core-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-collections/1.3.0/ops4j-base-util-collections-1.3.0.jar, file:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.22/kryo-2.22.jar, file:/home/tdurieux/.m2/repository/org/apache/poi/poi-ooxml/3.10-beta2/poi-ooxml-3.10-beta2.jar, file:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.3.1/org.osgi.core-4.3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-join/4.7.1/lucene-join-4.7.1.jar, file:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, file:/home/tdurieux/.m2/repository/com/googlecode/pojosr/de.kalpatec.pojosr.framework/0.2.1/de.kalpatec.pojosr.framework-0.2.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-maven-commons/1.5.2/pax-url-maven-commons-1.5.2.jar, file:/home/tdurieux/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.6/log4j-over-slf4j-1.7.6.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar, file:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/1.1-SNAPSHOT/oak-mk-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/2.0.0/tinybundles-2.0.0.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.4.0/ops4j-base-spi-1.4.0.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.4/maven-model-3.0.4.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.fileinstall/3.2.8/org.apache.felix.fileinstall-3.2.8.jar, file:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.2.1/org.apache.felix.framework-4.2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-avl/1.5.5/apacheds-core-avl-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.3.3/httpclient-4.3.3.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.8.0/jackrabbit-data-2.8.0-tests.jar, file:/home/tdurieux/.m2/repository/edu/ucar/netcdf/4.2-min/netcdf-4.2-min.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar, file:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.6/jcl-over-slf4j-1.7.6.jar, file:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-bootstrap-partition/1.5.5/apacheds-bootstrap-partition-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.4.0/ops4j-base-monitors-1.4.0.jar, file:/home/tdurieux/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.10.v20130312/jetty-security-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0.1/geronimo-stax-api_1.0_spec-1.0.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-ldap/0.9.15/shared-ldap-0.9.15.jar, file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-test-framework/4.7.1/lucene-test-framework-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.4.0/ops4j-base-io-1.4.0.jar, file:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.4/maven-model-builder-3.0.4.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.8.0/jackrabbit-core-2.8.0-tests.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.8.0/jackrabbit-jcr-server-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.4.0/ops4j-base-util-property-1.4.0.jar, file:/home/tdurieux/.m2/repository/jline/jline/2.11/jline-2.11.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-bootstrap/1.5.5/apacheds-schema-bootstrap-1.5.5.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.10.v20130312/jetty-servlet-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-asn1-codec/0.9.15/shared-asn1-codec-0.9.15.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/8.1.10.v20130312/jetty-webapp-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/solr/solr-core/4.7.1/solr-core-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.10.v20130312/jetty-continuation-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar, file:/home/tdurieux/.m2/repository/de/l3s/boilerpipe/boilerpipe/1.1.0/boilerpipe-1.1.0.jar, file:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jclouds/api/sts/1.7.0/sts-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.5.2/pax-url-aether-1.5.2.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-utils/1.5.5/apacheds-utils-1.5.5.jar, file:/home/tdurieux/.m2/repository/bouncycastle/bcprov-jdk15/140/bcprov-jdk15-140.jar, file:/home/tdurieux/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar, file:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.2.3/sisu-inject-bean-2.2.3.jar, file:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.176/h2-1.3.176.jar, file:/home/tdurieux/.m2/repository/com/spatial4j/spatial4j/0.4.1/spatial4j-0.4.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-xml/1.3.0/ops4j-base-util-xml-1.3.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-ldap-constants/0.9.15/shared-ldap-constants-0.9.15.jar, file:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5/plexus-container-default-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-guice/3.0.3/sisu-guice-3.0.3-no_aop.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/1.1-SNAPSHOT/oak-mk-api-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.8.0/jackrabbit-spi-2.8.0.jar, file:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.8.1/xercesImpl-2.8.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.10.v20130312/jetty-io-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar, file:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.7.0/pax-swissbox-lifecycle-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-blob/1.1-SNAPSHOT/oak-blob-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.12.2/mongo-java-driver-2.12.2.jar, file:/home/tdurieux/.m2/repository/org/apache/ant/ant/1.8.2/ant-1.8.2.jar, file:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1-tests.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/3.4.0/pax-exam-spi-3.4.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-jdbm-store/1.5.5/apacheds-jdbm-store-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-base/1.5.5/apacheds-xdbm-base-1.5.5.jar, file:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-spatial/4.7.1/lucene-spatial-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.8.0/jackrabbit-jcr-tests-2.8.0.jar, file:/home/tdurieux/.m2/repository/com/carrotsearch/randomizedtesting/junit4-ant/2.0.13/junit4-ant-2.0.13.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jmx/8.1.10.v20130312/jetty-jmx-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar, file:/home/tdurieux/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-queryparser/4.7.1/lucene-queryparser-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/easymock/easymock/3.1/easymock-3.1.jar, file:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, file:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/api/api-all/1.0.0-M20/api-all-1.0.0-M20.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-expressions/4.7.1/lucene-expressions-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/james/apache-mime4j-dom/0.7.2/apache-mime4j-dom-0.7.2.jar, file:/home/tdurieux/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar, file:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.03/xml-apis-1.3.03.jar, file:/home/tdurieux/.m2/repository/org/apache/poi/poi-scratchpad/3.10-beta2/poi-scratchpad-3.10-beta2.jar, file:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, file:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, file:/home/tdurieux/.m2/repository/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar, file:/home/tdurieux/.m2/repository/biz/aQute/bnd/bndlib/2.2.0/bndlib-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/codehaus/groovy/groovy-all/2.3.1/groovy-all-2.3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.jaas/0.0.2/org.apache.felix.jaas-0.0.2.jar, file:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar, file:/home/tdurieux/.m2/repository/org/apache/james/apache-mime4j-core/0.7.2/apache-mime4j-core-0.7.2.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-auth-external/1.1-SNAPSHOT/oak-auth-external-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar, file:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar, file:/home/tdurieux/.m2/repository/org/tukaani/xz/1.5/xz-1.5.jar, file:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-jndi/1.5.5/apacheds-core-jndi-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-server-jndi/1.5.5/apacheds-server-jndi-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.logservice/1.0.2/org.apache.sling.commons.logservice-1.0.2.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.5.2/pax-url-commons-1.5.2.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-entry/1.5.5/apacheds-core-entry-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-sandbox/4.7.1/lucene-sandbox-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-debug-all/4.1/asm-debug-all-4.1.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.8/commons-compress-1.8.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr/1.8.2/org.apache.felix.scr-1.8.2.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/1.1-SNAPSHOT/oak-commons-1.1-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar, file:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar, file:/home/tdurieux/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.configadmin/1.8.0/org.apache.felix.configadmin-1.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.7.1/lucene-analyzers-common-4.7.1.jar, file:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-asn1/0.9.15/shared-asn1-0.9.15.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.4.0/ops4j-base-lang-1.4.0.jar, file:/home/tdurieux/.m2/repository/org/antlr/antlr-runtime/3.5/antlr-runtime-3.5.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/3.4.0/pax-exam-3.4.0.jar, file:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.0.1B_spec/1.0.1/geronimo-jta_1.0.1B_spec-1.0.1.jar, file:/home/tdurieux/.m2/repository/com/drewnoakes/metadata-extractor/2.6.2/metadata-extractor-2.6.2.jar, file:/home/tdurieux/.m2/repository/com/gmongo/gmongo/1.1/gmongo-1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/4.1/asm-commons-4.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-kerberos-shared/1.5.5/apacheds-kerberos-shared-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/tika/tika-parsers/1.5/tika-parsers-1.5.jar, file:/home/tdurieux/.m2/repository/com/carrotsearch/hppc/0.5.2/hppc-0.5.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.10.v20130312/jetty-http-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-upgrade/1.1-SNAPSHOT/oak-upgrade-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core/1.5.5/apacheds-core-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/bouncycastle/bcmail-jdk15/1.45/bcmail-jdk15-1.45.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar, file:/home/tdurieux/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.9/animal-sniffer-annotations-1.9.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/8.1.10.v20130312/jetty-xml-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar, file:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.5/tika-core-1.5.jar, file:/home/tdurieux/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-solr-core/1.1-SNAPSHOT/oak-solr-core-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/1.1-SNAPSHOT/oak-lucene-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.8.0/jackrabbit-data-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.10.v20130312/jetty-util-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.9.6/org.apache.felix.scr.annotations-1.9.6.jar, file:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.8.0/jackrabbit-webdav-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-shared/1.5.5/apacheds-core-shared-1.5.5.jar, file:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-assistedinject/3.0/guice-assistedinject-3.0.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-grouping/4.7.1/lucene-grouping-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.8.0/jackrabbit-jcr-commons-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-protocol-shared/1.5.5/apacheds-protocol-shared-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.jar, file:/home/tdurieux/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar, file:/home/tdurieux/.m2/repository/org/jboss/netty/netty/3.2.2.Final/netty-3.2.2.Final.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-constants/1.5.5/apacheds-core-constants-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.13.1/aether-util-1.13.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/shared/shared-cursor/0.9.15/shared-cursor-0.9.15.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/1.1-SNAPSHOT/oak-http-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar, file:/home/tdurieux/.m2/repository/org/99soft/guice/rocoto/6.2/rocoto-6.2.jar, file:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-tika/0.1/vorbis-java-tika-0.1.jar, file:/home/tdurieux/.m2/repository/org/aspectj/aspectjrt/1.6.11/aspectjrt-1.6.11.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-misc/4.7.1/lucene-misc-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-queries/4.7.1/lucene-queries-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1.jar, file:/home/tdurieux/.m2/repository/org/apache/aries/jmx/org.apache.aries.jmx.whiteboard/1.0.0/org.apache.aries.jmx.whiteboard-1.0.0.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.7.0/pax-swissbox-optional-jcl-1.7.0.jar, file:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-interceptor-kerberos/1.5.5/apacheds-interceptor-kerberos-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/pdfbox/fontbox/1.8.4/fontbox-1.8.4.jar, file:/home/tdurieux/.m2/repository/com/spatial4j/spatial4j/0.3/spatial4j-0.3.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.8.0/jackrabbit-api-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-core-unit/1.5.5/apacheds-core-unit-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/restlet/jee/org.restlet.ext.servlet/2.1.1/org.restlet.ext.servlet-2.1.1.jar, file:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar, file:/home/tdurieux/.m2/repository/org/noggit/noggit/0.5/noggit-0.5.jar, file:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jclouds/api/s3/1.7.0/s3-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.13.1/aether-connector-wagon-1.13.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-kuromoji/4.7.1/lucene-analyzers-kuromoji-4.7.1.jar, file:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-blob/1.1-SNAPSHOT/oak-blob-1.1-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.7.3/aws-java-sdk-1.7.3.jar, file:/home/tdurieux/.m2/repository/org/apache/jclouds/jclouds-core/1.7.0/jclouds-core-1.7.0.jar, file:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-registries/1.5.5/apacheds-schema-registries-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-search/1.5.5/apacheds-xdbm-search-1.5.5.jar, file:/home/tdurieux/.m2/repository/io/netty/netty-codec/4.0.20.Final/netty-codec-4.0.20.Final.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/io/netty/netty-handler/4.0.20.Final/netty-handler-4.0.20.Final.jar, file:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar, file:/home/tdurieux/.m2/repository/com/carrotsearch/randomizedtesting/randomizedtesting-runner/2.0.13/randomizedtesting-runner-2.0.13.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar, file:/home/tdurieux/.m2/repository/org/apache/solr/solr-solrj/4.7.1/solr-solrj-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-server-unit/1.5.5/apacheds-server-unit-1.5.5.jar, file:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-highlighter/4.7.1/lucene-highlighter-4.7.1.jar, file:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar, file:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/1.1-SNAPSHOT/oak-commons-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.7.0/pax-swissbox-core-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, file:/home/tdurieux/.m2/repository/io/netty/netty-common/4.0.20.Final/netty-common-4.0.20.Final.jar, file:/home/tdurieux/.m2/repository/org/apache/poi/poi/3.10-beta2/poi-3.10-beta2.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-tracker/1.7.0/pax-swissbox-tracker-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar, file:/home/tdurieux/.m2/repository/com/googlecode/concurrentlinkedhashmap/concurrentlinkedhashmap-lru/1.2/concurrentlinkedhashmap-lru-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.3.2/httpcore-4.3.2.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-memory/4.7.1/lucene-memory-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-schema-extras/1.5.5/apacheds-schema-extras-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.13.1/aether-spi-1.13.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.6.0/pax-url-classpath-1.6.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.8.0/jackrabbit-spi-commons-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, file:/home/tdurieux/.m2/repository/org/apache/jclouds/jclouds-blobstore/1.7.0/jclouds-blobstore-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-bootstrap-extract/1.5.5/apacheds-bootstrap-extract-1.5.5.jar, file:/home/tdurieux/.m2/repository/io/netty/netty-transport/4.0.20.Final/netty-transport-4.0.20.Final.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpmime/4.3.3/httpmime-4.3.3.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-xdbm-tools/1.5.5/apacheds-xdbm-tools-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-auth-external/1.1-SNAPSHOT/oak-auth-external-1.1-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/org/apache/jclouds/provider/aws-s3/1.7.0/aws-s3-1.7.0.jar, file:/home/tdurieux/.m2/repository/org/apache/pdfbox/jempbox/1.8.4/jempbox-1.8.4.jar, file:/home/tdurieux/.m2/repository/io/netty/netty-buffer/4.0.20.Final/netty-buffer-4.0.20.Final.jar, file:/home/tdurieux/.m2/repository/com/googlecode/mp4parser/isoparser/1.0-RC-1/isoparser-1.0-RC-1.jar, file:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-deploy/8.1.10.v20130312/jetty-deploy-8.1.10.v20130312.jar, file:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-jdbm/1.5.5/apacheds-jdbm-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/2.2.3/sisu-inject-plexus-2.2.3.jar, file:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar, file:/home/tdurieux/.m2/repository/jakarta-regexp/jakarta-regexp/1.4/jakarta-regexp-1.4.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar, file:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-phonetic/4.7.1/lucene-analyzers-phonetic-4.7.1.jar, file:/home/tdurieux/.m2/repository/com/adobe/xmp/xmpcore/5.1.2/xmpcore-5.1.2.jar, file:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.3.1/org.osgi.compendium-4.3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/1.1-SNAPSHOT/oak-mk-remote-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.8.0/jackrabbit-core-2.8.0.jar, file:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar, file:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-aws-ext/2.8.0/jackrabbit-aws-ext-2.8.0.jar, file:/home/tdurieux/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.4/maven-aether-provider-3.0.4.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar, file:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.6/commons-pool-1.6.jar, file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.1.0/logback-core-1.1.0.jar, file:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.13.1/aether-impl-1.13.1.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar, file:/home/tdurieux/.m2/repository/org/restlet/jee/org.restlet/2.1.1/org.restlet-2.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/pdfbox/pdfbox/1.8.4/pdfbox-1.8.4.jar, file:/home/tdurieux/.m2/repository/com/googlecode/pojosr/de.kalpatec.pojosr.framework.bare/0.2.1/de.kalpatec.pojosr.framework.bare-0.2.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.10.v20130312/jetty-server-8.1.10.v20130312.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.6.0/pax-url-link-1.6.0.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-suggest/4.7.1/lucene-suggest-4.7.1.jar, file:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.7.6/jul-to-slf4j-1.7.6.jar, file:/home/tdurieux/.m2/repository/com/google/guava/guava/15.0/guava-15.0.jar, file:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, file:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, file:/home/tdurieux/.m2/repository/org/apache/directory/server/apacheds-protocol-ldap/1.5.5/apacheds-protocol-ldap-1.5.5.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.4.0/ops4j-base-net-1.4.0.jar, file:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.7/mina-core-2.0.7.jar, file:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.4.0/ops4j-base-store-1.4.0.jar, file:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.13.1/aether-api-1.13.1.jar, file:/home/tdurieux/.m2/repository/org/apache/directmemory/directmemory-cache/0.2/directmemory-cache-0.2.jar, file:/home/tdurieux/.m2/repository/org/bouncycastle/bcprov-jdk15/1.45/bcprov-jdk15-1.45.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-mvn/3.4.0/pax-exam-link-mvn-3.4.0.jar, file:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, file:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar, file:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar, file:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/3.4.0/pax-exam-container-native-3.4.0.jar, file:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-codecs/4.7.1/lucene-codecs-4.7.1.jar, file:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/poi/poi-ooxml-schemas/3.10-beta2/poi-ooxml-schemas-3.10-beta2.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:27:29.636 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:27:29.636 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.jackrabbit.mk.test.DataStoreIT, org.apache.jackrabbit.mk.test.MicroKernelIT, org.apache.jackrabbit.oak.OakBaseTest, org.apache.jackrabbit.oak.OakTest, org.apache.jackrabbit.oak.api.ContentSessionTest, org.apache.jackrabbit.oak.api.QueryTest, org.apache.jackrabbit.oak.api.RootTest, org.apache.jackrabbit.oak.api.TreeTest, org.apache.jackrabbit.oak.api.UniquePropertyTest, org.apache.jackrabbit.oak.cache.CacheTest, org.apache.jackrabbit.oak.cache.ConcurrentTest, org.apache.jackrabbit.oak.core.DefaultConflictHandlerOursTest, org.apache.jackrabbit.oak.core.DefaultConflictHandlerTheirsTest, org.apache.jackrabbit.oak.core.ImmutableRootTest, org.apache.jackrabbit.oak.core.ImmutableTreeTest, org.apache.jackrabbit.oak.core.MutableTreeTest, org.apache.jackrabbit.oak.core.RootFuzzIT, org.apache.jackrabbit.oak.core.RootTest, org.apache.jackrabbit.oak.kernel.JsopDiffTest, org.apache.jackrabbit.oak.kernel.KernelNodeBuilderTest, org.apache.jackrabbit.oak.kernel.KernelNodeStateTest, org.apache.jackrabbit.oak.kernel.KernelNodeStoreCacheTest, org.apache.jackrabbit.oak.kernel.LargeKernelNodeStateTest, org.apache.jackrabbit.oak.kernel.NodeStoreTest, org.apache.jackrabbit.oak.kernel.TypeCodesTest, org.apache.jackrabbit.oak.management.ManagementOperationTest, org.apache.jackrabbit.oak.namepath.GlobalNameMapperTest, org.apache.jackrabbit.oak.namepath.NamePathMapperImplTest, org.apache.jackrabbit.oak.plugins.backup.FileStoreBackupTest, org.apache.jackrabbit.oak.plugins.blob.FileLineDifferenceIteratorTest, org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStoreTest, org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecordTest, org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStoreTest, org.apache.jackrabbit.oak.plugins.document.AbstractDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.AbstractMultiDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.BackgroundWriteTest, org.apache.jackrabbit.oak.plugins.document.BasicDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.BlobCollectorTest, org.apache.jackrabbit.oak.plugins.document.BlobReferenceIteratorTest, org.apache.jackrabbit.oak.plugins.document.BlobReferenceTest, org.apache.jackrabbit.oak.plugins.document.BlobTest, org.apache.jackrabbit.oak.plugins.document.BlobThroughPutTest, org.apache.jackrabbit.oak.plugins.document.CacheConsistencyTest, org.apache.jackrabbit.oak.plugins.document.CheckpointsTest, org.apache.jackrabbit.oak.plugins.document.ClusterInfoTest, org.apache.jackrabbit.oak.plugins.document.ClusterJoinTest, org.apache.jackrabbit.oak.plugins.document.ClusterTest, org.apache.jackrabbit.oak.plugins.document.ClusterTest2, org.apache.jackrabbit.oak.plugins.document.CommitQueueTest, org.apache.jackrabbit.oak.plugins.document.CommitTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentConflictTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentPropertyUpdateTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentUpdatesTest, org.apache.jackrabbit.oak.plugins.document.ConflictTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKBranchMergeTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKBranchTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitAddTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitCopyTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitMoveTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitRemoveTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKDiffTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKGetHeadRevisionTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKGetNodesTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKNodeExistsTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKRebaseTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKResetTest, org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreIT, org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreTest, org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest, org.apache.jackrabbit.oak.plugins.document.InitializerTest, org.apache.jackrabbit.oak.plugins.document.IsolationTest, org.apache.jackrabbit.oak.plugins.document.LastRevRecoveryAgentTest, org.apache.jackrabbit.oak.plugins.document.LastRevRecoveryTest, org.apache.jackrabbit.oak.plugins.document.LastRevSingleNodeRecoveryTest, org.apache.jackrabbit.oak.plugins.document.ManyChildNodesTest, org.apache.jackrabbit.oak.plugins.document.MeasureMemory, org.apache.jackrabbit.oak.plugins.document.MergeRetryTest, org.apache.jackrabbit.oak.plugins.document.MongoBlobGCTest, org.apache.jackrabbit.oak.plugins.document.MongoDbTest, org.apache.jackrabbit.oak.plugins.document.MongoDiffCacheTest, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreIT, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreLimitsTest, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.MultiDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.NodeDocumentTest, org.apache.jackrabbit.oak.plugins.document.OptimizedChildFetchTest, org.apache.jackrabbit.oak.plugins.document.PathComparatorTest, org.apache.jackrabbit.oak.plugins.document.RandomizedClusterTest, org.apache.jackrabbit.oak.plugins.document.RangeTest, org.apache.jackrabbit.oak.plugins.document.RevisionTest, org.apache.jackrabbit.oak.plugins.document.SimpleTest, org.apache.jackrabbit.oak.plugins.document.ValueMapTest, org.apache.jackrabbit.oak.plugins.document.VersionGarbageCollectorTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKGetLengthGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKReadGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKReadTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKWriteGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.MongoBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.RDBBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudReadTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.MongoCloudBlobGCTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.MongoCloudBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DataStoreUtils, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreReadTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.MongoDataStoreBlobGCTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.MongoDataStoreBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.cache.SerializerTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKConcurrentAddTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetChildCountTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetJournalTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetRevisionHistoryTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKLimitsTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKWaitForCommitTest, org.apache.jackrabbit.oak.plugins.document.impl.command.ConcurrentWriteMultipleMkMongoTest, org.apache.jackrabbit.oak.plugins.document.mongo.CacheInvalidationIT, org.apache.jackrabbit.oak.plugins.document.mongo.ReadPreferenceIT, org.apache.jackrabbit.oak.plugins.document.multitenancy.MultiTenancyTest, org.apache.jackrabbit.oak.plugins.document.util.MergeSortedIteratorsTest, org.apache.jackrabbit.oak.plugins.document.util.UtilsTest, org.apache.jackrabbit.oak.plugins.identifier.IdentifierManagerTest, org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest, org.apache.jackrabbit.oak.plugins.index.IndexUpdateTest, org.apache.jackrabbit.oak.plugins.index.aggregate.SimpleNodeAggregatorTest, org.apache.jackrabbit.oak.plugins.index.diffindex.DiffCollectorTest, org.apache.jackrabbit.oak.plugins.index.nodetype.NodeTypeIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.nodetype.NodeTypeIndexTest, org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest, org.apache.jackrabbit.oak.plugins.index.property.MultipleIndicesTest, org.apache.jackrabbit.oak.plugins.index.property.OrderDirectionEnumTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedIndexCostTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexDescendingQueryTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexEditorTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexTest, org.apache.jackrabbit.oak.plugins.index.property.RelativePathTest, org.apache.jackrabbit.oak.plugins.index.property.ValuePathTupleTest, org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategyTest, org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStorageStrategyTest, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilderTest, org.apache.jackrabbit.oak.plugins.memory.PropertyBuilderTest, org.apache.jackrabbit.oak.plugins.memory.PropertyStatesTest, org.apache.jackrabbit.oak.plugins.name.NameValidatorTest, org.apache.jackrabbit.oak.plugins.name.ReadWriteNamespaceRegistryTest, org.apache.jackrabbit.oak.plugins.nodetype.TypeEditorTest, org.apache.jackrabbit.oak.plugins.observation.CommitRateLimiterTest, org.apache.jackrabbit.oak.plugins.observation.NodeObserverTest, org.apache.jackrabbit.oak.plugins.observation.filter.FilterBuilderTest, org.apache.jackrabbit.oak.plugins.observation.filter.GlobbingPathFilterTest, org.apache.jackrabbit.oak.plugins.observation.filter.NodeTypePredicateTest, org.apache.jackrabbit.oak.plugins.observation.filter.PropertyPredicateTest, org.apache.jackrabbit.oak.plugins.observation.filter.SelectorTest, org.apache.jackrabbit.oak.plugins.observation.filter.UuidPredicateTest, org.apache.jackrabbit.oak.plugins.segment.CheckpointTest, org.apache.jackrabbit.oak.plugins.segment.CompactionMapTest, org.apache.jackrabbit.oak.plugins.segment.CompactorTest, org.apache.jackrabbit.oak.plugins.segment.CompareAgainstBaseStateTest, org.apache.jackrabbit.oak.plugins.segment.ExternalBlobTest, org.apache.jackrabbit.oak.plugins.segment.MapRecordTest, org.apache.jackrabbit.oak.plugins.segment.MergeTest, org.apache.jackrabbit.oak.plugins.segment.RecordTest, org.apache.jackrabbit.oak.plugins.segment.SegmentDataStoreBlobGCTest, org.apache.jackrabbit.oak.plugins.segment.SegmentIdFactoryTest, org.apache.jackrabbit.oak.plugins.segment.SegmentSizeTest, org.apache.jackrabbit.oak.plugins.segment.file.FileStoreTest, org.apache.jackrabbit.oak.plugins.segment.file.TarFileTest, org.apache.jackrabbit.oak.plugins.tree.TreeLocationTest, org.apache.jackrabbit.oak.query.FilterTest, org.apache.jackrabbit.oak.query.IteratorsTest, org.apache.jackrabbit.oak.query.SQL2ParserTest, org.apache.jackrabbit.oak.query.ast.FullTextTest, org.apache.jackrabbit.oak.query.ast.LikePatternTest, org.apache.jackrabbit.oak.query.index.AdvancedIndexTest, org.apache.jackrabbit.oak.query.index.FilterTest, org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest, org.apache.jackrabbit.oak.query.index.TraversingIndexTest, org.apache.jackrabbit.oak.security.authentication.GuestDefaultLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.Jackrabbit2ConfigurationTest, org.apache.jackrabbit.oak.security.authentication.TokenDefaultLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.token.CompositeTokenConfigurationTest, org.apache.jackrabbit.oak.security.authentication.token.TokenAuthenticationTest, org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImplTest, org.apache.jackrabbit.oak.security.authentication.token.TokenInfoTest, org.apache.jackrabbit.oak.security.authentication.token.TokenLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImplTest, org.apache.jackrabbit.oak.security.authentication.user.LoginModuleImplTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.ACLTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.AccessControlManagerImplTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.AccessControlValidatorTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.ReadPolicyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.ChildOrderPropertyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.HiddenPropertyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.HiddenTreeTest, org.apache.jackrabbit.oak.security.authorization.evaluation.JcrUUIDTest, org.apache.jackrabbit.oak.security.authorization.evaluation.Jr2CompatibilityTest, org.apache.jackrabbit.oak.security.authorization.evaluation.MultipleSessionsACLStabilityTest, org.apache.jackrabbit.oak.security.authorization.evaluation.RootTest, org.apache.jackrabbit.oak.security.authorization.evaluation.ShadowInvisibleContentTest, org.apache.jackrabbit.oak.security.authorization.evaluation.TreeTest, org.apache.jackrabbit.oak.security.authorization.evaluation.VersionStorageTest, org.apache.jackrabbit.oak.security.authorization.permission.AllPermissionsTest, org.apache.jackrabbit.oak.security.authorization.permission.ClusterPermissionsTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionHookTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionProviderImplTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionStoreTest, org.apache.jackrabbit.oak.security.authorization.permission.TreePermissionImplTest, org.apache.jackrabbit.oak.security.authorization.restriction.GlobPatternTest, org.apache.jackrabbit.oak.security.authorization.restriction.RestrictionProviderImplTest, org.apache.jackrabbit.oak.security.principal.PrincipalProviderImplTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeDefinitionReaderTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeDefinitionWriterTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeValidatorTest, org.apache.jackrabbit.oak.security.user.AuthorizableImplTest, org.apache.jackrabbit.oak.security.user.EveryoneGroupTest, org.apache.jackrabbit.oak.security.user.MembershipProviderTest, org.apache.jackrabbit.oak.security.user.PasswordExpiryAndForceInitialChangeTest, org.apache.jackrabbit.oak.security.user.PasswordExpiryTest, org.apache.jackrabbit.oak.security.user.PasswordForceInitialPasswordChangeTest, org.apache.jackrabbit.oak.security.user.UserAuthenticationFactoryImplTest, org.apache.jackrabbit.oak.security.user.UserAuthenticationTest, org.apache.jackrabbit.oak.security.user.UserConfigurationImplTest, org.apache.jackrabbit.oak.security.user.UserInitializerTest, org.apache.jackrabbit.oak.security.user.UserManagerImplTest, org.apache.jackrabbit.oak.security.user.UserProviderTest, org.apache.jackrabbit.oak.security.user.UserValidatorTest, org.apache.jackrabbit.oak.security.user.autosave.AutoSaveEnabledManagerTest, org.apache.jackrabbit.oak.security.user.autosave.PasswordExpiryTest, org.apache.jackrabbit.oak.security.user.query.UserQueryManagerTest, org.apache.jackrabbit.oak.spi.commit.BackgroundObserverTest, org.apache.jackrabbit.oak.spi.commit.MoveTrackerTest, org.apache.jackrabbit.oak.spi.commit.SubtreeValidatorTest, org.apache.jackrabbit.oak.spi.query.CursorsTest, org.apache.jackrabbit.oak.spi.security.ConfigurationParametersTest, org.apache.jackrabbit.oak.spi.security.authentication.AbstractLoginModuleTest, org.apache.jackrabbit.oak.spi.security.authentication.GuestLoginModuleTest, org.apache.jackrabbit.oak.spi.security.authentication.PreAuthTest, org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.ACETest, org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.ImmutableACLTest, org.apache.jackrabbit.oak.spi.security.authorization.permission.PermissionsTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.AbstractRestrictionProviderTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.CompositeRestrictionProviderTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionDefinitionImplTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionImplTest, org.apache.jackrabbit.oak.spi.security.principal.EveryonePrincipalTest, org.apache.jackrabbit.oak.spi.security.principal.PrincipalImplTest, org.apache.jackrabbit.oak.spi.security.privilege.PrivilegeBitsProviderTest, org.apache.jackrabbit.oak.spi.security.privilege.PrivilegeBitsTest, org.apache.jackrabbit.oak.spi.security.user.action.AccessControlActionTest, org.apache.jackrabbit.oak.spi.security.user.action.PasswordChangeActionTest, org.apache.jackrabbit.oak.spi.security.user.action.PasswordValidationActionTest, org.apache.jackrabbit.oak.spi.security.user.util.PasswordUtilTest, org.apache.jackrabbit.oak.spi.state.AbstractRebaseDiffTest, org.apache.jackrabbit.oak.spi.state.MoveDetectorTest, org.apache.jackrabbit.oak.stats.ClockTest]
10:27:29.638 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[oak-core/src/main/java], projectClasspath='[Ljava.net.URL;@45c8e616', projectTests=[org.apache.jackrabbit.mk.test.DataStoreIT, org.apache.jackrabbit.mk.test.MicroKernelIT, org.apache.jackrabbit.oak.OakBaseTest, org.apache.jackrabbit.oak.OakTest, org.apache.jackrabbit.oak.api.ContentSessionTest, org.apache.jackrabbit.oak.api.QueryTest, org.apache.jackrabbit.oak.api.RootTest, org.apache.jackrabbit.oak.api.TreeTest, org.apache.jackrabbit.oak.api.UniquePropertyTest, org.apache.jackrabbit.oak.cache.CacheTest, org.apache.jackrabbit.oak.cache.ConcurrentTest, org.apache.jackrabbit.oak.core.DefaultConflictHandlerOursTest, org.apache.jackrabbit.oak.core.DefaultConflictHandlerTheirsTest, org.apache.jackrabbit.oak.core.ImmutableRootTest, org.apache.jackrabbit.oak.core.ImmutableTreeTest, org.apache.jackrabbit.oak.core.MutableTreeTest, org.apache.jackrabbit.oak.core.RootFuzzIT, org.apache.jackrabbit.oak.core.RootTest, org.apache.jackrabbit.oak.kernel.JsopDiffTest, org.apache.jackrabbit.oak.kernel.KernelNodeBuilderTest, org.apache.jackrabbit.oak.kernel.KernelNodeStateTest, org.apache.jackrabbit.oak.kernel.KernelNodeStoreCacheTest, org.apache.jackrabbit.oak.kernel.LargeKernelNodeStateTest, org.apache.jackrabbit.oak.kernel.NodeStoreTest, org.apache.jackrabbit.oak.kernel.TypeCodesTest, org.apache.jackrabbit.oak.management.ManagementOperationTest, org.apache.jackrabbit.oak.namepath.GlobalNameMapperTest, org.apache.jackrabbit.oak.namepath.NamePathMapperImplTest, org.apache.jackrabbit.oak.plugins.backup.FileStoreBackupTest, org.apache.jackrabbit.oak.plugins.blob.FileLineDifferenceIteratorTest, org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreBlobStoreTest, org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecordTest, org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStoreTest, org.apache.jackrabbit.oak.plugins.document.AbstractDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.AbstractMultiDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.BackgroundWriteTest, org.apache.jackrabbit.oak.plugins.document.BasicDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.BlobCollectorTest, org.apache.jackrabbit.oak.plugins.document.BlobReferenceIteratorTest, org.apache.jackrabbit.oak.plugins.document.BlobReferenceTest, org.apache.jackrabbit.oak.plugins.document.BlobTest, org.apache.jackrabbit.oak.plugins.document.BlobThroughPutTest, org.apache.jackrabbit.oak.plugins.document.CacheConsistencyTest, org.apache.jackrabbit.oak.plugins.document.CheckpointsTest, org.apache.jackrabbit.oak.plugins.document.ClusterInfoTest, org.apache.jackrabbit.oak.plugins.document.ClusterJoinTest, org.apache.jackrabbit.oak.plugins.document.ClusterTest, org.apache.jackrabbit.oak.plugins.document.ClusterTest2, org.apache.jackrabbit.oak.plugins.document.CommitQueueTest, org.apache.jackrabbit.oak.plugins.document.CommitTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentConflictTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentPropertyUpdateTest, org.apache.jackrabbit.oak.plugins.document.ConcurrentUpdatesTest, org.apache.jackrabbit.oak.plugins.document.ConflictTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKBranchMergeTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKBranchTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitAddTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitCopyTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitMoveTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKCommitRemoveTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKDiffTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKGetHeadRevisionTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKGetNodesTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKNodeExistsTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKRebaseTest, org.apache.jackrabbit.oak.plugins.document.DocumentMKResetTest, org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreIT, org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreTest, org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest, org.apache.jackrabbit.oak.plugins.document.InitializerTest, org.apache.jackrabbit.oak.plugins.document.IsolationTest, org.apache.jackrabbit.oak.plugins.document.LastRevRecoveryAgentTest, org.apache.jackrabbit.oak.plugins.document.LastRevRecoveryTest, org.apache.jackrabbit.oak.plugins.document.LastRevSingleNodeRecoveryTest, org.apache.jackrabbit.oak.plugins.document.ManyChildNodesTest, org.apache.jackrabbit.oak.plugins.document.MeasureMemory, org.apache.jackrabbit.oak.plugins.document.MergeRetryTest, org.apache.jackrabbit.oak.plugins.document.MongoBlobGCTest, org.apache.jackrabbit.oak.plugins.document.MongoDbTest, org.apache.jackrabbit.oak.plugins.document.MongoDiffCacheTest, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreIT, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreLimitsTest, org.apache.jackrabbit.oak.plugins.document.MongoDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.MultiDocumentStoreTest, org.apache.jackrabbit.oak.plugins.document.NodeDocumentTest, org.apache.jackrabbit.oak.plugins.document.OptimizedChildFetchTest, org.apache.jackrabbit.oak.plugins.document.PathComparatorTest, org.apache.jackrabbit.oak.plugins.document.RandomizedClusterTest, org.apache.jackrabbit.oak.plugins.document.RangeTest, org.apache.jackrabbit.oak.plugins.document.RevisionTest, org.apache.jackrabbit.oak.plugins.document.SimpleTest, org.apache.jackrabbit.oak.plugins.document.ValueMapTest, org.apache.jackrabbit.oak.plugins.document.VersionGarbageCollectorTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKGetLengthGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKReadGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKReadTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKWriteGridFSTest, org.apache.jackrabbit.oak.plugins.document.blob.DocumentMKWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.MongoBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.RDBBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudReadTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.DocumentMKCloudWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.MongoCloudBlobGCTest, org.apache.jackrabbit.oak.plugins.document.blob.cloud.MongoCloudBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DataStoreUtils, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreGetLengthTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreReadTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.DocumentMKDataStoreWriteTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.MongoDataStoreBlobGCTest, org.apache.jackrabbit.oak.plugins.document.blob.ds.MongoDataStoreBlobStoreTest, org.apache.jackrabbit.oak.plugins.document.cache.SerializerTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKConcurrentAddTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetChildCountTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetJournalTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKGetRevisionHistoryTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKLimitsTest, org.apache.jackrabbit.oak.plugins.document.impl.DocumentMKWaitForCommitTest, org.apache.jackrabbit.oak.plugins.document.impl.command.ConcurrentWriteMultipleMkMongoTest, org.apache.jackrabbit.oak.plugins.document.mongo.CacheInvalidationIT, org.apache.jackrabbit.oak.plugins.document.mongo.ReadPreferenceIT, org.apache.jackrabbit.oak.plugins.document.multitenancy.MultiTenancyTest, org.apache.jackrabbit.oak.plugins.document.util.MergeSortedIteratorsTest, org.apache.jackrabbit.oak.plugins.document.util.UtilsTest, org.apache.jackrabbit.oak.plugins.identifier.IdentifierManagerTest, org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest, org.apache.jackrabbit.oak.plugins.index.IndexUpdateTest, org.apache.jackrabbit.oak.plugins.index.aggregate.SimpleNodeAggregatorTest, org.apache.jackrabbit.oak.plugins.index.diffindex.DiffCollectorTest, org.apache.jackrabbit.oak.plugins.index.nodetype.NodeTypeIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.nodetype.NodeTypeIndexTest, org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest, org.apache.jackrabbit.oak.plugins.index.property.MultipleIndicesTest, org.apache.jackrabbit.oak.plugins.index.property.OrderDirectionEnumTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedIndexCostTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexDescendingQueryTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexEditorTest, org.apache.jackrabbit.oak.plugins.index.property.OrderedPropertyIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest, org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexTest, org.apache.jackrabbit.oak.plugins.index.property.RelativePathTest, org.apache.jackrabbit.oak.plugins.index.property.ValuePathTupleTest, org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategyTest, org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStorageStrategyTest, org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilderTest, org.apache.jackrabbit.oak.plugins.memory.PropertyBuilderTest, org.apache.jackrabbit.oak.plugins.memory.PropertyStatesTest, org.apache.jackrabbit.oak.plugins.name.NameValidatorTest, org.apache.jackrabbit.oak.plugins.name.ReadWriteNamespaceRegistryTest, org.apache.jackrabbit.oak.plugins.nodetype.TypeEditorTest, org.apache.jackrabbit.oak.plugins.observation.CommitRateLimiterTest, org.apache.jackrabbit.oak.plugins.observation.NodeObserverTest, org.apache.jackrabbit.oak.plugins.observation.filter.FilterBuilderTest, org.apache.jackrabbit.oak.plugins.observation.filter.GlobbingPathFilterTest, org.apache.jackrabbit.oak.plugins.observation.filter.NodeTypePredicateTest, org.apache.jackrabbit.oak.plugins.observation.filter.PropertyPredicateTest, org.apache.jackrabbit.oak.plugins.observation.filter.SelectorTest, org.apache.jackrabbit.oak.plugins.observation.filter.UuidPredicateTest, org.apache.jackrabbit.oak.plugins.segment.CheckpointTest, org.apache.jackrabbit.oak.plugins.segment.CompactionMapTest, org.apache.jackrabbit.oak.plugins.segment.CompactorTest, org.apache.jackrabbit.oak.plugins.segment.CompareAgainstBaseStateTest, org.apache.jackrabbit.oak.plugins.segment.ExternalBlobTest, org.apache.jackrabbit.oak.plugins.segment.MapRecordTest, org.apache.jackrabbit.oak.plugins.segment.MergeTest, org.apache.jackrabbit.oak.plugins.segment.RecordTest, org.apache.jackrabbit.oak.plugins.segment.SegmentDataStoreBlobGCTest, org.apache.jackrabbit.oak.plugins.segment.SegmentIdFactoryTest, org.apache.jackrabbit.oak.plugins.segment.SegmentSizeTest, org.apache.jackrabbit.oak.plugins.segment.file.FileStoreTest, org.apache.jackrabbit.oak.plugins.segment.file.TarFileTest, org.apache.jackrabbit.oak.plugins.tree.TreeLocationTest, org.apache.jackrabbit.oak.query.FilterTest, org.apache.jackrabbit.oak.query.IteratorsTest, org.apache.jackrabbit.oak.query.SQL2ParserTest, org.apache.jackrabbit.oak.query.ast.FullTextTest, org.apache.jackrabbit.oak.query.ast.LikePatternTest, org.apache.jackrabbit.oak.query.index.AdvancedIndexTest, org.apache.jackrabbit.oak.query.index.FilterTest, org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest, org.apache.jackrabbit.oak.query.index.TraversingIndexTest, org.apache.jackrabbit.oak.security.authentication.GuestDefaultLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.Jackrabbit2ConfigurationTest, org.apache.jackrabbit.oak.security.authentication.TokenDefaultLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.token.CompositeTokenConfigurationTest, org.apache.jackrabbit.oak.security.authentication.token.TokenAuthenticationTest, org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImplTest, org.apache.jackrabbit.oak.security.authentication.token.TokenInfoTest, org.apache.jackrabbit.oak.security.authentication.token.TokenLoginModuleTest, org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImplTest, org.apache.jackrabbit.oak.security.authentication.user.LoginModuleImplTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.ACLTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.AccessControlManagerImplTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.AccessControlValidatorTest, org.apache.jackrabbit.oak.security.authorization.accesscontrol.ReadPolicyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.ChildOrderPropertyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.HiddenPropertyTest, org.apache.jackrabbit.oak.security.authorization.evaluation.HiddenTreeTest, org.apache.jackrabbit.oak.security.authorization.evaluation.JcrUUIDTest, org.apache.jackrabbit.oak.security.authorization.evaluation.Jr2CompatibilityTest, org.apache.jackrabbit.oak.security.authorization.evaluation.MultipleSessionsACLStabilityTest, org.apache.jackrabbit.oak.security.authorization.evaluation.RootTest, org.apache.jackrabbit.oak.security.authorization.evaluation.ShadowInvisibleContentTest, org.apache.jackrabbit.oak.security.authorization.evaluation.TreeTest, org.apache.jackrabbit.oak.security.authorization.evaluation.VersionStorageTest, org.apache.jackrabbit.oak.security.authorization.permission.AllPermissionsTest, org.apache.jackrabbit.oak.security.authorization.permission.ClusterPermissionsTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionHookTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionProviderImplTest, org.apache.jackrabbit.oak.security.authorization.permission.PermissionStoreTest, org.apache.jackrabbit.oak.security.authorization.permission.TreePermissionImplTest, org.apache.jackrabbit.oak.security.authorization.restriction.GlobPatternTest, org.apache.jackrabbit.oak.security.authorization.restriction.RestrictionProviderImplTest, org.apache.jackrabbit.oak.security.principal.PrincipalProviderImplTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeDefinitionReaderTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeDefinitionWriterTest, org.apache.jackrabbit.oak.security.privilege.PrivilegeValidatorTest, org.apache.jackrabbit.oak.security.user.AuthorizableImplTest, org.apache.jackrabbit.oak.security.user.EveryoneGroupTest, org.apache.jackrabbit.oak.security.user.MembershipProviderTest, org.apache.jackrabbit.oak.security.user.PasswordExpiryAndForceInitialChangeTest, org.apache.jackrabbit.oak.security.user.PasswordExpiryTest, org.apache.jackrabbit.oak.security.user.PasswordForceInitialPasswordChangeTest, org.apache.jackrabbit.oak.security.user.UserAuthenticationFactoryImplTest, org.apache.jackrabbit.oak.security.user.UserAuthenticationTest, org.apache.jackrabbit.oak.security.user.UserConfigurationImplTest, org.apache.jackrabbit.oak.security.user.UserInitializerTest, org.apache.jackrabbit.oak.security.user.UserManagerImplTest, org.apache.jackrabbit.oak.security.user.UserProviderTest, org.apache.jackrabbit.oak.security.user.UserValidatorTest, org.apache.jackrabbit.oak.security.user.autosave.AutoSaveEnabledManagerTest, org.apache.jackrabbit.oak.security.user.autosave.PasswordExpiryTest, org.apache.jackrabbit.oak.security.user.query.UserQueryManagerTest, org.apache.jackrabbit.oak.spi.commit.BackgroundObserverTest, org.apache.jackrabbit.oak.spi.commit.MoveTrackerTest, org.apache.jackrabbit.oak.spi.commit.SubtreeValidatorTest, org.apache.jackrabbit.oak.spi.query.CursorsTest, org.apache.jackrabbit.oak.spi.security.ConfigurationParametersTest, org.apache.jackrabbit.oak.spi.security.authentication.AbstractLoginModuleTest, org.apache.jackrabbit.oak.spi.security.authentication.GuestLoginModuleTest, org.apache.jackrabbit.oak.spi.security.authentication.PreAuthTest, org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.ACETest, org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.ImmutableACLTest, org.apache.jackrabbit.oak.spi.security.authorization.permission.PermissionsTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.AbstractRestrictionProviderTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.CompositeRestrictionProviderTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionDefinitionImplTest, org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionImplTest, org.apache.jackrabbit.oak.spi.security.principal.EveryonePrincipalTest, org.apache.jackrabbit.oak.spi.security.principal.PrincipalImplTest, org.apache.jackrabbit.oak.spi.security.privilege.PrivilegeBitsProviderTest, org.apache.jackrabbit.oak.spi.security.privilege.PrivilegeBitsTest, org.apache.jackrabbit.oak.spi.security.user.action.AccessControlActionTest, org.apache.jackrabbit.oak.spi.security.user.action.PasswordChangeActionTest, org.apache.jackrabbit.oak.spi.security.user.action.PasswordValidationActionTest, org.apache.jackrabbit.oak.spi.security.user.util.PasswordUtilTest, org.apache.jackrabbit.oak.spi.state.AbstractRebaseDiffTest, org.apache.jackrabbit.oak.spi.state.MoveDetectorTest, org.apache.jackrabbit.oak.stats.ClockTest], complianceLevel=7, outputFolder=., json=true}
10:27:29.639 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:27:29.645 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 802 MB
10:27:29.645 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:27:29.645 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 981 MB
10:27:29.645 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:27:29.646 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:27:29.647 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:32:41.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:32:41.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:297 which is executed by 2 tests
82059410
10:32:42.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:32:42.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:294 which is executed by 2 tests
82059410
10:32:43.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
10:32:43.624 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (365 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)

10:32:45.084 [pool-3-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:171: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:45.096 [pool-3-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("name",name);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
        }
        if (runtimeAngelicValue) if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:45.097 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:45.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
10:32:45.461 [pool-6-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (339 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)

10:32:46.154 [pool-5-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:171: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:46.162 [pool-5-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = (name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(1).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("name",name);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(1).collectionEnds();
        }
        if (runtimeAngelicValue) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:46.162 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:46.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:32:46.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:293 which is executed by 2 tests
82059410
10:32:46.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:32:46.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:247 which is executed by 2 tests
82059410
10:32:47.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
10:32:47.447 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (322 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)

10:32:48.109 [pool-7-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:194: error: cannot find symbol
                return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                              ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:48.117 [pool-7-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(2).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("depth",depth);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("name",name);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("hash",hash);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectionEnds();
            }
            if (runtimeAngelicValue)
                return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;

        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:48.117 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:48.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:32:48.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:246 which is executed by 2 tests
82059410
10:32:48.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:32:48.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:245 which is executed by 2 tests
82059410
10:32:48.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:32:48.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:244 which is executed by 2 tests
82059410
10:32:49.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:32:49.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:243 which is executed by 2 tests
82059410
10:32:49.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:32:49.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:242 which is executed by 2 tests
82059410
10:32:50.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:32:50.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:239 which is executed by 2 tests
82059410
10:32:50.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
10:32:50.779 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (320 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)

10:32:51.388 [pool-9-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:191: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:51.395 [pool-9-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(3).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(3).collectionEnds();
                }
                if (runtimeAngelicValue)
                    digest = java.security.MessageDigest.getInstance("SHA-256");

            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:51.395 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:51.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:66 which is executed by 2 tests
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:66
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:60 which is executed by 2 tests
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:60
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:59 which is executed by 2 tests
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:59
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:58 which is executed by 2 tests
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:58
10:32:51.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:57 which is executed by 2 tests
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:57
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:55 which is executed by 2 tests
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.mk.test.AbstractMicroKernelIT:55
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:32:51.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:142 which is executed by 2 tests
82059410
10:32:54.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.MeasureMemory.<clinit>(MeasureMemory.java:40)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
10:32:54.750 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (308 ms)
<> Total tests run: 16
<> Ignored tests: 0
<> Failed tests: 16
~ basicObject(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.MeasureMemory.<clinit>(MeasureMemory.java:40)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
~ nodeWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildManyChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ node(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObjectWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildWithoutChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChild(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ overhead(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObject(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildManyChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ node(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObjectWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildWithoutChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChild(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ overhead(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)

10:32:55.326 [pool-11-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:192: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:55.332 [pool-11-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(4).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("size",size);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("map",map);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectionEnds();
            }
            if (runtimeAngelicValue)
                size += (map.size()) * 136;

        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:55.333 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:55.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:32:55.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:141 which is executed by 2 tests
82059410
10:32:55.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.MeasureMemory.<clinit>(MeasureMemory.java:40)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
10:32:56.003 [pool-14-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (308 ms)
<> Total tests run: 16
<> Ignored tests: 0
<> Failed tests: 16
~ basicObject(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.MeasureMemory.<clinit>(MeasureMemory.java:40)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
~ nodeWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildManyChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ node(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObjectWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildWithoutChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChild(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ overhead(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObject(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildManyChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ node(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ basicObjectWithoutProperties(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChildWithoutChildren(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ nodeChild(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
~ overhead(org.apache.jackrabbit.oak.plugins.document.MeasureMemory)
[Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory]
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.plugins.document.MeasureMemory    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)

10:32:56.605 [pool-13-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:192: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:32:56.612 [pool-13-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(5).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("size",size);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectInput("map",map);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(5).collectionEnds();
            }
            if (runtimeAngelicValue)
                size += 176;

            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:32:56.612 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:32:56.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:32:56.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:56 which is executed by 40 tests
-1844007872
10:32:56.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:32:56.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:241 which is executed by 1 tests
-1844007872
10:32:57.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:57.726 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (435 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:58.896 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (381 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:58.900 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:32:58.901 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:32:58.901 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:32:58.901 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:241.
10:32:58.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:32:58.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:202 which is executed by 1 tests
-1844007872
10:32:59.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:59.672 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:00.331 [pool-19-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AsyncIndexUpdate.java:167: error: variable before might not have been initialized
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
                        ^
10:33:00.397 [pool-19-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class AsyncIndexUpdate implements java.lang.Runnable {
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.class);

    static final java.lang.String ASYNC = ":async";

    private static final long DEFAULT_LIFETIME = java.util.concurrent.TimeUnit.DAYS.toMillis(1000);

    private static final org.apache.jackrabbit.oak.api.CommitFailedException CONCURRENT_UPDATE = new org.apache.jackrabbit.oak.api.CommitFailedException("Async", 1, "Concurrent update detected");

    private static final int ASYNC_TIMEOUT = 15;

    private final java.lang.String name;

    private final org.apache.jackrabbit.oak.spi.state.NodeStore store;

    private final org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider;

    private final long lifetime = org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME;

    private boolean failing = false;

    private final org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats indexStats = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats();

    private final boolean switchOnSync;

    private final java.util.Set<java.lang.String> reindexedDefinitions = new java.util.HashSet<java.lang.String>();

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider, boolean switchOnSync) {
        this.name = com.google.common.base.Preconditions.checkNotNull(name);
        this.store = com.google.common.base.Preconditions.checkNotNull(store);
        this.provider = com.google.common.base.Preconditions.checkNotNull(provider);
        this.switchOnSync = switchOnSync;
    }

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider) {
        this(name, store, provider, false);
    }

    private class AsyncUpdateCallback implements org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback {
        private final java.lang.String checkpoint;

        private long lease;

        private long updates = 0;

        public AsyncUpdateCallback(java.lang.String checkpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
            long now = java.lang.System.currentTimeMillis();
            this.checkpoint = checkpoint;
            this.lease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
            java.lang.String leaseName = (name) + "-lease";
            org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
            long beforeLease = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getLong(leaseName);
            if (beforeLease > now) {
                throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
            }
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = root.builder();
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(leaseName, lease);
            mergeWithConcurrencyCheck(builder, checkpoint, beforeLease);
        }

        boolean isDirty() {
            return (updates) > 0;
        }

        void close() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.spi.state.NodeBuilder async = builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
            async.removeProperty(((name) + "-lease"));
            mergeWithConcurrencyCheck(builder, async.getString(name), lease);
        }

        @java.lang.Override
        public void indexUpdate() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            (updates)++;
            if (((updates) % 100) == 0) {
                long now = java.lang.System.currentTimeMillis();
                if ((now + (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT)) > (lease)) {
                    long newLease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
                    org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
                    builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(((name) + "-lease"), newLease);
                    mergeWithConcurrencyCheck(builder, checkpoint, lease);
                    lease = newLease;
                }
            }
        }
    }

    @java.lang.Override
    public synchronized void run() {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Running background index task {}", name);
        org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
        org.apache.jackrabbit.oak.spi.state.NodeState async = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
        if ((async.getLong(((name) + "-lease"))) > (java.lang.System.currentTimeMillis())) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("Another copy of the {} index update is already running;" + " skipping this update"), name);
            return;
        }
        org.apache.jackrabbit.oak.spi.state.NodeState before;
        java.lang.String beforeCheckpoint = async.getString(name);
        if (beforeCheckpoint != null) {
            org.apache.jackrabbit.oak.spi.state.NodeState state = store.retrieve(beforeCheckpoint);
            if (state == null) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Failed to retrieve previously indexed checkpoint {};" + " re-running the initial {} index update"), beforeCheckpoint, name);
                beforeCheckpoint = null;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(7).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("beforeCheckpoint",beforeCheckpoint);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("async",async);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("root",root);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("state",state);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT);} catch (Exception ex1) {ex1.printStackTrace();};
                    if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats!=null) {
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart());} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus());} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone());} catch (Exception ex1) {ex1.printStackTrace();};
                    }
                    fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(7).collectionEnds();
                }
                if (runtimeAngelicValue)
                    before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;

            }else
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(state, root)) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes since last checkpoint;" + " skipping the {} index update"), name);
                    return;
                }else {
                    before = state;
                }

        }else {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Initial {} index update", name);
            before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
        }
        java.lang.String afterCheckpoint = store.checkpoint(lifetime);
        org.apache.jackrabbit.oak.spi.state.NodeState after = store.retrieve(afterCheckpoint);
        if (after == null) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Unable to retrieve newly created checkpoint {}," + " skipping the {} index update"), afterCheckpoint, name);
            return;
        }
        java.lang.String checkpointToRelease = afterCheckpoint;
        try {
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
            if (failing) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Index update {} no longer fails", name);
                failing = false;
            }
            checkpointToRelease = beforeCheckpoint;
        } catch (org.apache.jackrabbit.oak.api.CommitFailedException e) {
            if (e == (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE)) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Concurrent update detected in the {} index update", name);
            }else
                if (failing) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("The {} index update is still failing", name, e);
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn("The {} index update failed", name, e);
                    failing = true;
                }

        } finally {
            if (checkpointToRelease != null) {
                store.release(checkpointToRelease);
            }
        }
    }

    private void updateIndex(org.apache.jackrabbit.oak.spi.state.NodeState before, java.lang.String beforeCheckpoint, org.apache.jackrabbit.oak.spi.state.NodeState after, java.lang.String afterCheckpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.preAsyncRunStatsStats(indexStats);
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback callback = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback(beforeCheckpoint);
        try {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.plugins.index.IndexUpdate indexUpdate = new org.apache.jackrabbit.oak.plugins.index.IndexUpdate(provider, name, after, builder, callback);
            org.apache.jackrabbit.oak.api.CommitFailedException exception = org.apache.jackrabbit.oak.spi.commit.EditorDiff.process(indexUpdate, before, after);
            if (exception != null) {
                throw exception;
            }
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(name, afterCheckpoint);
            if ((callback.isDirty()) || (before == (org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE))) {
                if (switchOnSync) {
                    reindexedDefinitions.addAll(indexUpdate.getReindexedDefinitions());
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
                }
            }else
                if (switchOnSync) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes detected after diff; will try to" + " switch to synchronous updates on {}"), reindexedDefinitions);
                    for (java.lang.String path : reindexedDefinitions) {
                        org.apache.jackrabbit.oak.spi.state.NodeBuilder c = builder;
                        for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) {
                            c = c.getChildNode(p);
                        }
                        if ((c.exists()) && (!(c.getBoolean(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_PROPERTY_NAME)))) {
                            c.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ASYNC_PROPERTY_NAME);
                        }
                    }
                    reindexedDefinitions.clear();
                }

            mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);
        } finally {
            callback.close();
        }
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
    }

    private void mergeWithConcurrencyCheck(org.apache.jackrabbit.oak.spi.state.NodeBuilder builder, final java.lang.String checkpoint, final long lease) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.spi.commit.CommitHook concurrentUpdateCheck = new org.apache.jackrabbit.oak.spi.commit.CommitHook() {
            @java.lang.Override
            @javax.annotation.Nonnull
            public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {
                org.apache.jackrabbit.oak.spi.state.NodeState async = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
                if ((com.google.common.base.Objects.equal(checkpoint, async.getString(name))) && (lease == (async.getLong(((name) + "-lease"))))) {
                    return after;
                }else {
                    throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
                }
            }
        };
        org.apache.jackrabbit.oak.spi.commit.CompositeHook hooks = new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), concurrentUpdateCheck);
        store.merge(builder, hooks, org.apache.jackrabbit.oak.spi.commit.CommitInfo.EMPTY);
    }

    private static void preAsyncRunStatsStats(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.start(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static void postAsyncRunStatsStatus(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.done(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static java.lang.String now() {
        return org.apache.jackrabbit.util.ISO8601.format(java.util.Calendar.getInstance());
    }

    public org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats getIndexStats() {
        return indexStats;
    }

    public boolean isFinished() {
        return (indexStats.getStatus()) == (org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE);
    }

    private static final class AsyncIndexStats implements org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean {
        private java.lang.String start = "";

        private java.lang.String done = "";

        private java.lang.String status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_INIT;

        public void start(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_RUNNING;
            start = now;
            done = "";
        }

        public void done(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE;
            start = "";
            done = now;
        }

        @java.lang.Override
        public java.lang.String getStart() {
            return start;
        }

        @java.lang.Override
        public java.lang.String getDone() {
            return done;
        }

        @java.lang.Override
        public java.lang.String getStatus() {
            return status;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return ((((("AsyncIndexStats [start=" + (start)) + ", done=") + (done)) + ", status=") + (status)) + "]";
        }
    }

    private static boolean noVisibleChanges(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
        return after.compareAgainstBaseState(before, new org.apache.jackrabbit.oak.spi.state.NodeStateDiff() {
            @java.lang.Override
            public boolean propertyAdded(org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyChanged(org.apache.jackrabbit.oak.api.PropertyState before, org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(before.getName());
            }

            @java.lang.Override
            public boolean childNodeAdded(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }

            @java.lang.Override
            public boolean childNodeChanged(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name)) || (after.compareAgainstBaseState(before, this));
            }

            @java.lang.Override
            public boolean childNodeDeleted(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }
        });
    }

    private static boolean isHidden(java.lang.String name) {
        return (name.charAt(0)) == ':';
    }
}
10:33:00.397 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:00.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:33:00.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:201 which is executed by 1 tests
-1844007872
10:33:00.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:01.138 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (405 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
10:33:02.217 [pool-23-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:02.221 [pool-24-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:02.225 [pool-25-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:02.228 [pool-26-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:02.228 [pool-21-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 1. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:201.
10:33:02.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:33:02.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:198 which is executed by 1 tests
-1844007872
10:33:02.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:02.969 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:04.027 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (403 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:04.031 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:04.031 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:04.031 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:04.031 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:198.
10:33:04.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:33:04.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$1:325 which is executed by 1 tests
-1844007872
10:33:04.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:04.762 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (400 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:05.345 [pool-31-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AsyncIndexUpdate.java:223: error: missing return statement
            }
            ^
10:33:05.399 [pool-31-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class AsyncIndexUpdate implements java.lang.Runnable {
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.class);

    static final java.lang.String ASYNC = ":async";

    private static final long DEFAULT_LIFETIME = java.util.concurrent.TimeUnit.DAYS.toMillis(1000);

    private static final org.apache.jackrabbit.oak.api.CommitFailedException CONCURRENT_UPDATE = new org.apache.jackrabbit.oak.api.CommitFailedException("Async", 1, "Concurrent update detected");

    private static final int ASYNC_TIMEOUT = 15;

    private final java.lang.String name;

    private final org.apache.jackrabbit.oak.spi.state.NodeStore store;

    private final org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider;

    private final long lifetime = org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME;

    private boolean failing = false;

    private final org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats indexStats = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats();

    private final boolean switchOnSync;

    private final java.util.Set<java.lang.String> reindexedDefinitions = new java.util.HashSet<java.lang.String>();

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider, boolean switchOnSync) {
        this.name = com.google.common.base.Preconditions.checkNotNull(name);
        this.store = com.google.common.base.Preconditions.checkNotNull(store);
        this.provider = com.google.common.base.Preconditions.checkNotNull(provider);
        this.switchOnSync = switchOnSync;
    }

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider) {
        this(name, store, provider, false);
    }

    private class AsyncUpdateCallback implements org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback {
        private final java.lang.String checkpoint;

        private long lease;

        private long updates = 0;

        public AsyncUpdateCallback(java.lang.String checkpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
            long now = java.lang.System.currentTimeMillis();
            this.checkpoint = checkpoint;
            this.lease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
            java.lang.String leaseName = (name) + "-lease";
            org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
            long beforeLease = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getLong(leaseName);
            if (beforeLease > now) {
                throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
            }
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = root.builder();
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(leaseName, lease);
            mergeWithConcurrencyCheck(builder, checkpoint, beforeLease);
        }

        boolean isDirty() {
            return (updates) > 0;
        }

        void close() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.spi.state.NodeBuilder async = builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
            async.removeProperty(((name) + "-lease"));
            mergeWithConcurrencyCheck(builder, async.getString(name), lease);
        }

        @java.lang.Override
        public void indexUpdate() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            (updates)++;
            if (((updates) % 100) == 0) {
                long now = java.lang.System.currentTimeMillis();
                if ((now + (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT)) > (lease)) {
                    long newLease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
                    org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
                    builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(((name) + "-lease"), newLease);
                    mergeWithConcurrencyCheck(builder, checkpoint, lease);
                    lease = newLease;
                }
            }
        }
    }

    @java.lang.Override
    public synchronized void run() {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Running background index task {}", name);
        org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
        org.apache.jackrabbit.oak.spi.state.NodeState async = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
        if ((async.getLong(((name) + "-lease"))) > (java.lang.System.currentTimeMillis())) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("Another copy of the {} index update is already running;" + " skipping this update"), name);
            return;
        }
        org.apache.jackrabbit.oak.spi.state.NodeState before;
        java.lang.String beforeCheckpoint = async.getString(name);
        if (beforeCheckpoint != null) {
            org.apache.jackrabbit.oak.spi.state.NodeState state = store.retrieve(beforeCheckpoint);
            if (state == null) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Failed to retrieve previously indexed checkpoint {};" + " re-running the initial {} index update"), beforeCheckpoint, name);
                beforeCheckpoint = null;
                before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
            }else
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(state, root)) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes since last checkpoint;" + " skipping the {} index update"), name);
                    return;
                }else {
                    before = state;
                }

        }else {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Initial {} index update", name);
            before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
        }
        java.lang.String afterCheckpoint = store.checkpoint(lifetime);
        org.apache.jackrabbit.oak.spi.state.NodeState after = store.retrieve(afterCheckpoint);
        if (after == null) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Unable to retrieve newly created checkpoint {}," + " skipping the {} index update"), afterCheckpoint, name);
            return;
        }
        java.lang.String checkpointToRelease = afterCheckpoint;
        try {
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
            if (failing) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Index update {} no longer fails", name);
                failing = false;
            }
            checkpointToRelease = beforeCheckpoint;
        } catch (org.apache.jackrabbit.oak.api.CommitFailedException e) {
            if (e == (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE)) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Concurrent update detected in the {} index update", name);
            }else
                if (failing) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("The {} index update is still failing", name, e);
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn("The {} index update failed", name, e);
                    failing = true;
                }

        } finally {
            if (checkpointToRelease != null) {
                store.release(checkpointToRelease);
            }
        }
    }

    private void updateIndex(org.apache.jackrabbit.oak.spi.state.NodeState before, java.lang.String beforeCheckpoint, org.apache.jackrabbit.oak.spi.state.NodeState after, java.lang.String afterCheckpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.preAsyncRunStatsStats(indexStats);
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback callback = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback(beforeCheckpoint);
        try {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.plugins.index.IndexUpdate indexUpdate = new org.apache.jackrabbit.oak.plugins.index.IndexUpdate(provider, name, after, builder, callback);
            org.apache.jackrabbit.oak.api.CommitFailedException exception = org.apache.jackrabbit.oak.spi.commit.EditorDiff.process(indexUpdate, before, after);
            if (exception != null) {
                throw exception;
            }
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(name, afterCheckpoint);
            if ((callback.isDirty()) || (before == (org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE))) {
                if (switchOnSync) {
                    reindexedDefinitions.addAll(indexUpdate.getReindexedDefinitions());
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
                }
            }else
                if (switchOnSync) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes detected after diff; will try to" + " switch to synchronous updates on {}"), reindexedDefinitions);
                    for (java.lang.String path : reindexedDefinitions) {
                        org.apache.jackrabbit.oak.spi.state.NodeBuilder c = builder;
                        for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) {
                            c = c.getChildNode(p);
                        }
                        if ((c.exists()) && (!(c.getBoolean(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_PROPERTY_NAME)))) {
                            c.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ASYNC_PROPERTY_NAME);
                        }
                    }
                    reindexedDefinitions.clear();
                }

            mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);
        } finally {
            callback.close();
        }
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
    }

    private void mergeWithConcurrencyCheck(org.apache.jackrabbit.oak.spi.state.NodeBuilder builder, final java.lang.String checkpoint, final long lease) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.spi.commit.CommitHook concurrentUpdateCheck = new org.apache.jackrabbit.oak.spi.commit.CommitHook() {
            @java.lang.Override
            @javax.annotation.Nonnull
            public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {
                org.apache.jackrabbit.oak.spi.state.NodeState async = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
                if ((com.google.common.base.Objects.equal(checkpoint, async.getString(name))) && (lease == (async.getLong(((name) + "-lease"))))) {
                    return after;
                }else {
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(10).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectInput("async",async);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectInput("after",after);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectInput("before",before);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectInput("info",info);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(10).collectionEnds();
                    }
                    if (runtimeAngelicValue)
                        throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;

                }
            }
        };
        org.apache.jackrabbit.oak.spi.commit.CompositeHook hooks = new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), concurrentUpdateCheck);
        store.merge(builder, hooks, org.apache.jackrabbit.oak.spi.commit.CommitInfo.EMPTY);
    }

    private static void preAsyncRunStatsStats(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.start(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static void postAsyncRunStatsStatus(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.done(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static java.lang.String now() {
        return org.apache.jackrabbit.util.ISO8601.format(java.util.Calendar.getInstance());
    }

    public org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats getIndexStats() {
        return indexStats;
    }

    public boolean isFinished() {
        return (indexStats.getStatus()) == (org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE);
    }

    private static final class AsyncIndexStats implements org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean {
        private java.lang.String start = "";

        private java.lang.String done = "";

        private java.lang.String status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_INIT;

        public void start(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_RUNNING;
            start = now;
            done = "";
        }

        public void done(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE;
            start = "";
            done = now;
        }

        @java.lang.Override
        public java.lang.String getStart() {
            return start;
        }

        @java.lang.Override
        public java.lang.String getDone() {
            return done;
        }

        @java.lang.Override
        public java.lang.String getStatus() {
            return status;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return ((((("AsyncIndexStats [start=" + (start)) + ", done=") + (done)) + ", status=") + (status)) + "]";
        }
    }

    private static boolean noVisibleChanges(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
        return after.compareAgainstBaseState(before, new org.apache.jackrabbit.oak.spi.state.NodeStateDiff() {
            @java.lang.Override
            public boolean propertyAdded(org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyChanged(org.apache.jackrabbit.oak.api.PropertyState before, org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(before.getName());
            }

            @java.lang.Override
            public boolean childNodeAdded(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }

            @java.lang.Override
            public boolean childNodeChanged(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name)) || (after.compareAgainstBaseState(before, this));
            }

            @java.lang.Override
            public boolean childNodeDeleted(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }
        });
    }

    private static boolean isHidden(java.lang.String name) {
        return (name.charAt(0)) == ':';
    }
}
10:33:05.400 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BasicDBObject:89 which is executed by 1 tests
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BasicDBObject:89
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BasicDBObject:88 which is executed by 1 tests
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BasicDBObject:88
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:33:05.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:290 which is executed by 5 tests
82059410
10:33:05.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
10:33:06.858 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1101 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)

10:33:07.455 [pool-33-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:171: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:33:07.461 [pool-33-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(11).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("(parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)",(parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG));} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(11).collectionEnds();
        }
        if (runtimeAngelicValue) if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:33:07.462 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:07.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
10:33:07.778 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (296 ms)
<> Total tests run: 22
<> Ignored tests: 2
<> Failed tests: 20
~ getParentId(org.apache.jackrabbit.oak.plugins.document.util.UtilsTest)
[org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;]
java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;    at org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(Utils.java:247)
    at org.apache.jackrabbit.oak.plugins.document.util.UtilsTest.getParentId(UtilsTest.java:56)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)

10:33:08.348 [pool-35-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:171: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:33:08.354 [pool-35-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = (parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(12).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("(parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)",(parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG));} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(12).collectionEnds();
        }
        if (runtimeAngelicValue) {
            return false;
        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:33:08.354 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:08.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:33:08.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:289 which is executed by 5 tests
82059410
10:33:08.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:33:08.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.BasicBSONObject:288 which is executed by 13 tests
10:33:08.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.BasicBSONObject:288
10:33:08.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:33:08.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:251 which is executed by 7 tests
-1844007872
10:33:09.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:09.455 [pool-38-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:10.484 [pool-39-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (374 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:10.488 [pool-40-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:10.489 [pool-37-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:10.489 [pool-37-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:10.489 [pool-37-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:251.
10:33:10.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:33:10.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:250 which is executed by 12 tests
-1844007872
10:33:10.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:11.242 [pool-42-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (421 ms)
<> Total tests run: 20
<> Ignored tests: 0
<> Failed tests: 2
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:12.292 [pool-43-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (408 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:12.295 [pool-44-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:12.296 [pool-41-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:12.296 [pool-41-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:12.296 [pool-41-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:250.
10:33:12.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:12.748 [pool-46-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (448 ms)
<> Total tests run: 20
<> Ignored tests: 0
<> Failed tests: 2
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:13.744 [pool-47-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (385 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:13.748 [pool-48-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:13.748 [pool-45-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:13.748 [pool-45-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:13.748 [pool-45-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:250.
10:33:13.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
10:33:13.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:240 which is executed by 2 tests
-1844007872
10:33:14.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:14.489 [pool-50-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (403 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:15.528 [pool-51-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (379 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:15.531 [pool-52-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:15.531 [pool-49-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:15.532 [pool-49-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:15.532 [pool-49-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:240.
10:33:15.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:15.943 [pool-54-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:16.916 [pool-55-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (377 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:16.919 [pool-56-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:16.919 [pool-53-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:16.919 [pool-53-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:16.920 [pool-53-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:240.
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:216 which is executed by 80 tests
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:216
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.FileLock:526 which is executed by 81 tests
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.FileLock:526
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.FileLock:517 which is executed by 80 tests
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.FileLock:517
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.FileLock:513 which is executed by 80 tests
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.FileLock:513
10:33:16.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.FileLock:510 which is executed by 80 tests
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.FileLock:510
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FileUtils:155 which is executed by 80 tests
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FileUtils:155
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:35 which is executed by 83 tests
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:35
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:139 which is executed by 81 tests
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:139
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:79 which is executed by 81 tests
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:79
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
10:33:16.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:74 which is executed by 81 tests
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:74
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:63 which is executed by 81 tests
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:63
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:60 which is executed by 81 tests
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:60
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:59 which is executed by 81 tests
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:59
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:43 which is executed by 81 tests
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:43
10:33:16.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:42 which is executed by 81 tests
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:42
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePathDisk:41 which is executed by 81 tests
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePathDisk:41
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:57 which is executed by 81 tests
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:57
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:54 which is executed by 81 tests
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:54
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FileUtils:32 which is executed by 81 tests
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FileUtils:32
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
10:33:16.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:95 which is executed by 82 tests
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:95
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:69 which is executed by 82 tests
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:69
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:53 which is executed by 82 tests
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:53
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:52 which is executed by 82 tests
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:52
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.fs.FilePath:51 which is executed by 82 tests
10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.fs.FilePath:51
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:769 which is executed by 72 tests
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:769
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:768 which is executed by 72 tests
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:768
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:577 which is executed by 72 tests
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:577
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:576 which is executed by 72 tests
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:576
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:561 which is executed by 72 tests
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:561
10:33:16.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:560 which is executed by 72 tests
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:560
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:107 which is executed by 72 tests
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:107
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:106 which is executed by 72 tests
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:106
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:105 which is executed by 72 tests
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:105
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:104 which is executed by 72 tests
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:104
10:33:16.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:103 which is executed by 72 tests
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:103
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:102 which is executed by 72 tests
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:102
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:101 which is executed by 72 tests
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:101
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:100 which is executed by 72 tests
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:100
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:99 which is executed by 72 tests
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:99
10:33:16.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:98 which is executed by 72 tests
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:98
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:97 which is executed by 72 tests
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:97
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:96 which is executed by 72 tests
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:96
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:95 which is executed by 72 tests
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:95
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:94 which is executed by 72 tests
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:94
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
10:33:16.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:93 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:93
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:92 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:92
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:91 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:91
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:90 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:90
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:89 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:89
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:88 which is executed by 72 tests
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:88
10:33:16.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:87 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:87
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:86 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:86
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:85 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:85
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:84 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:84
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:83 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:83
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:82 which is executed by 72 tests
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:82
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
10:33:16.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:81 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:81
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:80 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:80
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:79 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:79
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:78 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:78
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:77 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:77
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:76 which is executed by 72 tests
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:76
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
10:33:16.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:75 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:75
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:27 which is executed by 144 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:27
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterListenerAdapter:27 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterListenerAdapter:27
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:194 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:194
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:193 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:193
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:192 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:192
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:191 which is executed by 72 tests
10:33:16.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:191
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:190 which is executed by 72 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:190
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:189 which is executed by 72 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:189
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:188 which is executed by 72 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:188
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings:135 which is executed by 72 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings:135
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:39 which is executed by 794 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:39
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:283 which is executed by 72 tests
10:33:16.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:283
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:188 which is executed by 72 tests
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:188
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:187 which is executed by 72 tests
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:187
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:186 which is executed by 72 tests
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:186
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:185 which is executed by 72 tests
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:185
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:184 which is executed by 72 tests
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:184
10:33:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:75 which is executed by 1224 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:75
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:182 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:182
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:162 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:162
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:161 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:161
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:102 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:102
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:101 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:101
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:97 which is executed by 72 tests
10:33:16.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:97
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription$Builder:96 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription$Builder:96
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ChangeEvent:40 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ChangeEvent:40
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:106 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:106
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:105 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:105
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:104 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:104
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:103 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:103
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:102 which is executed by 72 tests
10:33:16.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer$DefaultServerStateListener:102
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:167 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:167
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:166 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:166
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:163 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:163
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:162 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:162
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:161 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:161
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:160 which is executed by 72 tests
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:160
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
10:33:16.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:158 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:158
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:127 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:127
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:349 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:349
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:348 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:348
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:347 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:347
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:346 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:346
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:343 which is executed by 72 tests
10:33:16.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:343
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:339 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:339
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:337 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:337
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:335 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:335
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:334 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:334
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:268 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:268
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:267 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:267
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:265 which is executed by 72 tests
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:265
10:33:16.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:255 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:255
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:254 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:254
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:251 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:251
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:250 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:250
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:246 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:246
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:245 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:245
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:243 which is executed by 72 tests
10:33:16.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:243
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBPort:240 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBPort:240
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings:68 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings:68
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings:64 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings:64
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings:60 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings:60
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:29 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:29
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:83 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:83
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:82 which is executed by 72 tests
10:33:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:82
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:81 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:81
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:78 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:78
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:76 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:76
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:75 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:75
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster:74 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster:74
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:164 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:164
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:162 which is executed by 72 tests
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:162
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
10:33:16.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:160 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:160
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:157 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:157
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:156 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:156
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:144 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:144
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:143 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:143
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:139 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:139
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:132 which is executed by 72 tests
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:132
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
10:33:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:121 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:121
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:120 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:120
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:118 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:118
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:114 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:114
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:113 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:113
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:111 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:111
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:108 which is executed by 72 tests
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:108
10:33:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:107 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:107
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:84 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:84
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:83 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:83
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:81 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:81
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:80 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:80
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:79 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor$ServerMonitorRunnable:79
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerVersion:98 which is executed by 72 tests
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerVersion:98
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
10:33:16.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerVersion:94 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerVersion:94
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerVersion:92 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerVersion:92
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerVersion:88 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerVersion:88
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerVersion:85 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerVersion:85
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings:58 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings:58
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:185 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:185
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:467 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:467
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:418 which is executed by 72 tests
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:418
10:33:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:414 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:414
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:411 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:411
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:408 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:408
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:405 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:405
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:402 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:402
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:399 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:399
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:396 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:396
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:393 which is executed by 72 tests
10:33:16.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:393
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:390 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:390
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:387 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:387
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:384 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:384
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:381 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:381
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:378 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:378
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:375 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:375
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:372 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:372
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:369 which is executed by 72 tests
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:369
10:33:16.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:367 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:367
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:363 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:363
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:360 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:360
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:341 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:341
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:329 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:329
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:234 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:234
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerDescription:230 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerDescription:230
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster$1:61 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster$1:61
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster$1:60 which is executed by 72 tests
10:33:16.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster$1:60
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster$1:48 which is executed by 72 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster$1:48
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SingleServerCluster$1:47 which is executed by 72 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SingleServerCluster$1:47
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:31 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:31
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:28 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:28
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerType$8:99 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerType$8:99
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:145 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:145
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:151 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:151
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:147 which is executed by 73 tests
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:147
10:33:16.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:145 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:145
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:141 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:141
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:138 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:138
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:75 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:75
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:70 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:70
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Tags:42 which is executed by 73 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Tags:42
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:190 which is executed by 74 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:190
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:2481 which is executed by 112 tests
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:2481
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
10:33:16.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:110 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:110
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:109 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:109
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:98 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:98
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:97 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:97
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:94 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:94
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:87 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:87
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:83 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:83
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:81 which is executed by 112 tests
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:81
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
10:33:16.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:78 which is executed by 112 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:78
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:77 which is executed by 112 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:77
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:76 which is executed by 112 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:76
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageLog:877 which is executed by 113 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageLog:877
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageLog:876 which is executed by 113 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageLog:876
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageLog:685 which is executed by 113 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageLog:685
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageLog:683 which is executed by 113 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageLog:683
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageLog:682 which is executed by 113 tests
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageLog:682
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
10:33:16.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageOutputStream:159 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageOutputStream:159
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageOutputStream:155 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageOutputStream:155
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:1972 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:1972
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:1964 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:1964
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:1962 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:1962
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:1961 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:1961
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.engine.Database:1958 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.engine.Database:1958
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageStore:1024 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageStore:1024
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageStore:1022 which is executed by 113 tests
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageStore:1022
10:33:16.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.PageStore:1021 which is executed by 113 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.PageStore:1021
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:825 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:825
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:822 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:822
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:821 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:821
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:820 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:820
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:819 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:819
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:816 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:816
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo$CursorCleanerThread:813 which is executed by 140 tests
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo$CursorCleanerThread:813
10:33:16.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBApiLayer:142 which is executed by 140 tests
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBApiLayer:142
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBApiLayer:141 which is executed by 140 tests
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBApiLayer:141
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBApiLayer:139 which is executed by 140 tests
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBApiLayer:139
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:619 which is executed by 140 tests
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:619
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
10:33:16.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.Utils:291 which is executed by 4 tests
82059410
10:33:17.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
10:33:17.602 [pool-58-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (294 ms)
<> Total tests run: 19
<> Ignored tests: 0
<> Failed tests: 19
~ splitPropertyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitDocNoChild(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitPreviousDocument(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ commitRootInPrevious(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingWithSplitRatio(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplitLongPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ mainPath(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ readLocalCommitInfo(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitCommitRoot(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cluster(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepRevisionsForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ keepCommitRootForMostRecentChanges(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testSplitPropAndCommitOnly(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ cascadingSplit(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDeleted(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitDocWithHasBinary(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ splitRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
~ splitRevisionsManyClusterNodes(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
~ manyRevisions(org.apache.jackrabbit.oak.plugins.document.DocumentSplitTest)
[com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;]
java.lang.NoSuchMethodError: com.google.common.collect.Maps.newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;    at org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.<init>(DocumentNodeStore.java:196)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.getNodeStore(DocumentMK.java:582)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK.<init>(DocumentMK.java:93)
    at org.apache.jackrabbit.oak.plugins.document.DocumentMK$Builder.open(DocumentMK.java:763)
    at org.apache.jackrabbit.oak.plugins.document.BaseDocumentMKTest.initDocumentMK(BaseDocumentMKTest.java:32)
    at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)

10:33:18.191 [pool-57-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Utils.java:171: error: cannot find symbol
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
                                                                          ^
  symbol:   method encodeHexString(byte[])
  location: class org.apache.commons.codec.binary.Hex
Note: Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
10:33:18.198 [pool-57-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class Utils {
    private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.document.util.Utils.class);

    private static final int REVISION_LENGTH = new org.apache.jackrabbit.oak.plugins.document.Revision(java.lang.System.currentTimeMillis(), 0, 0).toString().length();

    static final int PATH_SHORT = java.lang.Integer.getInteger("oak.pathShort", 165);

    static final int PATH_LONG = java.lang.Integer.getInteger("oak.pathLong", 350);

    private static final int NODE_NAME_LIMIT = java.lang.Integer.getInteger("oak.nodeNameLimit", 150);

    private static final java.nio.charset.Charset UTF_8 = java.nio.charset.Charset.forName("UTF-8");

    public static java.lang.String unshareString(java.lang.String x) {
        return new java.lang.String(x);
    }

    public static int pathDepth(java.lang.String path) {
        if (path.equals("/")) {
            return 0;
        }
        int depth = 0;
        for (int i = 0; i < (path.length()); i++) {
            if ((path.charAt(i)) == '/') {
                depth++;
            }
        }
        return depth;
    }

    @java.lang.SuppressWarnings("unchecked")
    public static int estimateMemoryUsage(java.util.Map<?, java.lang.Object> map) {
        if (map == null) {
            return 0;
        }
        int size = 0;
        for (java.util.Map.Entry<?, java.lang.Object> e : map.entrySet()) {
            if ((e.getKey()) instanceof org.apache.jackrabbit.oak.plugins.document.Revision) {
                size += 32;
            }else {
                size += 48 + ((e.getKey().toString().length()) * 2);
            }
            java.lang.Object o = e.getValue();
            if (o instanceof java.lang.String) {
                size += 48 + ((((java.lang.String) (o)).length()) * 2);
            }else
                if (o instanceof java.lang.Long) {
                    size += 16;
                }else
                    if (o instanceof java.lang.Boolean) {
                        size += 8;
                    }else
                        if (o instanceof java.lang.Integer) {
                            size += 8;
                        }else
                            if (o instanceof java.util.Map) {
                                size += 8 + (org.apache.jackrabbit.oak.plugins.document.util.Utils.estimateMemoryUsage(((java.util.Map<java.lang.String, java.lang.Object>) (o))));
                            }else
                                if (o == null) {
                                }else {
                                    throw new java.lang.IllegalArgumentException(("Can't estimate memory usage of " + o));
                                }





        }
        if (map instanceof com.mongodb.BasicDBObject) {
            size += 176;
            size += (map.size()) * 136;
        }else {
            size += 112;
            size += (map.size()) * 64;
        }
        return size;
    }

    public static int getUniqueClusterId() {
        org.bson.types.ObjectId objId = new org.bson.types.ObjectId();
        return objId._machine();
    }

    public static java.lang.String escapePropertyName(java.lang.String propertyName) {
        int len = propertyName.length();
        if (len == 0) {
            return "_";
        }
        java.lang.StringBuilder buff = null;
        char c = propertyName.charAt(0);
        int i = 0;
        if ((c == '_') || (c == '$')) {
            buff = new java.lang.StringBuilder((len + 1));
            buff.append('_').append(c);
            i++;
        }
        for (; i < len; i++) {
            c = propertyName.charAt(i);
            char rep;
            switch (c) {
                case '.' :
                    rep = 'd';
                    break;
                case '\\' :
                    rep = '\\';
                    break;
                default :
                    rep = 0;
            }
            if (rep != 0) {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(propertyName.substring(0, i));
                }
                buff.append('\\').append(rep);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? propertyName : buff.toString();
    }

    public static java.lang.String unescapePropertyName(java.lang.String key) {
        int len = key.length();
        if ((key.startsWith("_")) && (((key.startsWith("__")) || (key.startsWith("_$"))) || (len == 1))) {
            key = key.substring(1);
            len--;
        }
        java.lang.StringBuilder buff = null;
        for (int i = 0; i < len; i++) {
            char c = key.charAt(i);
            if (c == '\\') {
                if (buff == null) {
                    buff = new java.lang.StringBuilder(key.substring(0, i));
                }
                c = key.charAt((++i));
                if (c == '\\') {
                }else
                    if (c == 'd') {
                        c = '.';
                    }

                buff.append(c);
            }else
                if (buff != null) {
                    buff.append(c);
                }

        }
        return buff == null ? key : buff.toString();
    }

    public static boolean isPropertyName(java.lang.String key) {
        return ((!(key.startsWith("_"))) || (key.startsWith("__"))) || (key.startsWith("_$"));
    }

    public static java.lang.String getIdFromPath(java.lang.String path) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isLongPath(path)) {
            java.security.MessageDigest digest;
            try {
                digest = java.security.MessageDigest.getInstance("SHA-256");
            } catch (java.security.NoSuchAlgorithmException e) {
                throw new java.lang.RuntimeException(e);
            }
            int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
            java.lang.String parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
            byte[] hash = digest.digest(parent.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8));
            java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
            return (((depth + ":h") + (org.apache.commons.codec.binary.Hex.encodeHexString(hash))) + "/") + name;
        }
        int depth = org.apache.jackrabbit.oak.plugins.document.util.Utils.pathDepth(path);
        return (depth + ":") + path;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            return null;
        }
        java.lang.String path = org.apache.jackrabbit.oak.plugins.document.util.Utils.getPathFromId(id);
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isValid(path))) {
            return null;
        }
        if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) {
            return null;
        }
        java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path);
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(parentPath);
    }

    public static boolean isLongPath(java.lang.String path) {
        if ((path.length()) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT)) {
            return false;
        }
        byte[] parent = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(path).getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);
        if ((parent.length) < (org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG)) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(18).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("parent",parent);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("path",path);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT",org.apache.jackrabbit.oak.plugins.document.util.Utils.PATH_SHORT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8",org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG",org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH",org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT",org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectionEnds();
            }
            if (runtimeAngelicValue)
                return false;

        }
        java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(path);
        if ((name.getBytes(org.apache.jackrabbit.oak.plugins.document.util.Utils.UTF_8).length) > (org.apache.jackrabbit.oak.plugins.document.util.Utils.NODE_NAME_LIMIT)) {
            throw new java.lang.IllegalArgumentException(("Node name is too long: " + path));
        }
        return true;
    }

    public static boolean isIdFromLongPath(java.lang.String id) {
        int index = id.indexOf(':');
        return (id.charAt((index + 1))) == 'h';
    }

    public static java.lang.String getPathFromId(java.lang.String id) {
        if (org.apache.jackrabbit.oak.plugins.document.util.Utils.isIdFromLongPath(id)) {
            throw new java.lang.IllegalArgumentException(("Id is hashed: " + id));
        }
        int index = id.indexOf(':');
        return id.substring((index + 1));
    }

    public static java.lang.String getPreviousPathFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) {
            throw new java.lang.IllegalArgumentException(("path must be absolute: " + path));
        }
        java.lang.StringBuilder sb = new java.lang.StringBuilder((((path.length()) + (org.apache.jackrabbit.oak.plugins.document.util.Utils.REVISION_LENGTH)) + 3));
        sb.append("p").append(path);
        if ((sb.charAt(((sb.length()) - 1))) != '/') {
            sb.append('/');
        }
        r.toStringBuilder(sb).append("/").append(height);
        return sb.toString();
    }

    public static java.lang.String getPreviousIdFor(java.lang.String path, org.apache.jackrabbit.oak.plugins.document.Revision r, int height) {
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(org.apache.jackrabbit.oak.plugins.document.util.Utils.getPreviousPathFor(path, r, height));
    }

    public static <K> void deepCopyMap(java.util.Map<K, java.lang.Object> source, java.util.Map<K, java.lang.Object> target) {
        for (java.util.Map.Entry<K, java.lang.Object> e : source.entrySet()) {
            java.lang.Object value = e.getValue();
            java.util.Comparator<? super K> comparator = null;
            if (value instanceof java.util.SortedMap) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.SortedMap<K, java.lang.Object> map = ((java.util.SortedMap<K, java.lang.Object>) (value));
                comparator = map.comparator();
            }
            if (value instanceof java.util.Map<?, ?>) {
                @java.lang.SuppressWarnings("unchecked")
                java.util.Map<K, java.lang.Object> old = ((java.util.Map<K, java.lang.Object>) (value));
                java.util.Map<K, java.lang.Object> c = new java.util.TreeMap<K, java.lang.Object>(comparator);
                org.apache.jackrabbit.oak.plugins.document.util.Utils.deepCopyMap(old, c);
                value = c;
            }
            target.put(e.getKey(), value);
        }
    }

    public static java.lang.String getKeyLowerLimit(java.lang.String path) {
        java.lang.String from = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "a");
        from = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(from);
        from = from.substring(0, ((from.length()) - 1));
        return from;
    }

    public static java.lang.String getKeyUpperLimit(java.lang.String path) {
        java.lang.String to = org.apache.jackrabbit.oak.commons.PathUtils.concat(path, "z");
        to = org.apache.jackrabbit.oak.plugins.document.util.Utils.getIdFromPath(to);
        to = (to.substring(0, ((to.length()) - 2))) + "0";
        return to;
    }

    @javax.annotation.CheckForNull
    public static java.lang.String getParentIdFromLowerLimit(java.lang.String fromKey) {
        if (fromKey.endsWith("/")) {
            fromKey = fromKey + "a";
        }
        return org.apache.jackrabbit.oak.plugins.document.util.Utils.getParentId(fromKey);
    }

    public static boolean isCommitted(@javax.annotation.Nullable
    java.lang.String tag) {
        return (tag != null) && ((tag.equals("c")) || (tag.startsWith("c-")));
    }

    @javax.annotation.Nonnull
    public static org.apache.jackrabbit.oak.plugins.document.Revision resolveCommitRevision(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision rev, @javax.annotation.Nonnull
    java.lang.String tag) {
        return com.google.common.base.Preconditions.checkNotNull(tag).startsWith("c-") ? org.apache.jackrabbit.oak.plugins.document.Revision.fromString(tag.substring(2)) : rev;
    }

    public static void closeIfCloseable(java.lang.Object obj) {
        if (obj instanceof java.io.Closeable) {
            try {
                ((java.io.Closeable) (obj)).close();
            } catch (java.io.IOException e) {
                org.apache.jackrabbit.oak.plugins.document.util.Utils.LOG.warn("Error occurred while closing {}", obj, e);
            }
        }
    }

    public static java.lang.String timestampToString(long timestamp) {
        return ((new java.sql.Timestamp(timestamp)) + "00").substring(0, 23);
    }

    public static boolean isRevisionNewer(@javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.RevisionContext context, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision x, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.document.Revision previous) {
        return (context.getRevisionComparator().compare(x, previous)) > 0;
    }
}
10:33:18.198 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:721 which is executed by 5 tests
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:721
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:720 which is executed by 5 tests
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:720
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
10:33:18.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:210 which is executed by 6 tests
-1844007872
10:33:18.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
10:33:18.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:77 which is executed by 7 tests
-2081026674
10:33:18.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:19.261 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (405 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:19.794 [pool-59-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractNodeState.java:41: error: missing return statement
    }
    ^
10:33:19.799 [pool-59-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractNodeState implements org.apache.jackrabbit.oak.spi.state.NodeState {
    public static boolean isValidName(java.lang.String name) {
        return ((name != null) && (!(name.isEmpty()))) && ((name.indexOf('/')) == (-1));
    }

    public static void checkValidName(java.lang.String name) throws java.lang.IllegalArgumentException {
        if (!(org.apache.jackrabbit.oak.spi.state.AbstractNodeState.isValidName(name))) {
            throw new java.lang.IllegalArgumentException(("Invalid name: " + name));
        }
    }

    public static boolean getBoolean(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        return ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.BOOLEAN))) && (property.getValue(org.apache.jackrabbit.oak.api.Type.BOOLEAN));
    }

    public static long getLong(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.LONG))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.LONG);
        }else {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(19).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectInput("property",property);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectInput("name",name);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectInput("state",state);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(19).collectionEnds();
            }
            if (runtimeAngelicValue)
                return 0;

        }
    }

    public static java.lang.String getString(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.STRING))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.STRING);
        }else {
            return null;
        }
    }

    public static java.lang.Iterable<java.lang.String> getStrings(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.STRINGS))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS);
        }else {
            return java.util.Collections.emptyList();
        }
    }

    public static java.lang.String getName(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.NAME))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.NAME);
        }else {
            return null;
        }
    }

    public static java.lang.Iterable<java.lang.String> getNames(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.NAMES))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.NAMES);
        }else {
            return java.util.Collections.emptyList();
        }
    }

    public static boolean compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState state, org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        if (!(org.apache.jackrabbit.oak.spi.state.AbstractNodeState.comparePropertiesAgainstBaseState(state, base, diff))) {
            return false;
        }
        java.util.Set<java.lang.String> baseChildNodes = new java.util.HashSet<java.lang.String>();
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry beforeCNE : base.getChildNodeEntries()) {
            java.lang.String name = beforeCNE.getName();
            org.apache.jackrabbit.oak.spi.state.NodeState beforeChild = beforeCNE.getNodeState();
            org.apache.jackrabbit.oak.spi.state.NodeState afterChild = state.getChildNode(name);
            if (!(afterChild.exists())) {
                if (!(diff.childNodeDeleted(name, beforeChild))) {
                    return false;
                }
            }else {
                baseChildNodes.add(name);
                if (afterChild != beforeChild) {
                    if (!(diff.childNodeChanged(name, beforeChild, afterChild))) {
                        return false;
                    }
                }
            }
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry afterChild : state.getChildNodeEntries()) {
            java.lang.String name = afterChild.getName();
            if (!(baseChildNodes.contains(name))) {
                if (!(diff.childNodeAdded(name, afterChild.getNodeState()))) {
                    return false;
                }
            }
        }
        return true;
    }

    public static boolean comparePropertiesAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState state, org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        java.util.Set<java.lang.String> baseProperties = new java.util.HashSet<java.lang.String>();
        for (org.apache.jackrabbit.oak.api.PropertyState beforeProperty : base.getProperties()) {
            java.lang.String name = beforeProperty.getName();
            org.apache.jackrabbit.oak.api.PropertyState afterProperty = state.getProperty(name);
            if (afterProperty == null) {
                if (!(diff.propertyDeleted(beforeProperty))) {
                    return false;
                }
            }else {
                baseProperties.add(name);
                if (!(beforeProperty.equals(afterProperty))) {
                    if (!(diff.propertyChanged(beforeProperty, afterProperty))) {
                        return false;
                    }
                }
            }
        }
        for (org.apache.jackrabbit.oak.api.PropertyState afterProperty : state.getProperties()) {
            if (!(baseProperties.contains(afterProperty.getName()))) {
                if (!(diff.propertyAdded(afterProperty))) {
                    return false;
                }
            }
        }
        return true;
    }

    public static java.lang.String toString(org.apache.jackrabbit.oak.spi.state.NodeState state) {
        if (!(state.exists())) {
            return "{N/A}";
        }
        java.lang.StringBuilder builder = new java.lang.StringBuilder("{");
        java.lang.String separator = " ";
        for (org.apache.jackrabbit.oak.api.PropertyState property : state.getProperties()) {
            builder.append(separator);
            separator = ", ";
            builder.append(property);
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry entry : state.getChildNodeEntries()) {
            builder.append(separator);
            separator = ", ";
            builder.append(entry);
        }
        builder.append(" }");
        return builder.toString();
    }

    @java.lang.Override
    public boolean hasProperty(java.lang.String name) {
        return (getProperty(name)) != null;
    }

    @java.lang.Override
    public boolean getBoolean(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getBoolean(this, name);
    }

    @java.lang.Override
    public long getLong(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(this, name);
    }

    @java.lang.Override
    public java.lang.String getString(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getString(this, name);
    }

    @java.lang.Override
    public java.lang.Iterable<java.lang.String> getStrings(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getStrings(this, name);
    }

    @java.lang.Override
    @javax.annotation.CheckForNull
    public java.lang.String getName(@javax.annotation.Nonnull
    java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getName(this, name);
    }

    @java.lang.Override
    @javax.annotation.Nonnull
    public java.lang.Iterable<java.lang.String> getNames(@javax.annotation.Nonnull
    java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getNames(this, name);
    }

    @java.lang.Override
    public org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String name) {
        for (org.apache.jackrabbit.oak.api.PropertyState property : getProperties()) {
            if (name.equals(property.getName())) {
                return property;
            }
        }
        return null;
    }

    @java.lang.Override
    public long getPropertyCount() {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.count(getProperties());
    }

    @java.lang.Override
    public long getChildNodeCount(long max) {
        long n = 0;
        java.util.Iterator<?> iterator = getChildNodeEntries().iterator();
        while (iterator.hasNext()) {
            iterator.next();
            n++;
            if (n >= max) {
                return java.lang.Long.MAX_VALUE;
            }
        } 
        return n;
    }

    @java.lang.Override
    public java.lang.Iterable<java.lang.String> getChildNodeNames() {
        return com.google.common.collect.Iterables.transform(getChildNodeEntries(), new com.google.common.base.Function<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry, java.lang.String>() {
            @java.lang.Override
            public java.lang.String apply(org.apache.jackrabbit.oak.spi.state.ChildNodeEntry input) {
                return input.getName();
            }
        });
    }

    @java.lang.Override
    public boolean compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.compareAgainstBaseState(this, base, diff);
    }

    public java.lang.String toString() {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.toString(this);
    }

    @java.lang.Override
    public boolean equals(java.lang.Object that) {
        if ((this) == that) {
            return true;
        }else
            if (that instanceof org.apache.jackrabbit.oak.spi.state.NodeState) {
                return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.equals(this, ((org.apache.jackrabbit.oak.spi.state.NodeState) (that)));
            }else {
                return false;
            }

    }

    public static boolean equals(org.apache.jackrabbit.oak.spi.state.NodeState a, org.apache.jackrabbit.oak.spi.state.NodeState b) {
        if (((a.exists()) != (b.exists())) || ((a.getPropertyCount()) != (b.getPropertyCount()))) {
            return false;
        }
        long max = 20;
        long c1 = a.getChildNodeCount(max);
        long c2 = b.getChildNodeCount(max);
        if ((c1 <= max) || (c2 <= max)) {
            if (c1 != c2) {
                return false;
            }
        }else
            if ((c1 != (java.lang.Long.MAX_VALUE)) && (c2 != (java.lang.Long.MAX_VALUE))) {
                if (c1 != c2) {
                    return false;
                }
            }

        for (org.apache.jackrabbit.oak.api.PropertyState property : a.getProperties()) {
            if (!(property.equals(b.getProperty(property.getName())))) {
                return false;
            }
        }
        c1 = a.getChildNodeCount(java.lang.Long.MAX_VALUE);
        c2 = b.getChildNodeCount(java.lang.Long.MAX_VALUE);
        if (c1 != c2) {
            return false;
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry entry : a.getChildNodeEntries()) {
            if (!(entry.getNodeState().equals(b.getChildNode(entry.getName())))) {
                return false;
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        return 0;
    }

    protected static long count(java.lang.Iterable<?> iterable) {
        long n = 0;
        java.util.Iterator<?> iterator = iterable.iterator();
        while (iterator.hasNext()) {
            iterator.next();
            n++;
        } 
        return n;
    }
}
10:33:19.799 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:19.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
10:33:19.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:206 which is executed by 7 tests
1584068575
10:33:20.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
10:33:20.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:205 which is executed by 7 tests
1584068575
10:33:20.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:20.890 [pool-62-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (399 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:21.819 [pool-63-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (373 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:21.822 [pool-64-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:21.823 [pool-61-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:21.823 [pool-61-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:21.823 [pool-61-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:205.
10:33:21.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
10:33:21.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:197 which is executed by 7 tests
-1844007872
10:33:22.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:22.558 [pool-66-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:23.132 [pool-65-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AsyncIndexUpdate.java:167: error: variable before might not have been initialized
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
                        ^
10:33:23.184 [pool-65-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class AsyncIndexUpdate implements java.lang.Runnable {
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.class);

    static final java.lang.String ASYNC = ":async";

    private static final long DEFAULT_LIFETIME = java.util.concurrent.TimeUnit.DAYS.toMillis(1000);

    private static final org.apache.jackrabbit.oak.api.CommitFailedException CONCURRENT_UPDATE = new org.apache.jackrabbit.oak.api.CommitFailedException("Async", 1, "Concurrent update detected");

    private static final int ASYNC_TIMEOUT = 15;

    private final java.lang.String name;

    private final org.apache.jackrabbit.oak.spi.state.NodeStore store;

    private final org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider;

    private final long lifetime = org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME;

    private boolean failing = false;

    private final org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats indexStats = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats();

    private final boolean switchOnSync;

    private final java.util.Set<java.lang.String> reindexedDefinitions = new java.util.HashSet<java.lang.String>();

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider, boolean switchOnSync) {
        this.name = com.google.common.base.Preconditions.checkNotNull(name);
        this.store = com.google.common.base.Preconditions.checkNotNull(store);
        this.provider = com.google.common.base.Preconditions.checkNotNull(provider);
        this.switchOnSync = switchOnSync;
    }

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider) {
        this(name, store, provider, false);
    }

    private class AsyncUpdateCallback implements org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback {
        private final java.lang.String checkpoint;

        private long lease;

        private long updates = 0;

        public AsyncUpdateCallback(java.lang.String checkpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
            long now = java.lang.System.currentTimeMillis();
            this.checkpoint = checkpoint;
            this.lease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
            java.lang.String leaseName = (name) + "-lease";
            org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
            long beforeLease = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getLong(leaseName);
            if (beforeLease > now) {
                throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
            }
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = root.builder();
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(leaseName, lease);
            mergeWithConcurrencyCheck(builder, checkpoint, beforeLease);
        }

        boolean isDirty() {
            return (updates) > 0;
        }

        void close() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.spi.state.NodeBuilder async = builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
            async.removeProperty(((name) + "-lease"));
            mergeWithConcurrencyCheck(builder, async.getString(name), lease);
        }

        @java.lang.Override
        public void indexUpdate() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            (updates)++;
            if (((updates) % 100) == 0) {
                long now = java.lang.System.currentTimeMillis();
                if ((now + (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT)) > (lease)) {
                    long newLease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
                    org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
                    builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(((name) + "-lease"), newLease);
                    mergeWithConcurrencyCheck(builder, checkpoint, lease);
                    lease = newLease;
                }
            }
        }
    }

    @java.lang.Override
    public synchronized void run() {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Running background index task {}", name);
        org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
        org.apache.jackrabbit.oak.spi.state.NodeState async = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
        if ((async.getLong(((name) + "-lease"))) > (java.lang.System.currentTimeMillis())) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("Another copy of the {} index update is already running;" + " skipping this update"), name);
            return;
        }
        org.apache.jackrabbit.oak.spi.state.NodeState before;
        java.lang.String beforeCheckpoint = async.getString(name);
        if (beforeCheckpoint != null) {
            org.apache.jackrabbit.oak.spi.state.NodeState state = store.retrieve(beforeCheckpoint);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(21).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("beforeCheckpoint",beforeCheckpoint);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("state == null",state == null);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("async",async);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("null",null);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("root",root);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("state",state);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT);} catch (Exception ex1) {ex1.printStackTrace();};
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(21).collectionEnds();
            }
            if (runtimeAngelicValue) if (state == null) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Failed to retrieve previously indexed checkpoint {};" + " re-running the initial {} index update"), beforeCheckpoint, name);
                beforeCheckpoint = null;
                before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
            }else
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(state, root)) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes since last checkpoint;" + " skipping the {} index update"), name);
                    return;
                }else {
                    before = state;
                }

        }else {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Initial {} index update", name);
            before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
        }
        java.lang.String afterCheckpoint = store.checkpoint(lifetime);
        org.apache.jackrabbit.oak.spi.state.NodeState after = store.retrieve(afterCheckpoint);
        if (after == null) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Unable to retrieve newly created checkpoint {}," + " skipping the {} index update"), afterCheckpoint, name);
            return;
        }
        java.lang.String checkpointToRelease = afterCheckpoint;
        try {
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
            if (failing) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Index update {} no longer fails", name);
                failing = false;
            }
            checkpointToRelease = beforeCheckpoint;
        } catch (org.apache.jackrabbit.oak.api.CommitFailedException e) {
            if (e == (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE)) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Concurrent update detected in the {} index update", name);
            }else
                if (failing) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("The {} index update is still failing", name, e);
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn("The {} index update failed", name, e);
                    failing = true;
                }

        } finally {
            if (checkpointToRelease != null) {
                store.release(checkpointToRelease);
            }
        }
    }

    private void updateIndex(org.apache.jackrabbit.oak.spi.state.NodeState before, java.lang.String beforeCheckpoint, org.apache.jackrabbit.oak.spi.state.NodeState after, java.lang.String afterCheckpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.preAsyncRunStatsStats(indexStats);
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback callback = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback(beforeCheckpoint);
        try {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.plugins.index.IndexUpdate indexUpdate = new org.apache.jackrabbit.oak.plugins.index.IndexUpdate(provider, name, after, builder, callback);
            org.apache.jackrabbit.oak.api.CommitFailedException exception = org.apache.jackrabbit.oak.spi.commit.EditorDiff.process(indexUpdate, before, after);
            if (exception != null) {
                throw exception;
            }
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(name, afterCheckpoint);
            if ((callback.isDirty()) || (before == (org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE))) {
                if (switchOnSync) {
                    reindexedDefinitions.addAll(indexUpdate.getReindexedDefinitions());
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
                }
            }else
                if (switchOnSync) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes detected after diff; will try to" + " switch to synchronous updates on {}"), reindexedDefinitions);
                    for (java.lang.String path : reindexedDefinitions) {
                        org.apache.jackrabbit.oak.spi.state.NodeBuilder c = builder;
                        for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) {
                            c = c.getChildNode(p);
                        }
                        if ((c.exists()) && (!(c.getBoolean(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_PROPERTY_NAME)))) {
                            c.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ASYNC_PROPERTY_NAME);
                        }
                    }
                    reindexedDefinitions.clear();
                }

            mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);
        } finally {
            callback.close();
        }
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
    }

    private void mergeWithConcurrencyCheck(org.apache.jackrabbit.oak.spi.state.NodeBuilder builder, final java.lang.String checkpoint, final long lease) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.spi.commit.CommitHook concurrentUpdateCheck = new org.apache.jackrabbit.oak.spi.commit.CommitHook() {
            @java.lang.Override
            @javax.annotation.Nonnull
            public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {
                org.apache.jackrabbit.oak.spi.state.NodeState async = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
                if ((com.google.common.base.Objects.equal(checkpoint, async.getString(name))) && (lease == (async.getLong(((name) + "-lease"))))) {
                    return after;
                }else {
                    throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
                }
            }
        };
        org.apache.jackrabbit.oak.spi.commit.CompositeHook hooks = new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), concurrentUpdateCheck);
        store.merge(builder, hooks, org.apache.jackrabbit.oak.spi.commit.CommitInfo.EMPTY);
    }

    private static void preAsyncRunStatsStats(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.start(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static void postAsyncRunStatsStatus(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.done(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static java.lang.String now() {
        return org.apache.jackrabbit.util.ISO8601.format(java.util.Calendar.getInstance());
    }

    public org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats getIndexStats() {
        return indexStats;
    }

    public boolean isFinished() {
        return (indexStats.getStatus()) == (org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE);
    }

    private static final class AsyncIndexStats implements org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean {
        private java.lang.String start = "";

        private java.lang.String done = "";

        private java.lang.String status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_INIT;

        public void start(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_RUNNING;
            start = now;
            done = "";
        }

        public void done(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE;
            start = "";
            done = now;
        }

        @java.lang.Override
        public java.lang.String getStart() {
            return start;
        }

        @java.lang.Override
        public java.lang.String getDone() {
            return done;
        }

        @java.lang.Override
        public java.lang.String getStatus() {
            return status;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return ((((("AsyncIndexStats [start=" + (start)) + ", done=") + (done)) + ", status=") + (status)) + "]";
        }
    }

    private static boolean noVisibleChanges(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
        return after.compareAgainstBaseState(before, new org.apache.jackrabbit.oak.spi.state.NodeStateDiff() {
            @java.lang.Override
            public boolean propertyAdded(org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyChanged(org.apache.jackrabbit.oak.api.PropertyState before, org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(before.getName());
            }

            @java.lang.Override
            public boolean childNodeAdded(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }

            @java.lang.Override
            public boolean childNodeChanged(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name)) || (after.compareAgainstBaseState(before, this));
            }

            @java.lang.Override
            public boolean childNodeDeleted(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }
        });
    }

    private static boolean isHidden(java.lang.String name) {
        return (name.charAt(0)) == ':';
    }
}
10:33:23.184 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:33:23.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:23.659 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (471 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.NullPointerException
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeState.compareAgainstBaseState(MemoryNodeState.java:119)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(AsyncIndexUpdate.java:308)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:148)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:33:25.401 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1138 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeState.compareAgainstBaseState(MemoryNodeState.java:119)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(AsyncIndexUpdate.java:308)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:148)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:25.404 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:25.405 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:25.405 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:25.405 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:197.
10:33:25.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
10:33:25.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:196 which is executed by 7 tests
-1844007872
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:170 which is executed by 8 tests
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:170
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:169 which is executed by 8 tests
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:169
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:167 which is executed by 8 tests
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:167
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:166 which is executed by 8 tests
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.document.DocumentStoreFixture$MongoFixture:166
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
10:33:25.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:284 which is executed by 9 tests
-1844007872
10:33:26.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:26.471 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (399 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:27.459 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (370 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:27.462 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:27.462 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:27.462 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:27.462 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:284.
10:33:27.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
10:33:27.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:174 which is executed by 9 tests
-1844007872
10:33:27.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
10:33:27.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:164 which is executed by 9 tests
-1844007872
10:33:28.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:28.545 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (420 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:29.504 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (373 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:29.507 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:29.507 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:29.508 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:29.508 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:164.
10:33:29.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:29.910 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (399 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:30.875 [pool-81-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (382 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:30.878 [pool-82-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:30.879 [pool-79-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:30.879 [pool-79-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:30.879 [pool-79-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:164.
10:33:30.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
10:33:30.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:163 which is executed by 9 tests
-1844007872
10:33:31.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:31.612 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (401 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:32.623 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (378 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:32.626 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:32.627 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:32.627 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:32.627 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:163.
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:156 which is executed by 9 tests
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:156
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:152 which is executed by 9 tests
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:152
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:142 which is executed by 9 tests
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:142
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:141 which is executed by 9 tests
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:141
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:137 which is executed by 9 tests
10:33:32.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:137
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:122 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:122
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.PooledConnectionProvider:121 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.PooledConnectionProvider:121
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:40 which is executed by 234 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:40
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:489 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:489
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:230 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:230
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:229 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:229
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:226 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:226
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:180 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:180
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions$Builder:179 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions$Builder:179
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:833 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:833
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:828 which is executed by 9 tests
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:828
10:33:32.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:776 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:776
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:760 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:760
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:536 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:536
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:519 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:519
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:502 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:502
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:486 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:486
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:151 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:151
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoOptions:150 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoOptions:150
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:91 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:91
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:68 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:68
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:67 which is executed by 9 tests
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:67
10:33:32.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:65 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:65
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:55 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:55
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultServer:53 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultServer:53
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterListenerAdapter:21 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterListenerAdapter:21
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterDescription:74 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterDescription:74
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$ToStringSerializer:151 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$ToStringSerializer:151
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$ToStringSerializer:150 which is executed by 9 tests
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$ToStringSerializer:150
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
10:33:32.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.MongoConnection:87 which is executed by 9 tests
1655673555
10:33:32.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
10:33:32.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.MongoConnection:86 which is executed by 9 tests
1655673555
10:33:33.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
10:33:33.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.MongoConnection:85 which is executed by 9 tests
1655673555
10:33:33.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
10:33:33.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.document.util.MongoConnection:67 which is executed by 9 tests
1655673555
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.AbstractCopyOnWriteMap$View$Type$1:575 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.AbstractCopyOnWriteMap$View$Type$1:575
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings:194 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings:194
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings:126 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings:126
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings:117 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings:117
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings:38 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings:38
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultDBDecoder$DefaultFactory:38 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultDBDecoder$DefaultFactory:38
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.CopyOnWriteMap$Builder:133 which is executed by 9 tests
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.CopyOnWriteMap$Builder:133
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
10:33:33.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoAuthority:207 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoAuthority:207
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoAuthority:180 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoAuthority:180
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoAuthority:161 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoAuthority:161
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoAuthority:74 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoAuthority:74
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoAuthority:64 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoAuthority:64
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:32 which is executed by 27 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:32
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:53 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:53
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:49 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:49
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:48 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:48
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:44 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:44
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:43 which is executed by 9 tests
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:43
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
10:33:33.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:39 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:39
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings$Builder:38 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings$Builder:38
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:844 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:844
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:650 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:650
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:649 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:649
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:630 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:630
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:619 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:619
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:618 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:618
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:616 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:616
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:615 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:615
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:612 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:612
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:558 which is executed by 9 tests
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:558
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
10:33:33.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:550 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:550
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:549 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:549
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:530 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:530
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:529 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:529
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:465 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:465
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:425 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:425
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:371 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:371
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:369 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:369
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:368 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:368
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:367 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:367
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:364 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:364
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Mongo:363 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Mongo:363
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:72 which is executed by 9 tests
10:33:33.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:72
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerMonitor:71 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerMonitor:71
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:63 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:63
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:62 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:62
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:61 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:61
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:60 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:60
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:51 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:51
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:48 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:48
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:47 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:47
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:46 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:46
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:44 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:44
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:42 which is executed by 9 tests
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:42
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
10:33:33.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener:41 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener:41
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Clusters:32 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Clusters:32
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Clusters:31 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Clusters:31
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.Clusters:29 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.Clusters:29
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolOpenedEvent:43 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolOpenedEvent:43
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:34 which is executed by 27 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:34
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:55 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:55
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:51 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:51
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:50 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:50
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:46 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:46
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:45 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:45
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:41 which is executed by 9 tests
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:41
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
10:33:33.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings$Builder:40 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings$Builder:40
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:832 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:832
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:816 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:816
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:794 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:794
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:780 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:780
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:766 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:766
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:752 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:752
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:738 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:738
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:724 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:724
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:712 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:712
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:698 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:698
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:687 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:687
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:675 which is executed by 9 tests
10:33:33.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:675
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:666 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:666
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:657 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:657
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:645 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:645
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:633 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:633
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:619 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:619
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:608 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:608
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:596 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:596
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:584 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:584
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:573 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:573
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:562 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:562
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:551 which is executed by 9 tests
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:551
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
10:33:33.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:537 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:537
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:523 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:523
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientOptions:510 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientOptions:510
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:70 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:70
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:67 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:67
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:66 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:66
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:61 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.management.jmx.JMXMBeanServer:61
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassAncestry:84 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassAncestry:84
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassAncestry:45 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassAncestry:45
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassAncestry:44 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassAncestry:44
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassAncestry:43 which is executed by 9 tests
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassAncestry:43
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
10:33:33.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassAncestry:41 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassAncestry:41
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultClusterableServerFactory:44 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultClusterableServerFactory:44
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultClusterableServerFactory:35 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultClusterableServerFactory:35
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultClusterableServerFactory:34 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultClusterableServerFactory:34
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:966 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:966
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:671 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:671
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:669 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:669
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:371 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:371
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:314 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:314
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:296 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:296
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:243 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:243
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DB:86 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DB:86
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.management.MBeanServerFactory:44 which is executed by 9 tests
10:33:33.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.management.MBeanServerFactory:44
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:165 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:165
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:164 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:164
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:163 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.JMXConnectionPoolListener$ClusterIdServerAddressPair:163
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:199 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:199
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:198 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:198
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:197 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:197
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:141 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:141
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:119 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:119
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:118 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:118
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #453
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:117 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:117
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #454
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:114 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:114
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #455
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:113 which is executed by 9 tests
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:113
10:33:33.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #456
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:110 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:110
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #457
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:108 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:108
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #458
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:107 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:107
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #459
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:106 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:106
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #460
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:105 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:105
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #461
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:104 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:104
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #462
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BaseCluster:101 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BaseCluster:101
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #463
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:51 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:51
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #464
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:59 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:59
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #465
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:57 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:57
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #466
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:56 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:56
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #467
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:55 which is executed by 9 tests
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:55
10:33:33.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #468
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap$ComputeFunction:54 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap$ComputeFunction:54
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #469
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.SocketSettings:31 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.SocketSettings:31
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #470
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolEvent:43 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolEvent:43
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #471
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:321 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:321
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #472
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:320 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:320
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #473
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:318 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:318
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #474
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:317 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:317
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #475
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:316 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:316
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #476
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:315 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:315
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #477
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:312 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:312
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #478
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:311 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:311
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #479
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:310 which is executed by 9 tests
10:33:33.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:310
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #480
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:309 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:309
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #481
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:306 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:306
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #482
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:305 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:305
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #483
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:304 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers$MapSerializer:304
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #484
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:39 which is executed by 72 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:39
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #485
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:92 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:92
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #486
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:77 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:77
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #487
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:76 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:76
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #488
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:72 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:72
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #489
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:71 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:71
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #490
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:67 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:67
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #491
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:66 which is executed by 9 tests
10:33:33.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:66
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #492
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:62 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:62
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #493
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:61 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:61
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #494
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:57 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:57
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #495
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:56 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:56
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #496
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:52 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:52
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #497
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings$Builder:51 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings$Builder:51
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #498
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoCredentialsStore:142 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoCredentialsStore:142
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #499
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterEvent:40 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterEvent:40
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #500
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:106 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:106
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #501
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:105 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:105
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #502
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:104 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:104
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #503
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:103 which is executed by 9 tests
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:103
10:33:33.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #504
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:102 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:102
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #505
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:101 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:101
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #506
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:100 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:100
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #507
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:99 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:99
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #508
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:98 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:98
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #509
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:97 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:97
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #510
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:96 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:96
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #511
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:95 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:95
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #512
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:94 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:94
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #513
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:93 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:93
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #514
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:92 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:92
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #515
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:91 which is executed by 9 tests
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:91
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #516
10:33:33.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:89 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:89
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #517
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:67 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:67
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #518
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:66 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:66
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #519
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:65 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:65
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #520
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:64 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:64
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #521
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:63 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:63
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #522
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSONSerializers:61 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSONSerializers:61
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #523
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.BSON:289 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.BSON:289
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #524
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.BSON:198 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.BSON:198
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #525
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.BSON:197 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.BSON:197
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #526
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:44 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:44
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #527
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:41 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:41
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #528
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:38 which is executed by 9 tests
10:33:33.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:38
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #529
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.Assertions:35 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.Assertions:35
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #530
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConcurrentLinkedDeque$Node:171 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConcurrentLinkedDeque$Node:171
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #531
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConcurrentLinkedDeque$Node:170 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConcurrentLinkedDeque$Node:170
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #532
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap:40 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap:40
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #533
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap:76 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap:76
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #534
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap:74 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap:74
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #535
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap:69 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap:69
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #536
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ClassMap:48 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ClassMap:48
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #537
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:44 which is executed by 36 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:44
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #538
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:106 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:106
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #539
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:86 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:86
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #540
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:85 which is executed by 9 tests
10:33:33.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:85
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #541
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:75 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:75
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #542
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:74 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:74
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #543
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:64 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:64
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #544
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:63 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:63
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #545
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ClusterSettings$Builder:62 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ClusterSettings$Builder:62
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #546
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings:117 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings:117
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #547
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings:113 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings:113
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #548
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings:101 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings:101
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #549
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings:97 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings:97
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #550
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ConnectionPoolSettings:36 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ConnectionPoolSettings:36
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #551
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:625 which is executed by 9 tests
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:625
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #552
10:33:33.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:616 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:616
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #553
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:587 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:587
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #554
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:578 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:578
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #555
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:529 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:529
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #556
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:522 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:522
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #557
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:512 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:512
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #558
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:507 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:507
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #559
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:502 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:502
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #560
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:495 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:495
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #561
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:490 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:490
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #562
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:478 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:478
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #563
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:477 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:477
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #564
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:476 which is executed by 9 tests
10:33:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:476
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #565
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:474 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:474
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #566
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:468 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:468
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #567
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:467 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:467
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #568
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:466 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:466
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #569
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:417 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:417
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #570
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:416 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:416
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #571
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:411 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:411
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #572
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:393 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:393
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #573
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:392 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:392
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #574
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:391 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:391
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #575
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:390 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:390
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #576
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:388 which is executed by 9 tests
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:388
10:33:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #577
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:387 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:387
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #578
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:386 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:386
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #579
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:385 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:385
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #580
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:381 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:381
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #581
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:366 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:366
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #582
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:365 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:365
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #583
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:364 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:364
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #584
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:363 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:363
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #585
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:361 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:361
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #586
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:360 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:360
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #587
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:359 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:359
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #588
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:358 which is executed by 9 tests
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:358
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #589
10:33:33.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:357 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:357
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #590
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:353 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:353
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #591
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:349 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:349
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #592
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:346 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:346
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #593
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:344 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:344
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #594
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:343 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:343
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #595
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:313 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:313
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #596
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:312 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:312
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #597
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:311 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:311
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #598
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:310 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:310
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #599
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:307 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:307
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #600
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoClientURI:302 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoClientURI:302
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #601
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultDBEncoder$DefaultFactory:46 which is executed by 9 tests
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultDBEncoder$DefaultFactory:46
10:33:33.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #602
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DefaultDBEncoder$DefaultFactory:41 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DefaultDBEncoder$DefaultFactory:41
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #603
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings:66 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings:66
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #604
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerSettings:29 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerSettings:29
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #605
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:80 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:80
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #606
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:79 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:79
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #607
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:76 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:76
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #608
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:73 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:73
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #609
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:70 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:70
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #610
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:69 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:69
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #611
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:68 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:68
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #612
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:67 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:67
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #613
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:65 which is executed by 9 tests
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:65
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #614
10:33:33.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:62 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:62
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #615
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:57 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:57
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #616
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:55 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:55
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #617
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:45 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:45
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #618
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:44 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.ClassMapBasedObjectSerializer:44
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #619
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:104 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:104
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #620
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:103 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:103
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #621
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:51 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:51
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #622
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:50 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:50
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #623
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:48 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:48
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #624
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:47 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:47
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #625
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:46 which is executed by 9 tests
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:46
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #626
10:33:33.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:44 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:44
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #627
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:43 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:43
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #628
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:42 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:42
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #629
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.bson.util.ComputingMap:29 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.bson.util.ComputingMap:29
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #630
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ReadPreference$PrimaryReadPreference:70 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ReadPreference$PrimaryReadPreference:70
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #631
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:124 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:124
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #632
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:123 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:123
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #633
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:121 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:121
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #634
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:118 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:118
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #635
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:116 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:116
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #636
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:114 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:114
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #637
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:112 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:112
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #638
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:110 which is executed by 9 tests
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:110
10:33:33.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #639
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:108 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:108
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #640
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:106 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:106
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #641
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:105 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:105
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #642
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:104 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:104
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #643
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:103 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:103
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #644
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:56 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:56
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #645
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:55 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:55
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #646
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:41 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:41
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #647
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:40 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:40
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #648
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.util.JSON:39 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.util.JSON:39
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #649
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:212 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:212
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #650
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:176 which is executed by 9 tests
10:33:33.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:176
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #651
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:168 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:168
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #652
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:160 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:160
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #653
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:159 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:159
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #654
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ServerAddress:158 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ServerAddress:158
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #655
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:573 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:573
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #656
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:549 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:549
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #657
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:489 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:489
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #658
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:373 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:373
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #659
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:370 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:370
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #660
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:367 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:367
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #661
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:364 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:364
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #662
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:361 which is executed by 9 tests
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:361
10:33:33.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #663
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:358 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:358
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #664
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:329 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:329
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #665
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:327 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:327
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #666
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:326 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:326
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #667
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:325 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:325
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #668
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:321 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:321
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #669
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.WriteConcern:319 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.WriteConcern:319
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #670
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoURI:208 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoURI:208
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #671
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoURI:199 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoURI:199
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #672
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.MongoURI:174 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.MongoURI:174
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #673
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:569 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:569
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #674
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:568 which is executed by 9 tests
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:568
10:33:33.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #675
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:400 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:400
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #676
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:396 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:396
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #677
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:364 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:364
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #678
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:363 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:363
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #679
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:90 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:90
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #680
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:72 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:72
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #681
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:71 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:71
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #682
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:69 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:69
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #683
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.DBTCPConnector:67 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.DBTCPConnector:67
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #684
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.BasicDBObject:83 which is executed by 9 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.BasicDBObject:83
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #685
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:108 which is executed by 346 tests
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:108
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #686
10:33:33.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:107 which is executed by 346 tests
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:107
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #687
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:106 which is executed by 346 tests
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:106
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #688
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:103 which is executed by 346 tests
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:103
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #689
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:101 which is executed by 346 tests
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:101
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #690
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.h2.store.WriterThread:99 which is executed by 346 tests
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.h2.store.WriterThread:99
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #691
10:33:33.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:342 which is executed by 10 tests
-1844007872
10:33:34.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #692
10:33:34.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:341 which is executed by 10 tests
-1844007872
10:33:34.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:35.064 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (427 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:36.008 [pool-89-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (371 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:36.011 [pool-90-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:36.011 [pool-87-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:36.011 [pool-87-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:36.012 [pool-87-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:341.
10:33:36.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #693
10:33:36.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:309 which is executed by 10 tests
-1844007872
10:33:36.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #694
10:33:36.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:308 which is executed by 10 tests
-1844007872
10:33:36.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:37.072 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:38.039 [pool-93-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (372 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:38.042 [pool-94-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:38.042 [pool-91-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:38.042 [pool-91-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:38.042 [pool-91-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:308.
10:33:38.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #695
10:33:38.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:306 which is executed by 11 tests
-1844007872
10:33:38.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #696
10:33:38.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:305 which is executed by 10 tests
-1844007872
10:33:38.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:39.137 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (400 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:40.109 [pool-97-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:40.112 [pool-98-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:40.112 [pool-95-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:40.112 [pool-95-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:40.112 [pool-95-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:305.
10:33:40.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #697
10:33:40.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:303 which is executed by 10 tests
-1844007872
10:33:40.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:40.846 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:41.844 [pool-101-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (371 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:41.847 [pool-102-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:41.847 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:41.847 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:41.847 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:303.
10:33:41.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #698
10:33:41.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:280 which is executed by 10 tests
-1844007872
10:33:42.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:42.719 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (405 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:43.683 [pool-105-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (373 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:43.686 [pool-106-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:43.687 [pool-103-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:43.687 [pool-103-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:43.687 [pool-103-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:280.
10:33:43.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:44.093 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (403 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:45.126 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (436 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:45.129 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:45.129 [pool-107-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:45.129 [pool-107-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:45.129 [pool-107-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:280.
10:33:45.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #699
10:33:45.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:279 which is executed by 10 tests
-1844007872
10:33:45.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:45.865 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:46.849 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (385 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:46.852 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:46.852 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:46.852 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:46.852 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:279.
10:33:46.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:47.259 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (404 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:48.225 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (378 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:48.228 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:48.228 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:48.228 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:48.229 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:279.
10:33:48.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #700
10:33:48.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:278 which is executed by 10 tests
-1844007872
10:33:48.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:49.016 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (410 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:49.978 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:49.981 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:49.981 [pool-119-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:49.982 [pool-119-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:49.982 [pool-119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:278.
10:33:49.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #701
10:33:49.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:237 which is executed by 10 tests
-1844007872
10:33:50.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:50.717 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (405 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:51.662 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:51.665 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:51.665 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:51.665 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:51.666 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:237.
10:33:51.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #702
10:33:51.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:229 which is executed by 10 tests
-1844007872
10:33:51.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:52.452 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (459 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:54.248 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1227 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:54.252 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:54.252 [pool-127-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:54.252 [pool-127-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:54.252 [pool-127-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:229.
10:33:54.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:54.662 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (404 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:55.639 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (378 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:55.642 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:55.642 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:55.642 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:55.642 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:229.
10:33:55.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #703
10:33:55.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:372 which is executed by 10 tests
-1844007872
10:33:55.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #704
10:33:55.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:371 which is executed by 10 tests
-1844007872
10:33:56.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:56.703 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:57.692 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (416 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:57.695 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:57.695 [pool-135-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:57.695 [pool-135-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:57.695 [pool-135-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:371.
10:33:57.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #705
10:33:57.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:370 which is executed by 10 tests
-1844007872
10:33:58.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:58.431 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:59.376 [pool-141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:59.379 [pool-142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:59.379 [pool-139-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:59.379 [pool-139-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:33:59.379 [pool-139-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:370.
10:33:59.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #706
10:33:59.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:369 which is executed by 10 tests
-1844007872
10:33:59.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:00.116 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:01.057 [pool-145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (377 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:01.060 [pool-146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:01.060 [pool-143-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:01.060 [pool-143-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:01.060 [pool-143-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncIndexStats:369.
10:34:01.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #707
10:34:01.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:122 which is executed by 10 tests
-1844007872
10:34:01.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #708
10:34:01.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate$AsyncUpdateCallback:151 which is executed by 10 tests
-1844007872
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #709
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ReadPreference:179 which is executed by 10 tests
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ReadPreference:179
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #710
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.mongodb.ReadPreference$PrimaryReadPreference:95 which is executed by 10 tests
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.mongodb.ReadPreference$PrimaryReadPreference:95
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #711
10:34:01.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:231 which is executed by 11 tests
-2081026674
10:34:02.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #712
10:34:02.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:75 which is executed by 11 tests
-2081026674
10:34:02.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:02.804 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (409 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:03.300 [pool-147-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractNodeState.java:41: error: missing return statement
    }
    ^
10:34:03.304 [pool-147-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractNodeState implements org.apache.jackrabbit.oak.spi.state.NodeState {
    public static boolean isValidName(java.lang.String name) {
        return ((name != null) && (!(name.isEmpty()))) && ((name.indexOf('/')) == (-1));
    }

    public static void checkValidName(java.lang.String name) throws java.lang.IllegalArgumentException {
        if (!(org.apache.jackrabbit.oak.spi.state.AbstractNodeState.isValidName(name))) {
            throw new java.lang.IllegalArgumentException(("Invalid name: " + name));
        }
    }

    public static boolean getBoolean(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        return ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.BOOLEAN))) && (property.getValue(org.apache.jackrabbit.oak.api.Type.BOOLEAN));
    }

    public static long getLong(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.LONG))) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(42).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("property",property);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("name",name);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("state",state);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectionEnds();
            }
            if (runtimeAngelicValue)
                return property.getValue(org.apache.jackrabbit.oak.api.Type.LONG);

        }else {
            return 0;
        }
    }

    public static java.lang.String getString(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.STRING))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.STRING);
        }else {
            return null;
        }
    }

    public static java.lang.Iterable<java.lang.String> getStrings(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.STRINGS))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS);
        }else {
            return java.util.Collections.emptyList();
        }
    }

    public static java.lang.String getName(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.NAME))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.NAME);
        }else {
            return null;
        }
    }

    public static java.lang.Iterable<java.lang.String> getNames(org.apache.jackrabbit.oak.spi.state.NodeState state, java.lang.String name) {
        org.apache.jackrabbit.oak.api.PropertyState property = state.getProperty(name);
        if ((property != null) && ((property.getType()) == (org.apache.jackrabbit.oak.api.Type.NAMES))) {
            return property.getValue(org.apache.jackrabbit.oak.api.Type.NAMES);
        }else {
            return java.util.Collections.emptyList();
        }
    }

    public static boolean compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState state, org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        if (!(org.apache.jackrabbit.oak.spi.state.AbstractNodeState.comparePropertiesAgainstBaseState(state, base, diff))) {
            return false;
        }
        java.util.Set<java.lang.String> baseChildNodes = new java.util.HashSet<java.lang.String>();
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry beforeCNE : base.getChildNodeEntries()) {
            java.lang.String name = beforeCNE.getName();
            org.apache.jackrabbit.oak.spi.state.NodeState beforeChild = beforeCNE.getNodeState();
            org.apache.jackrabbit.oak.spi.state.NodeState afterChild = state.getChildNode(name);
            if (!(afterChild.exists())) {
                if (!(diff.childNodeDeleted(name, beforeChild))) {
                    return false;
                }
            }else {
                baseChildNodes.add(name);
                if (afterChild != beforeChild) {
                    if (!(diff.childNodeChanged(name, beforeChild, afterChild))) {
                        return false;
                    }
                }
            }
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry afterChild : state.getChildNodeEntries()) {
            java.lang.String name = afterChild.getName();
            if (!(baseChildNodes.contains(name))) {
                if (!(diff.childNodeAdded(name, afterChild.getNodeState()))) {
                    return false;
                }
            }
        }
        return true;
    }

    public static boolean comparePropertiesAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState state, org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        java.util.Set<java.lang.String> baseProperties = new java.util.HashSet<java.lang.String>();
        for (org.apache.jackrabbit.oak.api.PropertyState beforeProperty : base.getProperties()) {
            java.lang.String name = beforeProperty.getName();
            org.apache.jackrabbit.oak.api.PropertyState afterProperty = state.getProperty(name);
            if (afterProperty == null) {
                if (!(diff.propertyDeleted(beforeProperty))) {
                    return false;
                }
            }else {
                baseProperties.add(name);
                if (!(beforeProperty.equals(afterProperty))) {
                    if (!(diff.propertyChanged(beforeProperty, afterProperty))) {
                        return false;
                    }
                }
            }
        }
        for (org.apache.jackrabbit.oak.api.PropertyState afterProperty : state.getProperties()) {
            if (!(baseProperties.contains(afterProperty.getName()))) {
                if (!(diff.propertyAdded(afterProperty))) {
                    return false;
                }
            }
        }
        return true;
    }

    public static java.lang.String toString(org.apache.jackrabbit.oak.spi.state.NodeState state) {
        if (!(state.exists())) {
            return "{N/A}";
        }
        java.lang.StringBuilder builder = new java.lang.StringBuilder("{");
        java.lang.String separator = " ";
        for (org.apache.jackrabbit.oak.api.PropertyState property : state.getProperties()) {
            builder.append(separator);
            separator = ", ";
            builder.append(property);
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry entry : state.getChildNodeEntries()) {
            builder.append(separator);
            separator = ", ";
            builder.append(entry);
        }
        builder.append(" }");
        return builder.toString();
    }

    @java.lang.Override
    public boolean hasProperty(java.lang.String name) {
        return (getProperty(name)) != null;
    }

    @java.lang.Override
    public boolean getBoolean(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getBoolean(this, name);
    }

    @java.lang.Override
    public long getLong(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(this, name);
    }

    @java.lang.Override
    public java.lang.String getString(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getString(this, name);
    }

    @java.lang.Override
    public java.lang.Iterable<java.lang.String> getStrings(java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getStrings(this, name);
    }

    @java.lang.Override
    @javax.annotation.CheckForNull
    public java.lang.String getName(@javax.annotation.Nonnull
    java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getName(this, name);
    }

    @java.lang.Override
    @javax.annotation.Nonnull
    public java.lang.Iterable<java.lang.String> getNames(@javax.annotation.Nonnull
    java.lang.String name) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getNames(this, name);
    }

    @java.lang.Override
    public org.apache.jackrabbit.oak.api.PropertyState getProperty(java.lang.String name) {
        for (org.apache.jackrabbit.oak.api.PropertyState property : getProperties()) {
            if (name.equals(property.getName())) {
                return property;
            }
        }
        return null;
    }

    @java.lang.Override
    public long getPropertyCount() {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.count(getProperties());
    }

    @java.lang.Override
    public long getChildNodeCount(long max) {
        long n = 0;
        java.util.Iterator<?> iterator = getChildNodeEntries().iterator();
        while (iterator.hasNext()) {
            iterator.next();
            n++;
            if (n >= max) {
                return java.lang.Long.MAX_VALUE;
            }
        } 
        return n;
    }

    @java.lang.Override
    public java.lang.Iterable<java.lang.String> getChildNodeNames() {
        return com.google.common.collect.Iterables.transform(getChildNodeEntries(), new com.google.common.base.Function<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry, java.lang.String>() {
            @java.lang.Override
            public java.lang.String apply(org.apache.jackrabbit.oak.spi.state.ChildNodeEntry input) {
                return input.getName();
            }
        });
    }

    @java.lang.Override
    public boolean compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState base, org.apache.jackrabbit.oak.spi.state.NodeStateDiff diff) {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.compareAgainstBaseState(this, base, diff);
    }

    public java.lang.String toString() {
        return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.toString(this);
    }

    @java.lang.Override
    public boolean equals(java.lang.Object that) {
        if ((this) == that) {
            return true;
        }else
            if (that instanceof org.apache.jackrabbit.oak.spi.state.NodeState) {
                return org.apache.jackrabbit.oak.spi.state.AbstractNodeState.equals(this, ((org.apache.jackrabbit.oak.spi.state.NodeState) (that)));
            }else {
                return false;
            }

    }

    public static boolean equals(org.apache.jackrabbit.oak.spi.state.NodeState a, org.apache.jackrabbit.oak.spi.state.NodeState b) {
        if (((a.exists()) != (b.exists())) || ((a.getPropertyCount()) != (b.getPropertyCount()))) {
            return false;
        }
        long max = 20;
        long c1 = a.getChildNodeCount(max);
        long c2 = b.getChildNodeCount(max);
        if ((c1 <= max) || (c2 <= max)) {
            if (c1 != c2) {
                return false;
            }
        }else
            if ((c1 != (java.lang.Long.MAX_VALUE)) && (c2 != (java.lang.Long.MAX_VALUE))) {
                if (c1 != c2) {
                    return false;
                }
            }

        for (org.apache.jackrabbit.oak.api.PropertyState property : a.getProperties()) {
            if (!(property.equals(b.getProperty(property.getName())))) {
                return false;
            }
        }
        c1 = a.getChildNodeCount(java.lang.Long.MAX_VALUE);
        c2 = b.getChildNodeCount(java.lang.Long.MAX_VALUE);
        if (c1 != c2) {
            return false;
        }
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry entry : a.getChildNodeEntries()) {
            if (!(entry.getNodeState().equals(b.getChildNode(entry.getName())))) {
                return false;
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        return 0;
    }

    protected static long count(java.lang.Iterable<?> iterable) {
        long n = 0;
        java.util.Iterator<?> iterator = iterable.iterator();
        while (iterator.hasNext()) {
            iterator.next();
            n++;
        } 
        return n;
    }
}
10:34:03.304 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:34:03.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #713
10:34:03.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:74 which is executed by 11 tests
-2081026674
10:34:03.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:04.033 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:04.983 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (430 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(AbstractNodeState.java:37)
    at org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(AbstractNodeState.java:172)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:186)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:04.985 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(AbstractNodeState.java:37)
    at org.apache.jackrabbit.oak.spi.state.AbstractNodeState.getLong(AbstractNodeState.java:172)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:186)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:34:04.986 [pool-149-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:04.986 [pool-149-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:04.986 [pool-149-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:74.
10:34:04.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #714
10:34:04.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:73 which is executed by 11 tests
-2081026674
10:34:05.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #715
10:34:05.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:200 which is executed by 11 tests
1584068575
10:34:05.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #716
10:34:05.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:195 which is executed by 11 tests
1584068575
10:34:05.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #717
10:34:05.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:194 which is executed by 11 tests
1584068575
10:34:06.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:06.670 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:07.545 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (359 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:07.571 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:07.571 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:07.571 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:07.571 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:194.
10:34:07.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #718
10:34:07.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:193 which is executed by 11 tests
1584068575
10:34:07.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #719
10:34:07.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:192 which is executed by 11 tests
1584068575
10:34:08.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:08.662 [pool-158-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (409 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:09.560 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (379 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:09.563 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:09.563 [pool-157-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:09.563 [pool-157-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:09.563 [pool-157-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore:192.
10:34:09.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #720
10:34:09.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:345 which is executed by 11 tests
-1844007872
10:34:09.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #721
10:34:09.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:338 which is executed by 11 tests
-1844007872
10:34:10.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #722
10:34:10.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:337 which is executed by 11 tests
-1844007872
10:34:10.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:10.942 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (409 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:11.931 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (430 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:11.934 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:11.934 [pool-161-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:11.934 [pool-161-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:11.934 [pool-161-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:337.
10:34:11.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #723
10:34:11.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:334 which is executed by 11 tests
-1844007872
10:34:12.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #724
10:34:12.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:333 which is executed by 11 tests
-1844007872
10:34:12.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:13.008 [pool-166-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:13.970 [pool-167-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:13.984 [pool-168-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:13.985 [pool-165-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:13.985 [pool-165-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:13.985 [pool-165-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:333.
10:34:13.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #725
10:34:13.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:329 which is executed by 11 tests
-1844007872
10:34:14.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #726
10:34:14.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:314 which is executed by 11 tests
-1844007872
10:34:14.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #727
10:34:14.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:274 which is executed by 11 tests
-1844007872
10:34:14.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:15.380 [pool-170-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (410 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:16.392 [pool-171-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (389 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:16.394 [pool-172-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:16.395 [pool-169-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:16.395 [pool-169-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:16.395 [pool-169-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:274.
10:34:16.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:16.806 [pool-174-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:17.764 [pool-175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.updateIndex(AsyncIndexUpdate.java:203)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:132)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:34:17.766 [pool-176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.updateIndex(AsyncIndexUpdate.java:203)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:132)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:34:17.766 [pool-173-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:17.766 [pool-173-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:17.767 [pool-173-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:274.
10:34:17.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #728
10:34:17.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:273 which is executed by 11 tests
-1844007872
10:34:18.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #729
10:34:18.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:272 which is executed by 11 tests
-1844007872
10:34:18.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #730
10:34:18.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:270 which is executed by 11 tests
-1844007872
10:34:18.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #731
10:34:18.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:268 which is executed by 11 tests
-1844007872
10:34:19.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #732
10:34:19.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:265 which is executed by 11 tests
-1844007872
10:34:19.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #733
10:34:19.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:261 which is executed by 11 tests
-1844007872
10:34:19.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:20.170 [pool-178-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (411 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:21.123 [pool-179-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:21.126 [pool-180-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:21.126 [pool-177-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:21.127 [pool-177-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:21.127 [pool-177-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:261.
10:34:21.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #734
10:34:21.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:254 which is executed by 11 tests
-1844007872
10:34:21.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #735
10:34:21.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:226 which is executed by 11 tests
-1844007872
10:34:21.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:22.194 [pool-182-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (420 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:23.174 [pool-183-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (359 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:23.200 [pool-184-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:23.200 [pool-181-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:23.201 [pool-181-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:23.201 [pool-181-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:226.
10:34:23.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #736
10:34:23.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:224 which is executed by 11 tests
-1844007872
10:34:23.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #737
10:34:23.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:218 which is executed by 11 tests
-1844007872
10:34:23.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:24.261 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (414 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:25.202 [pool-187-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (382 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:25.205 [pool-188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:25.205 [pool-185-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:25.205 [pool-185-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:25.205 [pool-185-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:218.
10:34:25.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:25.617 [pool-190-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (409 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:26.558 [pool-191-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (382 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:26.560 [pool-192-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:386)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:26.560 [pool-189-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:26.560 [pool-189-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:26.560 [pool-189-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:218.
10:34:26.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #738
10:34:26.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:217 which is executed by 11 tests
-1844007872
10:34:26.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #739
10:34:26.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:216 which is executed by 11 tests
-1844007872
10:34:27.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #740
10:34:27.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:212 which is executed by 11 tests
-1844007872
10:34:27.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:28.004 [pool-194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:28.551 [pool-193-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AsyncIndexUpdate.java:166: error: variable before might not have been initialized
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
                        ^
10:34:28.599 [pool-193-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class AsyncIndexUpdate implements java.lang.Runnable {
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.class);

    static final java.lang.String ASYNC = ":async";

    private static final long DEFAULT_LIFETIME = java.util.concurrent.TimeUnit.DAYS.toMillis(1000);

    private static final org.apache.jackrabbit.oak.api.CommitFailedException CONCURRENT_UPDATE = new org.apache.jackrabbit.oak.api.CommitFailedException("Async", 1, "Concurrent update detected");

    private static final int ASYNC_TIMEOUT = 15;

    private final java.lang.String name;

    private final org.apache.jackrabbit.oak.spi.state.NodeStore store;

    private final org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider;

    private final long lifetime = org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME;

    private boolean failing = false;

    private final org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats indexStats = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats();

    private final boolean switchOnSync;

    private final java.util.Set<java.lang.String> reindexedDefinitions = new java.util.HashSet<java.lang.String>();

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider, boolean switchOnSync) {
        this.name = com.google.common.base.Preconditions.checkNotNull(name);
        this.store = com.google.common.base.Preconditions.checkNotNull(store);
        this.provider = com.google.common.base.Preconditions.checkNotNull(provider);
        this.switchOnSync = switchOnSync;
    }

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider) {
        this(name, store, provider, false);
    }

    private class AsyncUpdateCallback implements org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback {
        private final java.lang.String checkpoint;

        private long lease;

        private long updates = 0;

        public AsyncUpdateCallback(java.lang.String checkpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
            long now = java.lang.System.currentTimeMillis();
            this.checkpoint = checkpoint;
            this.lease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
            java.lang.String leaseName = (name) + "-lease";
            org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
            long beforeLease = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getLong(leaseName);
            if (beforeLease > now) {
                throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
            }
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = root.builder();
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(leaseName, lease);
            mergeWithConcurrencyCheck(builder, checkpoint, beforeLease);
        }

        boolean isDirty() {
            return (updates) > 0;
        }

        void close() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.spi.state.NodeBuilder async = builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
            async.removeProperty(((name) + "-lease"));
            mergeWithConcurrencyCheck(builder, async.getString(name), lease);
        }

        @java.lang.Override
        public void indexUpdate() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            (updates)++;
            if (((updates) % 100) == 0) {
                long now = java.lang.System.currentTimeMillis();
                if ((now + (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT)) > (lease)) {
                    long newLease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
                    org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
                    builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(((name) + "-lease"), newLease);
                    mergeWithConcurrencyCheck(builder, checkpoint, lease);
                    lease = newLease;
                }
            }
        }
    }

    @java.lang.Override
    public synchronized void run() {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Running background index task {}", name);
        org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
        org.apache.jackrabbit.oak.spi.state.NodeState async = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
        if ((async.getLong(((name) + "-lease"))) > (java.lang.System.currentTimeMillis())) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("Another copy of the {} index update is already running;" + " skipping this update"), name);
            return;
        }
        org.apache.jackrabbit.oak.spi.state.NodeState before;
        java.lang.String beforeCheckpoint = async.getString(name);
        if (beforeCheckpoint != null) {
            org.apache.jackrabbit.oak.spi.state.NodeState state = store.retrieve(beforeCheckpoint);
            if (state == null) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Failed to retrieve previously indexed checkpoint {};" + " re-running the initial {} index update"), beforeCheckpoint, name);
                beforeCheckpoint = null;
                before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
            }else
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(state, root)) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes since last checkpoint;" + " skipping the {} index update"), name);
                    return;
                }else {
                    before = state;
                }

        }else {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Initial {} index update", name);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(54).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("beforeCheckpoint",beforeCheckpoint);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("async",async);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("root",root);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT);} catch (Exception ex1) {ex1.printStackTrace();};
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats!=null) {
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus());} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone());} catch (Exception ex1) {ex1.printStackTrace();};
                }
                fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(54).collectionEnds();
            }
            if (runtimeAngelicValue)
                before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;

        }
        java.lang.String afterCheckpoint = store.checkpoint(lifetime);
        org.apache.jackrabbit.oak.spi.state.NodeState after = store.retrieve(afterCheckpoint);
        if (after == null) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Unable to retrieve newly created checkpoint {}," + " skipping the {} index update"), afterCheckpoint, name);
            return;
        }
        java.lang.String checkpointToRelease = afterCheckpoint;
        try {
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
            if (failing) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Index update {} no longer fails", name);
                failing = false;
            }
            checkpointToRelease = beforeCheckpoint;
        } catch (org.apache.jackrabbit.oak.api.CommitFailedException e) {
            if (e == (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE)) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Concurrent update detected in the {} index update", name);
            }else
                if (failing) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("The {} index update is still failing", name, e);
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn("The {} index update failed", name, e);
                    failing = true;
                }

        } finally {
            if (checkpointToRelease != null) {
                store.release(checkpointToRelease);
            }
        }
    }

    private void updateIndex(org.apache.jackrabbit.oak.spi.state.NodeState before, java.lang.String beforeCheckpoint, org.apache.jackrabbit.oak.spi.state.NodeState after, java.lang.String afterCheckpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.preAsyncRunStatsStats(indexStats);
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback callback = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback(beforeCheckpoint);
        try {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.plugins.index.IndexUpdate indexUpdate = new org.apache.jackrabbit.oak.plugins.index.IndexUpdate(provider, name, after, builder, callback);
            org.apache.jackrabbit.oak.api.CommitFailedException exception = org.apache.jackrabbit.oak.spi.commit.EditorDiff.process(indexUpdate, before, after);
            if (exception != null) {
                throw exception;
            }
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(name, afterCheckpoint);
            if ((callback.isDirty()) || (before == (org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE))) {
                if (switchOnSync) {
                    reindexedDefinitions.addAll(indexUpdate.getReindexedDefinitions());
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
                }
            }else
                if (switchOnSync) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes detected after diff; will try to" + " switch to synchronous updates on {}"), reindexedDefinitions);
                    for (java.lang.String path : reindexedDefinitions) {
                        org.apache.jackrabbit.oak.spi.state.NodeBuilder c = builder;
                        for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) {
                            c = c.getChildNode(p);
                        }
                        if ((c.exists()) && (!(c.getBoolean(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_PROPERTY_NAME)))) {
                            c.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ASYNC_PROPERTY_NAME);
                        }
                    }
                    reindexedDefinitions.clear();
                }

            mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);
        } finally {
            callback.close();
        }
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
    }

    private void mergeWithConcurrencyCheck(org.apache.jackrabbit.oak.spi.state.NodeBuilder builder, final java.lang.String checkpoint, final long lease) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.spi.commit.CommitHook concurrentUpdateCheck = new org.apache.jackrabbit.oak.spi.commit.CommitHook() {
            @java.lang.Override
            @javax.annotation.Nonnull
            public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {
                org.apache.jackrabbit.oak.spi.state.NodeState async = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
                if ((com.google.common.base.Objects.equal(checkpoint, async.getString(name))) && (lease == (async.getLong(((name) + "-lease"))))) {
                    return after;
                }else {
                    throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
                }
            }
        };
        org.apache.jackrabbit.oak.spi.commit.CompositeHook hooks = new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), concurrentUpdateCheck);
        store.merge(builder, hooks, org.apache.jackrabbit.oak.spi.commit.CommitInfo.EMPTY);
    }

    private static void preAsyncRunStatsStats(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.start(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static void postAsyncRunStatsStatus(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.done(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static java.lang.String now() {
        return org.apache.jackrabbit.util.ISO8601.format(java.util.Calendar.getInstance());
    }

    public org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats getIndexStats() {
        return indexStats;
    }

    public boolean isFinished() {
        return (indexStats.getStatus()) == (org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE);
    }

    private static final class AsyncIndexStats implements org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean {
        private java.lang.String start = "";

        private java.lang.String done = "";

        private java.lang.String status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_INIT;

        public void start(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_RUNNING;
            start = now;
            done = "";
        }

        public void done(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE;
            start = "";
            done = now;
        }

        @java.lang.Override
        public java.lang.String getStart() {
            return start;
        }

        @java.lang.Override
        public java.lang.String getDone() {
            return done;
        }

        @java.lang.Override
        public java.lang.String getStatus() {
            return status;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return ((((("AsyncIndexStats [start=" + (start)) + ", done=") + (done)) + ", status=") + (status)) + "]";
        }
    }

    private static boolean noVisibleChanges(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
        return after.compareAgainstBaseState(before, new org.apache.jackrabbit.oak.spi.state.NodeStateDiff() {
            @java.lang.Override
            public boolean propertyAdded(org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyChanged(org.apache.jackrabbit.oak.api.PropertyState before, org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(before.getName());
            }

            @java.lang.Override
            public boolean childNodeAdded(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }

            @java.lang.Override
            public boolean childNodeChanged(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name)) || (after.compareAgainstBaseState(before, this));
            }

            @java.lang.Override
            public boolean childNodeDeleted(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }
        });
    }

    private static boolean isHidden(java.lang.String name) {
        return (name.charAt(0)) == ':';
    }
}
10:34:28.599 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:34:28.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #741
10:34:28.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:211 which is executed by 11 tests
-1844007872
10:34:28.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:29.336 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (411 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:30.353 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (462 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:30.358 [pool-198-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:30.358 [pool-195-thread-1] DEBUG tests.output - Failing tests with false: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:30.358 [pool-195-thread-1] DEBUG tests.output - Failing tests with true: 
[recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest): null]
10:34:30.358 [pool-195-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:211.
10:34:30.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #742
10:34:30.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:195 which is executed by 11 tests
-1844007872
10:34:30.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:31.104 [pool-200-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:31.651 [pool-199-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AsyncIndexUpdate.java:166: error: variable before might not have been initialized
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
                        ^
10:34:31.699 [pool-199-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class AsyncIndexUpdate implements java.lang.Runnable {
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.class);

    static final java.lang.String ASYNC = ":async";

    private static final long DEFAULT_LIFETIME = java.util.concurrent.TimeUnit.DAYS.toMillis(1000);

    private static final org.apache.jackrabbit.oak.api.CommitFailedException CONCURRENT_UPDATE = new org.apache.jackrabbit.oak.api.CommitFailedException("Async", 1, "Concurrent update detected");

    private static final int ASYNC_TIMEOUT = 15;

    private final java.lang.String name;

    private final org.apache.jackrabbit.oak.spi.state.NodeStore store;

    private final org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider;

    private final long lifetime = org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME;

    private boolean failing = false;

    private final org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats indexStats = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats();

    private final boolean switchOnSync;

    private final java.util.Set<java.lang.String> reindexedDefinitions = new java.util.HashSet<java.lang.String>();

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider, boolean switchOnSync) {
        this.name = com.google.common.base.Preconditions.checkNotNull(name);
        this.store = com.google.common.base.Preconditions.checkNotNull(store);
        this.provider = com.google.common.base.Preconditions.checkNotNull(provider);
        this.switchOnSync = switchOnSync;
    }

    public AsyncIndexUpdate(@javax.annotation.Nonnull
    java.lang.String name, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.spi.state.NodeStore store, @javax.annotation.Nonnull
    org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider provider) {
        this(name, store, provider, false);
    }

    private class AsyncUpdateCallback implements org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback {
        private final java.lang.String checkpoint;

        private long lease;

        private long updates = 0;

        public AsyncUpdateCallback(java.lang.String checkpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
            long now = java.lang.System.currentTimeMillis();
            this.checkpoint = checkpoint;
            this.lease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
            java.lang.String leaseName = (name) + "-lease";
            org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
            long beforeLease = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).getLong(leaseName);
            if (beforeLease > now) {
                throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
            }
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = root.builder();
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(leaseName, lease);
            mergeWithConcurrencyCheck(builder, checkpoint, beforeLease);
        }

        boolean isDirty() {
            return (updates) > 0;
        }

        void close() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.spi.state.NodeBuilder async = builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
            async.removeProperty(((name) + "-lease"));
            mergeWithConcurrencyCheck(builder, async.getString(name), lease);
        }

        @java.lang.Override
        public void indexUpdate() throws org.apache.jackrabbit.oak.api.CommitFailedException {
            (updates)++;
            if (((updates) % 100) == 0) {
                long now = java.lang.System.currentTimeMillis();
                if ((now + (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT)) > (lease)) {
                    long newLease = now + (2 * (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT));
                    org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
                    builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(((name) + "-lease"), newLease);
                    mergeWithConcurrencyCheck(builder, checkpoint, lease);
                    lease = newLease;
                }
            }
        }
    }

    @java.lang.Override
    public synchronized void run() {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Running background index task {}", name);
        org.apache.jackrabbit.oak.spi.state.NodeState root = store.getRoot();
        org.apache.jackrabbit.oak.spi.state.NodeState async = root.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
        if ((async.getLong(((name) + "-lease"))) > (java.lang.System.currentTimeMillis())) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("Another copy of the {} index update is already running;" + " skipping this update"), name);
            return;
        }
        org.apache.jackrabbit.oak.spi.state.NodeState before;
        java.lang.String beforeCheckpoint = async.getString(name);
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(56).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("beforeCheckpoint != null",beforeCheckpoint != null);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.store);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("beforeCheckpoint",beforeCheckpoint);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.DEFAULT_LIFETIME);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.lifetime);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.name);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.failing);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("async",async);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("null",null);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.provider);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("root",root);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.reindexedDefinitions);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.switchOnSync);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC_TIMEOUT);} catch (Exception ex1) {ex1.printStackTrace();};
            if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats!=null) {
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStart());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getStatus());} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectInput("org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone()",org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone());} catch (Exception ex1) {ex1.printStackTrace();};
            }
            fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(56).collectionEnds();
        }
        if (runtimeAngelicValue) if (beforeCheckpoint != null) {
            org.apache.jackrabbit.oak.spi.state.NodeState state = store.retrieve(beforeCheckpoint);
            if (state == null) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Failed to retrieve previously indexed checkpoint {};" + " re-running the initial {} index update"), beforeCheckpoint, name);
                beforeCheckpoint = null;
                before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
            }else
                if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.noVisibleChanges(state, root)) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes since last checkpoint;" + " skipping the {} index update"), name);
                    return;
                }else {
                    before = state;
                }

        }else {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Initial {} index update", name);
            before = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE;
        }
        java.lang.String afterCheckpoint = store.checkpoint(lifetime);
        org.apache.jackrabbit.oak.spi.state.NodeState after = store.retrieve(afterCheckpoint);
        if (after == null) {
            org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn(("Unable to retrieve newly created checkpoint {}," + " skipping the {} index update"), afterCheckpoint, name);
            return;
        }
        java.lang.String checkpointToRelease = afterCheckpoint;
        try {
            updateIndex(before, beforeCheckpoint, after, afterCheckpoint);
            if (failing) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.info("Index update {} no longer fails", name);
                failing = false;
            }
            checkpointToRelease = beforeCheckpoint;
        } catch (org.apache.jackrabbit.oak.api.CommitFailedException e) {
            if (e == (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE)) {
                org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("Concurrent update detected in the {} index update", name);
            }else
                if (failing) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug("The {} index update is still failing", name, e);
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.warn("The {} index update failed", name, e);
                    failing = true;
                }

        } finally {
            if (checkpointToRelease != null) {
                store.release(checkpointToRelease);
            }
        }
    }

    private void updateIndex(org.apache.jackrabbit.oak.spi.state.NodeState before, java.lang.String beforeCheckpoint, org.apache.jackrabbit.oak.spi.state.NodeState after, java.lang.String afterCheckpoint) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.preAsyncRunStatsStats(indexStats);
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback callback = new org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncUpdateCallback(beforeCheckpoint);
        try {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = store.getRoot().builder();
            org.apache.jackrabbit.oak.plugins.index.IndexUpdate indexUpdate = new org.apache.jackrabbit.oak.plugins.index.IndexUpdate(provider, name, after, builder, callback);
            org.apache.jackrabbit.oak.api.CommitFailedException exception = org.apache.jackrabbit.oak.spi.commit.EditorDiff.process(indexUpdate, before, after);
            if (exception != null) {
                throw exception;
            }
            builder.child(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC).setProperty(name, afterCheckpoint);
            if ((callback.isDirty()) || (before == (org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.MISSING_NODE))) {
                if (switchOnSync) {
                    reindexedDefinitions.addAll(indexUpdate.getReindexedDefinitions());
                }else {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
                }
            }else
                if (switchOnSync) {
                    org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.log.debug(("No changes detected after diff; will try to" + " switch to synchronous updates on {}"), reindexedDefinitions);
                    for (java.lang.String path : reindexedDefinitions) {
                        org.apache.jackrabbit.oak.spi.state.NodeBuilder c = builder;
                        for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) {
                            c = c.getChildNode(p);
                        }
                        if ((c.exists()) && (!(c.getBoolean(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_PROPERTY_NAME)))) {
                            c.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ASYNC_PROPERTY_NAME);
                        }
                    }
                    reindexedDefinitions.clear();
                }

            mergeWithConcurrencyCheck(builder, beforeCheckpoint, callback.lease);
        } finally {
            callback.close();
        }
        org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.postAsyncRunStatsStatus(indexStats);
    }

    private void mergeWithConcurrencyCheck(org.apache.jackrabbit.oak.spi.state.NodeBuilder builder, final java.lang.String checkpoint, final long lease) throws org.apache.jackrabbit.oak.api.CommitFailedException {
        org.apache.jackrabbit.oak.spi.commit.CommitHook concurrentUpdateCheck = new org.apache.jackrabbit.oak.spi.commit.CommitHook() {
            @java.lang.Override
            @javax.annotation.Nonnull
            public org.apache.jackrabbit.oak.spi.state.NodeState processCommit(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after, org.apache.jackrabbit.oak.spi.commit.CommitInfo info) throws org.apache.jackrabbit.oak.api.CommitFailedException {
                org.apache.jackrabbit.oak.spi.state.NodeState async = before.getChildNode(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC);
                if ((com.google.common.base.Objects.equal(checkpoint, async.getString(name))) && (lease == (async.getLong(((name) + "-lease"))))) {
                    return after;
                }else {
                    throw org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.CONCURRENT_UPDATE;
                }
            }
        };
        org.apache.jackrabbit.oak.spi.commit.CompositeHook hooks = new org.apache.jackrabbit.oak.spi.commit.CompositeHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictHook(new org.apache.jackrabbit.oak.plugins.commit.AnnotatingConflictHandler()), new org.apache.jackrabbit.oak.spi.commit.EditorHook(new org.apache.jackrabbit.oak.plugins.commit.ConflictValidatorProvider()), concurrentUpdateCheck);
        store.merge(builder, hooks, org.apache.jackrabbit.oak.spi.commit.CommitInfo.EMPTY);
    }

    private static void preAsyncRunStatsStats(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.start(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static void postAsyncRunStatsStatus(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats stats) {
        stats.done(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.now());
    }

    private static java.lang.String now() {
        return org.apache.jackrabbit.util.ISO8601.format(java.util.Calendar.getInstance());
    }

    public org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.AsyncIndexStats getIndexStats() {
        return indexStats;
    }

    public boolean isFinished() {
        return (indexStats.getStatus()) == (org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE);
    }

    private static final class AsyncIndexStats implements org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean {
        private java.lang.String start = "";

        private java.lang.String done = "";

        private java.lang.String status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_INIT;

        public void start(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_RUNNING;
            start = now;
            done = "";
        }

        public void done(java.lang.String now) {
            status = org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean.STATUS_DONE;
            start = "";
            done = now;
        }

        @java.lang.Override
        public java.lang.String getStart() {
            return start;
        }

        @java.lang.Override
        public java.lang.String getDone() {
            return done;
        }

        @java.lang.Override
        public java.lang.String getStatus() {
            return status;
        }

        @java.lang.Override
        public java.lang.String toString() {
            return ((((("AsyncIndexStats [start=" + (start)) + ", done=") + (done)) + ", status=") + (status)) + "]";
        }
    }

    private static boolean noVisibleChanges(org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
        return after.compareAgainstBaseState(before, new org.apache.jackrabbit.oak.spi.state.NodeStateDiff() {
            @java.lang.Override
            public boolean propertyAdded(org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyChanged(org.apache.jackrabbit.oak.api.PropertyState before, org.apache.jackrabbit.oak.api.PropertyState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(after.getName());
            }

            @java.lang.Override
            public boolean propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(before.getName());
            }

            @java.lang.Override
            public boolean childNodeAdded(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }

            @java.lang.Override
            public boolean childNodeChanged(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before, org.apache.jackrabbit.oak.spi.state.NodeState after) {
                return (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name)) || (after.compareAgainstBaseState(before, this));
            }

            @java.lang.Override
            public boolean childNodeDeleted(java.lang.String name, org.apache.jackrabbit.oak.spi.state.NodeState before) {
                return org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isHidden(name);
            }
        });
    }

    private static boolean isHidden(java.lang.String name) {
        return (name.charAt(0)) == ':';
    }
}
10:34:31.699 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:34:31.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:32.119 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (416 ms)
<> Total tests run: 10
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.checkPathExists(AsyncIndexUpdateTest.java:74)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:396)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
10:34:33.069 [pool-203-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (389 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.071 [pool-204-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<null> but was:<async-reindex>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest.testAsyncPropertyLookup(AsyncPropertyIndexTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:33.080 [pool-205-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAsyncPropertyLookup(org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest)
[expected:<null> but was:<async-reindex>]
java.lang.AssertionError: expected:<null> but was:<async-reindex>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest.testAsyncPropertyLookup(AsyncPropertyIndexTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:33.085 [pool-206-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.088 [pool-207-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.090 [pool-208-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.092 [pool-209-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Expecting no checkpoint changes expected:<[checkpoint0]> but was:<[checkpoint1]>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupNoChanges(AsyncIndexUpdateTest.java:418)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.094 [pool-210-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ cpCleanupNoChanges(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[Expecting no checkpoint changes expected:<[checkpoint0]> but was:<[checkpoint1]>]
java.lang.AssertionError: Expecting no checkpoint changes expected:<[checkpoint0]> but was:<[checkpoint1]>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupNoChanges(AsyncIndexUpdateTest.java:418)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:34:33.097 [pool-211-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.099 [pool-212-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.105 [pool-213-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.111 [pool-214-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.114 [pool-215-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest.testAsyncPropertyLookup(AsyncPropertyIndexTest.java:96)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.115 [pool-216-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAsyncPropertyLookup(org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.property.AsyncPropertyIndexTest.testAsyncPropertyLookup(AsyncPropertyIndexTest.java:96)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsyncDoubleSubtree(AsyncIndexUpdateTest.java:198)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.116 [pool-217-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAsyncDoubleSubtree(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsyncDoubleSubtree(AsyncIndexUpdateTest.java:198)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.117 [pool-218-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ recoverFromMissingCpRef(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.recoverFromMissingCpRef(AsyncIndexUpdateTest.java:385)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsyncDouble(AsyncIndexUpdateTest.java:146)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.118 [pool-219-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAsyncDouble(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsyncDouble(AsyncIndexUpdateTest.java:146)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsync(AsyncIndexUpdateTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.119 [pool-220-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAsync(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.testAsync(AsyncIndexUpdateTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupNoChanges(AsyncIndexUpdateTest.java:410)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.119 [pool-221-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ cpCleanupNoChanges(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupNoChanges(AsyncIndexUpdateTest.java:410)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWUnrelatedChanges(AsyncIndexUpdateTest.java:475)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.120 [pool-222-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ cpCleanupWUnrelatedChanges(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWUnrelatedChanges(AsyncIndexUpdateTest.java:475)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWChanges(AsyncIndexUpdateTest.java:438)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.121 [pool-223-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ cpCleanupWChanges(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWChanges(AsyncIndexUpdateTest.java:438)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.failOnConflict(AsyncIndexUpdateTest.java:323)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.122 [pool-224-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ failOnConflict(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.failOnConflict(AsyncIndexUpdateTest.java:323)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWErrors(AsyncIndexUpdateTest.java:513)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:34:33.122 [pool-225-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ cpCleanupWErrors(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.cpCleanupWErrors(AsyncIndexUpdateTest.java:513)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest$1.retrieve(AsyncIndexUpdateTest.java:229)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.branchBaseOnCheckpoint(AsyncIndexUpdateTest.java:259)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:33.123 [pool-226-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ branchBaseOnCheckpoint(org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest)
[null]
java.lang.NullPointerException    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:180)
    at org.apache.jackrabbit.oak.plugins.memory.MemoryNodeStore.retrieve(MemoryNodeStore.java:200)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest$1.retrieve(AsyncIndexUpdateTest.java:229)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run(AsyncIndexUpdate.java:141)
    at org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdateTest.branchBaseOnCheckpoint(AsyncIndexUpdateTest.java:259)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:33.127 [pool-227-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.129 [pool-228-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.130 [pool-229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.132 [pool-230-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.133 [pool-231-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.135 [pool-232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.137 [pool-233-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.140 [pool-234-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.142 [pool-235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.144 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

10:34:33.729 [pool-201-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
10:34:33.849 [pool-201-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
10:34:33.951 [pool-201-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC.length() < org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone().length()
10:34:33.951 [pool-201-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:195: CONDITIONAL org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC.length() < org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone().length()
10:34:34.491 [pool-201-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC.length() < org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone().length()" is working
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.7.6/slf4j-simple-1.7.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
10:34:34.920 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:34:35.154 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 737
10:34:35.154 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 5207
10:34:35.154 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 58
10:34:35.154 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 6
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 2
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [4] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2]
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 4
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 41
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 425384ms
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
10:34:35.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC.length() < org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone().length()
10:34:35.647 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 11
10:34:35.647 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate:195: CONDITIONAL
10:34:35.665 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/index/AsyncIndexUpdate.java
@@ -194,3 +194,3 @@
         String beforeCheckpoint = async.getString(name);
-        if (beforeCheckpoint != null) {
+        if (org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.ASYNC.length() < org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.this.indexStats.getDone().length()) {
             NodeState state = store.retrieve(beforeCheckpoint);
@@ -198,4 +198,4 @@
                 log.warn("Failed to retrieve previously indexed checkpoint {};"
-                        + " re-running the initial {} index update",
-                        beforeCheckpoint, name);
+                + " re-running the initial {} index update",
+                beforeCheckpoint, name);
                 beforeCheckpoint = null;
@@ -204,3 +204,3 @@
                 log.debug("No changes since last checkpoint;"
-                        + " skipping the {} index update", name);
+                + " skipping the {} index update", name);
                 return;

PATCH
614.12user 27.38system 7:09.22elapsed 149%CPU (0avgtext+0avgdata 3200752maxresident)k
90000inputs+447680outputs (89major+1375228minor)pagefaults 0swaps


Node: graphene-117.nancy.grid5000.fr



Date: Sat Dec 29 10:34:36 EST 2018

