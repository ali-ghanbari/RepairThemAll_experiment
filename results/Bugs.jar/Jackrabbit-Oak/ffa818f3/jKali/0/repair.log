cd /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
	-location . \
	-id Jackrabbit-Oak-ffa818f3 \
	-failing org.apache.jackrabbit.mk.model.IdTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder oak-mk/src/main/java \
	-srctestfolder oak-mk/src/test/java \
	-binjavafolder oak-mk/target/classes \
	-bintestfolder oak-mk/target/test-classes \
	-parameters x:x \
	-dependencies /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-core/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.7.0/org.apache.felix.scr.annotations-1.7.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2018-12-31 03:47:56,418 INFO main - command line arguments: [-mode  jkali  -location  .  -id  Jackrabbit-Oak-ffa818f3  -failing  org.apache.jackrabbit.mk.model.IdTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  oak-mk/src/main/java  -srctestfolder  oak-mk/src/test/java  -binjavafolder  oak-mk/target/classes  -bintestfolder  oak-mk/target/test-classes  -parameters  x:x  -dependencies  /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-core/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.7.0/org.apache.felix.scr.annotations-1.7.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
2018-12-31 03:47:56,420 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:842) - Source folders: [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./oak-mk/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:861) - Source Test folders: [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./oak-mk/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor/AstorMain-Jackrabbit-Oak-ffa818f3//bin//default from 20 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-remote/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-sling/target/classes/, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-http/target/classes/, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/latest/target/classes/, /home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar, /home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar, /home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar, /home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mongomk/target/classes/, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-core/target/classes/, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar, /home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar, /home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar, /home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-jcr/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-run/target/classes/, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar, /home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor/AstorMain-Jackrabbit-Oak-ffa818f3//bin//default, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-lucene/target/classes/, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/mk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-api/target/classes/, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar, /home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.7.0/org.apache.felix.scr.annotations-1.7.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-commons/target/classes/, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar, /home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-perf/target/classes/, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar, /home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar, /home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/osgi/target/classes/, /home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/base/target/classes/, /home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.junit.runner.manipulation.Filter#initializationError
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.mk.store.DefaultRevisionStoreTest#testRevisionHistory
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.mk.model.IdTest#idCompareToGreaterThanTwoBytesTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.mk.model.IdTest#idCompareToGreaterThanOneByteTest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.junit.runner.manipulation.Filter#initializationError
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:79, fails: 5, GZoltar suspicious 11688, with positive susp 798
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 79
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 786 with susp > 0.1, we consider: 786
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor/AstorMain-Jackrabbit-Oak-ffa818f3//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor/AstorMain-Jackrabbit-Oak-ffa818f3//src//default, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-commons/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-api/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-remote/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mongomk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/mk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-core/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-jcr/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-sling/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-http/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-lucene/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-run/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/osgi/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/base/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/latest/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-perf/target/classes/, /home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar, /home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar, /home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar, /home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar, /home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar, /home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar, /home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar, /home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar, /home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.7.0/org.apache.felix.scr.annotations-1.7.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar, /home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar, /home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar, /home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 786
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=55, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=57, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=58, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=59, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=60, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=66, susp=0.6324555320336759]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=205, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=206, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_0_3OrMore(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=249, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_0_3OrMore(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=250, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=259, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=260, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_2(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=269, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_2(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=270, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_0_Or3Plus(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=383, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_0_Or3Plus(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=387, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_0_Or3Plus(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=388, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_0_Or3Plus(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=389, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=402, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=405, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=406, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=407, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_2(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=421, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_2(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=424, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_2(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=425, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_2(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=426, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;)V 0.0, lineNumber=502, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;)V 0.0, lineNumber=503, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=506, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=507, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V 0.0, lineNumber=510, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V 0.0, lineNumber=511, susp=0.2581988897471611]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=120, susp=0.22360679774997896]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=128, susp=0.22360679774997896]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=288, susp=0.22360679774997896]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=196, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=197, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=198, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=200, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=201, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=202, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=203, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{hasNext()Z 0.0, lineNumber=209, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{next()Ljava/lang/String; 0.0, lineNumber=214, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{next()Ljava/lang/String; 0.0, lineNumber=215, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{next()Ljava/lang/String; 0.0, lineNumber=216, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{next()Ljava/lang/String; 0.0, lineNumber=217, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$1, methodName=org.apache.jackrabbit.oak.commons.PathUtils$1{next()Ljava/lang/Object; 0.0, lineNumber=190, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils$2, methodName=org.apache.jackrabbit.oak.commons.PathUtils$2{iterator()Ljava/util/Iterator; 0.0, lineNumber=231, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{elements(Ljava/lang/String;)Ljava/lang/Iterable; 0.0, lineNumber=188, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{elements(Ljava/lang/String;)Ljava/lang/Iterable; 0.0, lineNumber=190, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{elements(Ljava/lang/String;)Ljava/lang/Iterable; 0.0, lineNumber=228, susp=0.2]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{denotesRoot(Ljava/lang/String;)Z 0.0, lineNumber=44, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{denotesRoot(Ljava/lang/String;)Z 0.0, lineNumber=46, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{denotesRootPath(Ljava/lang/String;)Z 0.0, lineNumber=50, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{isAbsolute(Ljava/lang/String;)Z 0.0, lineNumber=76, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{isAbsolute(Ljava/lang/String;)Z 0.0, lineNumber=78, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{isAbsolutePath(Ljava/lang/String;)Z 0.0, lineNumber=82, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getParentPath(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=94, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=108, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=110, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=115, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=116, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=117, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=118, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=119, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=121, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getAncestorPath(Ljava/lang/String;I)Ljava/lang/String; 0.0, lineNumber=122, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=140, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=142, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=145, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=146, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=147, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=148, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=276, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=277, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=279, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=281, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=283, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=286, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=287, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=290, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{concat(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=291, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.store.Binding$Entry, methodName=org.apache.jackrabbit.mk.store.Binding$Entry{getKey()Ljava/lang/String; 0.0, lineNumber=50, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.store.Binding$BytesEntry, methodName=org.apache.jackrabbit.mk.store.Binding$BytesEntry{getValue()[B 0.0, lineNumber=76, susp=0.18257418583505536]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 786,  611
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 611
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 611, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= oak-mk/target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 21534
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= oak-mk/src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.jackrabbit.mk.model.IdTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Jackrabbit-Oak-ffa818f3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= oak-mk/target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-core/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.7.0/org.apache.felix.scr.annotations-1.7.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= oak-mk/src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 610, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.getChildNodeFil[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.getChildNodeFilter(); 	if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 610, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.getChildNodeFil[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.getChildNodeFilter(); 	i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 610, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.getChildNodeFil[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 644, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((count != (-1)) &&  (filter != null)) &&  ((filter.getChildNodeFilter()) != null)) {  	count = [...] ` -topatch--> `if (true)   {  	count = -1; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 644, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((count != (-1)) &&  (filter != null)) &&  ((filter.getChildNodeFilter()) != null)) {  	count = [...] ` -topatch--> `if (false)   {  	count = -1; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 644, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((count != (-1)) &&  (filter != null)) &&  ((filter.getChildNodeFilter()) != null)) {  	count = [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 651, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.mk.model.tree.ChildNode entry : node.getChildNodeEntries(offset, count)) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 652, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeNode(entry.getName()))) { 	if ((maxChildNodes != (-1)) && ((+[...] ` -topatch--> `if (true) { 	if ((maxChildNodes != (-1)) && ((++numSiblings) > maxChildNodes)) { 		break; 	} 	builde[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 652, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeNode(entry.getName()))) { 	if ((maxChildNodes != (-1)) && ((+[...] ` -topatch--> `if (false) { 	if ((maxChildNodes != (-1)) && ((++numSiblings) > maxChildNodes)) { 		break; 	} 	build[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 652, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeNode(entry.getName()))) { 	if ((maxChildNodes != (-1)) && ((+[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 653, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((maxChildNodes != (-1)) && ((++numSiblings) > maxChildNodes)) { 	break; } ` -topatch--> `if (true) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 653, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((maxChildNodes != (-1)) && ((++numSiblings) > maxChildNodes)) { 	break; } ` -topatch--> `if (false) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 653, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((maxChildNodes != (-1)) && ((++numSiblings) > maxChildNodes)) { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 656, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `builder.key(entry.getName()).object() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, [...] ` -topatch--> `if (true) { 	toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, filte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, [...] ` -topatch--> `if (false) { 	toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, filt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (depth > 0) { 	toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 658, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toJson(builder, entry.getNode(), (depth - 1), 0, maxChildNodes, inclVirtualProps, filter) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 660, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `builder.endObject() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 116, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return (raw[i]) - (other[i]) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 114, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	if ((raw[i]) != (other[i])) { 		return (raw[i]) - (other[i]); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((raw[i]) != (other[i])) { 	return (raw[i]) - (other[i]); } ` -topatch--> `if (true) { 	return (this.raw[i]) - (other[i]); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((raw[i]) != (other[i])) { 	return (raw[i]) - (other[i]); } ` -topatch--> `if (false) { 	return (this.raw[i]) - (other[i]); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((raw[i]) != (other[i])) { 	return (raw[i]) - (other[i]); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); }else 	if (!(or[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("not initialized"); }else 	if (!(org.apache.j[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); }else 	if (!(or[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("not initialized"); }else 	if (!(org.apache.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); }else 	if (!(or[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw new java.lang.IllegalA[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("illegal path"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw new java.lang.IllegalA[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("illegal path"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw new java.lang.IllegalA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 169, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) { 	node = n[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 351, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 351, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 351, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(path.startsWith("/"))) {  	id = org.apache.jackrabbit.mk.model.Id.fromString(path); } ` -topatch--> `if (true) {  	id = org.apache.jackrabbit.mk.model.Id.fromString(path); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(path.startsWith("/"))) {  	id = org.apache.jackrabbit.mk.model.Id.fromString(path); } ` -topatch--> `if (false) {  	id = org.apache.jackrabbit.mk.model.Id.fromString(path); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(path.startsWith("/"))) {  	id = org.apache.jackrabbit.mk.model.Id.fromString(path); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((offset > 0) && (nodeFilter != null)) && ((nodeFilter.getChildNodeFilter()) != null)) {  	throw[...] ` -topatch--> `if (true) {  	throw new java.lang.IllegalArgumentException("offset > 0 with child node filter"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((offset > 0) && (nodeFilter != null)) && ((nodeFilter.getChildNodeFilter()) != null)) {  	throw[...] ` -topatch--> `if (false) {  	throw new java.lang.IllegalArgumentException("offset > 0 with child node filter"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((offset > 0) && (nodeFilter != null)) && ((nodeFilter.getChildNodeFilter()) != null)) {  	throw[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 370, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	org.apache.jackrabbit.mk.store.RevisionStore rs = rep.getRevisionStore(); 	nodeSt[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.store.RevisionStore rs = this.rep.getRevisionStore(); 	nodeSta[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 370, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	org.apache.jackrabbit.mk.store.RevisionStore rs = rep.getRevisionStore(); 	nodeSt[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.store.RevisionStore rs = this.rep.getRevisionStore(); 	nodeSt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 370, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	org.apache.jackrabbit.mk.store.RevisionStore rs = rep.getRevisionStore(); 	nodeSt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 374, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nodeState = rep.getNodeState(revId, path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nodeState == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nodeState == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (nodeState == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 381, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toJson(buf, nodeState, depth, ((int) (offset)), maxChildNodes, true, nodeFilter) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 382, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return buf.endObject().toString() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 581, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.mk.model.tree.PropertyState property : node.getProperties()) { 	if ((filt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 587, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inclVirtualProps) { 	if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   		[...] ` -topatch--> `if (true) { 	if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   		builder.key([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 587, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inclVirtualProps) { 	if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   		[...] ` -topatch--> `if (false) { 	if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   		builder.key[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 587, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inclVirtualProps) { 	if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   		[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 588, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   	builder.key(":childNodeCou[...] ` -topatch--> `if (true) {   	builder.key(":childNodeCount").value(childCount); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 588, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   	builder.key(":childNodeCou[...] ` -topatch--> `if (false) {   	builder.key(":childNodeCount").value(childCount); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 588, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((filter == null) || (filter.includeProperty(":childNodeCount"))) {   	builder.key(":childNodeCou[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 591, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `builder.key(":childNodeCount").value(childCount) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 593, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter nf = filter.getPropertyFilter(); 	if[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.util.NameFilter nf = filter.getPropertyFilter(); 	if (nf != nu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 593, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter nf = filter.getPropertyFilter(); 	if[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.util.NameFilter nf = filter.getPropertyFilter(); 	if (nf != n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 593, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (filter != null) { 	org.apache.jackrabbit.mk.util.NameFilter nf = filter.getPropertyFilter(); 	if[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 609, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((childCount > 0) && (depth >= 0)) { 	if (filter != null) { 		org.apache.jackrabbit.mk.util.NameF[...] ` -topatch--> `if (true) { 	if (filter != null) { 		org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 609, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((childCount > 0) && (depth >= 0)) { 	if (filter != null) { 		org.apache.jackrabbit.mk.util.NameF[...] ` -topatch--> `if (false) { 	if (filter != null) { 		org.apache.jackrabbit.mk.util.NameFilter childFilter = filter.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 609, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((childCount > 0) && (depth >= 0)) { 	if (filter != null) { 		org.apache.jackrabbit.mk.util.NameF[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count < (-1)) { 	throw new java.lang.IllegalArgumentException(("Illegal count: " + count)); }els[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(("Illegal count: " + count)); }else 	if (o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count < (-1)) { 	throw new java.lang.IllegalArgumentException(("Illegal count: " + count)); }els[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(("Illegal count: " + count)); }else 	if ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (count < (-1)) { 	throw new java.lang.IllegalArgumentException(("Illegal count: " + count)); }els[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset > (java.lang.Integer.MAX_VALUE)) { 	return java.util.Collections.emptyList(); }else { 	re[...] ` -topatch--> `if (true) { 	return java.util.Collections.emptyList(); }else { 	return new java.lang.Iterable<org.ap[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset > (java.lang.Integer.MAX_VALUE)) { 	return java.util.Collections.emptyList(); }else { 	re[...] ` -topatch--> `if (false) { 	return java.util.Collections.emptyList(); }else { 	return new java.lang.Iterable<org.a[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (offset > (java.lang.Integer.MAX_VALUE)) { 	return java.util.Collections.emptyList(); }else { 	re[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 139, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.lang.Iterable<org.apache.jackrabbit.mk.model.tree.ChildNode>() { 	@java.lang.Overrid[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 527, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((gcpm) == null) || (!(gcState.compareAndSet(org.apache.jackrabbit.mk.store.DefaultRevisionStore[...] ` -topatch--> `if (true) {  	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 527, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((gcpm) == null) || (!(gcState.compareAndSet(org.apache.jackrabbit.mk.store.DefaultRevisionStore[...] ` -topatch--> `if (false) {  	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 527, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((gcpm) == null) || (!(gcState.compareAndSet(org.apache.jackrabbit.mk.store.DefaultRevisionStore[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 532, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("GC started.") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 533, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `markedCommits = markedNodes = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 536, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `markUncommittedNodes() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 538, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("Fir[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("First branch root to be [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 538, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("Fir[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("First branch root to be[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 538, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("Fir[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 542, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("First commit to be preserved: {}", fi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 544, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("Marked {} commits, {} nodes.", marked[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 546, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((firstBranchRootId != null) && ((firstBranchRootId.compareTo(firstCommitId)) < 0)) { 	firstCommi[...] ` -topatch--> `if (true) { 	firstCommitId = firstBranchRootId; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 546, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((firstBranchRootId != null) && ((firstBranchRootId.compareTo(firstCommitId)) < 0)) { 	firstCommi[...] ` -topatch--> `if (false) { 	firstCommitId = firstBranchRootId; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 546, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((firstBranchRootId != null) && ((firstBranchRootId.compareTo(firstCommitId)) < 0)) { 	firstCommi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 551, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getParentId()) != null) { 	org.apache.jackrabbit.mk.model.MutableCommit firstCommit = ne[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.model.MutableCommit firstCommit = new org.apache.jackrabbit.mk[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 551, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getParentId()) != null) { 	org.apache.jackrabbit.mk.model.MutableCommit firstCommit = ne[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.model.MutableCommit firstCommit = new org.apache.jackrabbit.m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 551, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getParentId()) != null) { 	org.apache.jackrabbit.mk.model.MutableCommit firstCommit = ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 553, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `firstCommit.setParentId(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 554, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcpm.replaceCommit(firstCommit.getId(), firstCommit) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 564, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcState.set(org.apache.jackrabbit.mk.store.DefaultRevisionStore.SWEEPING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 568, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("GC cycle swept {} items", swept) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 569, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cache.invalidateAll() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 573, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcState.set(org.apache.jackrabbit.mk.store.DefaultRevisionStore.NOT_ACTIVE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 576, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.store.DefaultRevisionStore.LOG.debug("GC stopped.") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 586, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tokensLock.writeLock().lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 589, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcpm.start() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 590, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcState.set(org.apache.jackrabbit.mk.store.DefaultRevisionStore.MARKING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 593, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.mk.store.DefaultRevisionStore.PutTokenImpl token : tokens) { 	markNode(to[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 597, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tokensLock.writeLock().unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 612, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(branches) { 	tmpBranches = ((java.util.Map<org.apache.jackrabbit.mk.model.Id, org.apach[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 613, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `tmpBranches = ((java.util.Map<org.apache.jackrabbit.mk.model.Id, org.apache.jackrabbit.mk.model.Id>)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 619, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<org.apache.jackrabbit.mk.model.Id, org.apache.jackrabbit.mk.model.Id> entry[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 632, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.model.StoredCommit commit = getHeadCommit[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.model.StoredCommit commit = getHeadCommit();  	for (; ;) { 		m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 632, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.model.StoredCommit commit = getHeadCommit[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.model.StoredCommit commit = getHeadCommit();  	for (; ;) { 		[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 632, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstBranchRootId != null) { 	org.apache.jackrabbit.mk.model.StoredCommit commit = getHeadCommit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 685, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markCommit(commit.getId()))) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 685, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markCommit(commit.getId()))) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 685, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markCommit(commit.getId()))) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 688, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(markedCommits)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 690, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `markNode(getNode(commit.getRootNodeId())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 700, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markNode(node.getId()))) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 700, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markNode(node.getId()))) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 700, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(gcpm.markNode(node.getId()))) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 701, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 703, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(markedNodes)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 706, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iter.hasNext()) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry c = iter.next(); 	markNode(g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 708, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `markNode(getNode(c.getId())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 73, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return c - '0' ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 38, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `buff[(i + i)] = hex[(c >> 4)] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `buff[((i + i) + 1)] = hex[(c & 15)] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 297, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : org.apache.jackrabbit.oak.commons.PathUtils.elements(path)) { 	node = p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 298, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `node = parent.getStagedChildNode(name, createIfNotStaged) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 302, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parent = node ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 470, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (child == null) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry entry = getChildNodeEntry(name);[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry entry = getChildNodeEntry(name); 	if (ent[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 470, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (child == null) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry entry = getChildNodeEntry(name);[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry entry = getChildNodeEntry(name); 	if (en[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 470, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (child == null) { 	org.apache.jackrabbit.mk.model.ChildNodeEntry entry = getChildNodeEntry(name);[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 472, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (entry != null) { 	if (createIfNotStaged) { 		child = new org.apache.jackrabbit.mk.model.StagedNo[...] ` -topatch--> `if (true) { 	if (createIfNotStaged) { 		child = new org.apache.jackrabbit.mk.model.StagedNodeTree.St[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 472, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (entry != null) { 	if (createIfNotStaged) { 		child = new org.apache.jackrabbit.mk.model.StagedNo[...] ` -topatch--> `if (false) { 	if (createIfNotStaged) { 		child = new org.apache.jackrabbit.mk.model.StagedNodeTree.S[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 472, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (entry != null) { 	if (createIfNotStaged) { 		child = new org.apache.jackrabbit.mk.model.StagedNo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (createIfNotStaged) { 	child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(store[...] ` -topatch--> `if (true) { 	child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(this.store.getNode[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (createIfNotStaged) { 	child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(store[...] ` -topatch--> `if (false) { 	child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(this.store.getNod[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (createIfNotStaged) { 	child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(store[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 474, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `child = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(store.getNode(entry.getId()), s[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 475, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stagedChildNodes.put(name, child) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 514, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.add(entry.getKey(), entry.getValue()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.StoredNodeAsState line: 174, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.jackrabbit.mk.store.StoredNodeAsState(child, provider) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `buff[i] = ((byte) (((org.apache.jackrabbit.mk.util.StringUtils.getHexDigit(s, (i + i))) << 4) | (org[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= '0') && (c <= '9')) { 	return c - '0'; }else 	if ((c >= 'a') && (c <= 'f')) { 		return (c [...] ` -topatch--> `if (true) { 	return c - '0'; }else 	if ((c >= 'a') && (c <= 'f')) { 		return (c - 'a') + 10; 	}else [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= '0') && (c <= '9')) { 	return c - '0'; }else 	if ((c >= 'a') && (c <= 'f')) { 		return (c [...] ` -topatch--> `if (false) { 	return c - '0'; }else 	if ((c >= 'a') && (c <= 'f')) { 		return (c - 'a') + 10; 	}else[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= '0') && (c <= '9')) { 	return c - '0'; }else 	if ((c >= 'a') && (c <= 'f')) { 		return (c [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 37, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.key(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.json.JsonObject.toJson(buf, obj.children.get(name)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((blobStoreNeedsClose) && ((bs) instanceof java.io.Closeable)) { 	org.apache.jackrabbit.mk.util.I[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.io.Closeable) (this.bs))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((blobStoreNeedsClose) && ((bs) instanceof java.io.Closeable)) { 	org.apache.jackrabbit.mk.util.I[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.io.Closeable) (this.bs))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((blobStoreNeedsClose) && ((bs) instanceof java.io.Closeable)) { 	org.apache.jackrabbit.mk.util.I[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rs) instanceof java.io.Closeable) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.io.Closeable) (this.rs))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rs) instanceof java.io.Closeable) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.io.Closeable) (this.rs))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rs) instanceof java.io.Closeable) { 	org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 119, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(((java.io.Closeable) (rs))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialized = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newInstance.add(new org.apache.jackrabbit.mk.model.ChildNodeEntry(entry.getKey(), new org.apache.jac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((count)--) > 0) { 	try { 		java.lang.String key = org.apache.jackrabbit.mk.util.IOUtils.readStr[...] ` -topatch--> `if (true) { 	try { 		java.lang.String key = org.apache.jackrabbit.mk.util.IOUtils.readString(this.in[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((count)--) > 0) { 	try { 		java.lang.String key = org.apache.jackrabbit.mk.util.IOUtils.readStr[...] ` -topatch--> `if (false) { 	try { 		java.lang.String key = org.apache.jackrabbit.mk.util.IOUtils.readString(this.i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((count)--) > 0) { 	try { 		java.lang.String key = org.apache.jackrabbit.mk.util.IOUtils.readStr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 185, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.jackrabbit.mk.store.Binding.BytesEntry(key, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 96, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gate.commit("end") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) != null) { 	try { 		rep.shutDown(); 	} catch (java.lang.Exception ignore) {  	} 	rep = nul[...] ` -topatch--> `if (true) { 	try { 		this.rep.shutDown(); 	} catch (java.lang.Exception ignore) {  	} 	this.rep = nu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) != null) { 	try { 		rep.shutDown(); 	} catch (java.lang.Exception ignore) {  	} 	rep = nul[...] ` -topatch--> `if (false) { 	try { 		this.rep.shutDown(); 	} catch (java.lang.Exception ignore) {  	} 	this.rep = n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) != null) { 	try { 		rep.shutDown(); 	} catch (java.lang.Exception ignore) {  	} 	rep = nul[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rep.shutDown() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 103, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rep = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 174, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  new java.util.concurrent.Thre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcExecutor.scheduleWithFixedDelay(new java.lang.Runnable() { 	@java.lang.Override 	public void run()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 195, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcExecutor) != null) { 	gcExecutor.shutdown(); } ` -topatch--> `if (true) { 	this.gcExecutor.shutdown(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcExecutor) != null) { 	gcExecutor.shutdown(); } ` -topatch--> `if (false) { 	this.gcExecutor.shutdown(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcExecutor) != null) { 	gcExecutor.shutdown(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 198, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gcExecutor.shutdown() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 201, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cache.invalidateAll() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 203, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.closeQuietly(pm) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 205, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialized = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 162, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `commit.serialize(new org.apache.jackrabbit.mk.store.BinaryBinding(out)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 165, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `objects.put(id, bytes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `marked.put(id, bytes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 36, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	int c = (value[i]) & 255; 	buff[(i + i)] = hex[(c >> 4)]; 	buff[((i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((len % 2) != 0) { 	throw new java.lang.IllegalArgumentException(s); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(s); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((len % 2) != 0) { 	throw new java.lang.IllegalArgumentException(s); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(s); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((len % 2) != 0) { 	throw new java.lang.IllegalArgumentException(s); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 55, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `len /= 2 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 57, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	buff[i] = ((byte) (((org.apache.jackrabbit.mk.util.StringUtils.getH[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 35, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `t.read(':') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (t.matches('{')) { 	obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)); }e[...] ` -topatch--> `if (true) { 	obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)); }else { 	obj[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (t.matches('{')) { 	obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)); }e[...] ` -topatch--> `if (false) { 	obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)); }else { 	ob[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (t.matches('{')) { 	obj.children.put(key, org.apache.jackrabbit.mk.json.JsonObject.create(t)); }e[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 42, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `t.read('}') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (data != null) { 	return (marked.put(id, data)) == null; } ` -topatch--> `if (true) { 	return (this.marked.put(id, data)) == null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (data != null) { 	return (marked.put(id, data)) == null; } ` -topatch--> `if (false) { 	return (this.marked.put(id, data)) == null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (data != null) { 	return (marked.put(id, data)) == null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 172, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return (marked.put(id, data)) == null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((msg) != null) { 	memory += 2 * (msg.length()); } ` -topatch--> `if (true) { 	memory += 2 * (this.msg.length()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((msg) != null) { 	memory += 2 * (msg.length()); } ` -topatch--> `if (false) { 	memory += 2 * (this.msg.length()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((msg) != null) { 	memory += 2 * (msg.length()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((changes) != null) { 	memory += 2 * (changes.length()); } ` -topatch--> `if (true) { 	memory += 2 * (this.changes.length()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((changes) != null) { 	memory += 2 * (changes.length()); } ` -topatch--> `if (false) { 	memory += 2 * (this.changes.length()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((changes) != null) { 	memory += 2 * (changes.length()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 111, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `memory += 2 * (changes.length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((childEntries.getCount()) > (org.apache.jackrabbit.mk.model.ChildNodeEntries.CAPACITY_THRESHOLD[...] ` -topatch--> `if (true)  { 	org.apache.jackrabbit.mk.model.ChildNodeEntries entries = new org.apache.jackrabbit.mk[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((childEntries.getCount()) > (org.apache.jackrabbit.mk.model.ChildNodeEntries.CAPACITY_THRESHOLD[...] ` -topatch--> `if (false)  { 	org.apache.jackrabbit.mk.model.ChildNodeEntries entries = new org.apache.jackrabbit.m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((childEntries.getCount()) > (org.apache.jackrabbit.mk.model.ChildNodeEntries.CAPACITY_THRESHOLD[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(childEntries.inlined())) {  	((org.apache.jackrabbit.mk.model.ChildNodeEntriesTree) (childEntr[...] ` -topatch--> `if (true) {  	((org.apache.jackrabbit.mk.model.ChildNodeEntriesTree) (this.childEntries)).persistDir[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(childEntries.inlined())) {  	((org.apache.jackrabbit.mk.model.ChildNodeEntriesTree) (childEntr[...] ` -topatch--> `if (false) {  	((org.apache.jackrabbit.mk.model.ChildNodeEntriesTree) (this.childEntries)).persistDi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableNode line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(childEntries.inlined())) {  	((org.apache.jackrabbit.mk.model.ChildNodeEntriesTree) (childEntr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `baseRevisionId = newBaseRevisionId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent.getChildNodeEntry(nodeName)) != null) { 	throw new java.lang.Exception((("there's alread[...] ` -topatch--> `if (true) { 	throw new java.lang.Exception((("there's already a child node with name '" + nodeName) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent.getChildNodeEntry(nodeName)) != null) { 	throw new java.lang.Exception((("there's alread[...] ` -topatch--> `if (false) { 	throw new java.lang.Exception((("there's already a child node with name '" + nodeName)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent.getChildNodeEntry(nodeName)) != null) { 	throw new java.lang.Exception((("there's alread[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `parent.add(nodeName, nodeData) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 283, pointed element: CtAssertImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssertImpl) `assert org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((root) == null) { 	if (!createIfNotStaged) { 		return null; 	} 	root = new org.apache.jackrabbit[...] ` -topatch--> `if (true) { 	if (!createIfNotStaged) { 		return null; 	} 	this.root = new org.apache.jackrabbit.mk.m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((root) == null) { 	if (!createIfNotStaged) { 		return null; 	} 	root = new org.apache.jackrabbit[...] ` -topatch--> `if (false) { 	if (!createIfNotStaged) { 		return null; 	} 	this.root = new org.apache.jackrabbit.mk.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((root) == null) { 	if (!createIfNotStaged) { 		return null; 	} 	root = new org.apache.jackrabbit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!createIfNotStaged) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!createIfNotStaged) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!createIfNotStaged) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 289, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `root = new org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode(store.getRootNode(baseRevisionId[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) { 	return root; } ` -topatch--> `if (true) { 	return this.root; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) { 	return root; } ` -topatch--> `if (false) { 	return this.root; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.denotesRoot(path)) { 	return root; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 293, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return root ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 272, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stagedTree.add(parentNodePath, nodeName, node) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 278, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `diff.tag('+').key(org.apache.jackrabbit.oak.commons.PathUtils.concat(parentNodePath, nodeName)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 279, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.toJson(diff) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.msg = msg ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.changes = changes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.branchRootId = branchRootId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 380, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pm.readNode(node) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 512, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getProperties().putAll(obj.getProperties()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 513, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.mk.json.JsonObject> entry : obj.get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 516, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stagedChildNodes.put(name, node) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 518, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `add(new org.apache.jackrabbit.mk.model.ChildNodeEntry(name, null)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 559, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, org.apache.jackrabbit.mk.model.StagedNodeTree.StagedNode>[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StagedNodeTree line: 565, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `add(new org.apache.jackrabbit.mk.model.ChildNodeEntry(name, id)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `clone = ((org.apache.jackrabbit.mk.model.ChildNodeEntriesMap) (super.clone())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `clone.entries = ((java.util.HashMap<java.lang.String, org.apache.jackrabbit.mk.model.ChildNodeEntry>[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apa[...] ` -topatch--> `if (true) { 	return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apache.jackr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apa[...] ` -topatch--> `if (false) { 	return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apache.jack[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 92, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.mk.model.StoredCommit.deserialize(id, new org.apache.jackrabbit.mk.stor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 121, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return rep.getHeadRevision() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 389, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 389, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("this instance has already been disposed"); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 389, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep) == null) { 	throw new java.lang.IllegalStateException("this instance has already been disp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((path.length()) > 0) && (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)))) { 	t[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(("absolute path expected: " + path)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((path.length()) > 0) && (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)))) { 	t[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(("absolute path expected: " + path)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((path.length()) > 0) && (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)))) { 	t[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((jsonDiff == null) || ((jsonDiff.length()) == 0)) { 	return getHeadRevision(); } ` -topatch--> `if (true) { 	return getHeadRevision(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((jsonDiff == null) || ((jsonDiff.length()) == 0)) { 	return getHeadRevision(); } ` -topatch--> `if (false) { 	return getHeadRevision(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((jsonDiff == null) || ((jsonDiff.length()) == 0)) { 	return getHeadRevision(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (r == (org.apache.jackrabbit.mk.json.JsopReader.END)) { 	break; } ` -topatch--> `if (true) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (r == (org.apache.jackrabbit.mk.json.JsopReader.END)) { 	break; } ` -topatch--> `if (false) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (r == (org.apache.jackrabbit.mk.json.JsopReader.END)) { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 407, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 410, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (r) { 	case '+' : 		{ 			pos = t.getLastPos(); 			java.lang.String subPath = t.readString(); [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 412, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pos = t.getLastPos() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 414, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `t.read(':') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 415, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `t.read('{') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(nodePath))) { 	throw new java.lang.Exce[...] ` -topatch--> `if (true) { 	throw new java.lang.Exception(((("absolute path expected: " + nodePath) + ", pos: ") + [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(nodePath))) { 	throw new java.lang.Exce[...] ` -topatch--> `if (false) { 	throw new java.lang.Exception(((("absolute path expected: " + nodePath) + ", pos: ") +[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(nodePath))) { 	throw new java.lang.Exce[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 422, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cb.addNode(parentPath, nodeName, org.apache.jackrabbit.mk.json.JsonObject.create(t)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 423, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 497, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(newHead.equals(revId))) {  	if ((rep.getCommit(newHead).getBranchRootId()) == null) {  		gate.[...] ` -topatch--> `if (true) {  	if ((this.rep.getCommit(newHead).getBranchRootId()) == null) {  		this.gate.commit(new[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 497, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(newHead.equals(revId))) {  	if ((rep.getCommit(newHead).getBranchRootId()) == null) {  		gate.[...] ` -topatch--> `if (false) {  	if ((this.rep.getCommit(newHead).getBranchRootId()) == null) {  		this.gate.commit(ne[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 497, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(newHead.equals(revId))) {  	if ((rep.getCommit(newHead).getBranchRootId()) == null) {  		gate.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep.getCommit(newHead).getBranchRootId()) == null) {  	gate.commit(newHead.toString()); } ` -topatch--> `if (true) {  	this.gate.commit(newHead.toString()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep.getCommit(newHead).getBranchRootId()) == null) {  	gate.commit(newHead.toString()); } ` -topatch--> `if (false) {  	this.gate.commit(newHead.toString()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rep.getCommit(newHead).getBranchRootId()) == null) {  	gate.commit(newHead.toString()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 501, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `gate.commit(newHead.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.MicroKernelImpl line: 504, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return newHead.toString() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 248, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.lastModifiedNode = lastModifiedNode ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 98, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeString(out, entry.getKey()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeBytes(out, entry.getValue()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractNode line: 175, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, java.lang.String> e : properties.entrySet()) { 	memory +=[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 261, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrabbi[...] ` -topatch--> `if (true) { 	callback = ((org.apache.jackrabbit.mk.store.PersistHook) (node)); 	callback.prePersist([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrabbi[...] ` -topatch--> `if (false) { 	callback = ((org.apache.jackrabbit.mk.store.PersistHook) (node)); 	callback.prePersist[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrabbi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 265, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `callback = ((org.apache.jackrabbit.mk.store.PersistHook) (node)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 266, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `callback.prePersist(this, token) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 273, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tokensLock.readLock().lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `if (true) { 	callback.postPersist(this, token); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `if (false) { 	callback.postPersist(this, token); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 279, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `callback.postPersist(this, token) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 283, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cache.put(id, snode) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 286, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pti.updateLastModifed(snode) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 287, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `putTokens.put(pti, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 288, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return id ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 291, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tokensLock.readLock().unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 317, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `headLock.writeLock().lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 322, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(headLock.writeLock().isHeldByCurrentThread())) { 	throw new java.lang.IllegalStateException( 	[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException( 	"putHeadCommit called without holding write[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(headLock.writeLock().isHeldByCurrentThread())) { 	throw new java.lang.IllegalStateException( 	[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException( 	"putHeadCommit called without holding writ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(headLock.writeLock().isHeldByCurrentThread())) { 	throw new java.lang.IllegalStateException( 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getBranchRootId()) != null) {  	throw new java.lang.IllegalStateException((("private bra[...] ` -topatch--> `if (true) {  	throw new java.lang.IllegalStateException((("private branch commit [" + commit) + "] c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getBranchRootId()) != null) {  	throw new java.lang.IllegalStateException((("private bra[...] ` -topatch--> `if (false) {  	throw new java.lang.IllegalStateException((("private branch commit [" + commit) + "] [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 328, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((commit.getBranchRootId()) != null) {  	throw new java.lang.IllegalStateException((("private bra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 334, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setHeadCommitId(id) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 336, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `putTokens.remove(token) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (branchRevId != null) { 	synchronized(branches) { 		branches.remove(branchRevId); 	} } ` -topatch--> `if (true) { 	synchronized(this.branches) { 		this.branches.remove(branchRevId); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (branchRevId != null) { 	synchronized(branches) { 		branches.remove(branchRevId); 	} } ` -topatch--> `if (false) { 	synchronized(this.branches) { 		this.branches.remove(branchRevId); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (branchRevId != null) { 	synchronized(branches) { 		branches.remove(branchRevId); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 366, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `headLock.writeLock().unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 372, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 403, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (commit instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrab[...] ` -topatch--> `if (true) { 	callback = ((org.apache.jackrabbit.mk.store.PersistHook) (commit)); 	callback.prePersis[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (commit instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrab[...] ` -topatch--> `if (false) { 	callback = ((org.apache.jackrabbit.mk.store.PersistHook) (commit)); 	callback.prePersi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (commit instanceof org.apache.jackrabbit.mk.store.PersistHook) { 	callback = ((org.apache.jackrab[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	id = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet());[...] ` -topatch--> `if (true) { 	id = org.apache.jackrabbit.mk.model.Id.fromLong(this.commitCounter.incrementAndGet()); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	id = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet());[...] ` -topatch--> `if (false) { 	id = org.apache.jackrabbit.mk.model.Id.fromLong(this.commitCounter.incrementAndGet());[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	id = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet());[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 447, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `id = org.apache.jackrabbit.mk.model.Id.fromLong(commitCounter.incrementAndGet()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 449, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pm.writeCommit(id, commit) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `if (true) { 	callback.postPersist(this, token); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `if (false) { 	callback.postPersist(this, token); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (callback != null) { 	callback.postPersist(this, token); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 454, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cache.put(id, new org.apache.jackrabbit.mk.model.StoredCommit(id, commit)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 461, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pm.writeHead(id) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 462, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `head = id ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (counter > (commitCounter.get())) { 	commitCounter.set(counter); } ` -topatch--> `if (true) { 	this.commitCounter.set(counter); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (counter > (commitCounter.get())) { 	commitCounter.set(counter); } ` -topatch--> `if (false) { 	this.commitCounter.set(counter); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (counter > (commitCounter.get())) { 	commitCounter.set(counter); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `change.apply() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `changeLog.add(change) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((stagedTree.isEmpty()) && (!createBranch)) {  	return baseRevId; } ` -topatch--> `if (true) {  	return this.baseRevId; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((stagedTree.isEmpty()) && (!createBranch)) {  	return baseRevId; } ` -topatch--> `if (false) {  	return this.baseRevId; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((stagedTree.isEmpty()) && (!createBranch)) {  	return baseRevId; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (createBranch && ((baseCommit.getBranchRootId()) != null)) { 	throw new java.lang.Exception("cann[...] ` -topatch--> `if (true) { 	throw new java.lang.Exception("cannot branch off a private branch"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (createBranch && ((baseCommit.getBranchRootId()) != null)) { 	throw new java.lang.Exception("cann[...] ` -topatch--> `if (false) { 	throw new java.lang.Exception("cannot branch off a private branch"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (createBranch && ((baseCommit.getBranchRootId()) != null)) { 	throw new java.lang.Exception("cann[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	org.apache.jackrabbit.mk.model.Id currentHead = store.getHeadCommitId(); 	if [...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.model.Id currentHead = this.store.getHeadCommitId(); 	if (!(cu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	org.apache.jackrabbit.mk.model.Id currentHead = store.getHeadCommitId(); 	if [...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.model.Id currentHead = this.store.getHeadCommitId(); 	if (!(c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	org.apache.jackrabbit.mk.model.Id currentHead = store.getHeadCommitId(); 	if [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	baseRevId = currentHead;  	stagedTree.reset(baseRevId);  [...] ` -topatch--> `if (true) {   	this.baseRevId = currentHead;  	this.stagedTree.reset(this.baseRevId);  	for (org.apa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	baseRevId = currentHead;  	stagedTree.reset(baseRevId);  [...] ` -topatch--> `if (false) {   	this.baseRevId = currentHead;  	this.stagedTree.reset(this.baseRevId);  	for (org.ap[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	baseRevId = currentHead;  	stagedTree.reset(baseRevId);  [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	store.lockHead(); 	try { 		org.apache.jackrabbit.mk.model.Id currentHead = st[...] ` -topatch--> `if (true) { 	this.store.lockHead(); 	try { 		org.apache.jackrabbit.mk.model.Id currentHead = this.st[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	store.lockHead(); 	try { 		org.apache.jackrabbit.mk.model.Id currentHead = st[...] ` -topatch--> `if (false) { 	this.store.lockHead(); 	try { 		org.apache.jackrabbit.mk.model.Id currentHead = this.s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!privateCommit) { 	store.lockHead(); 	try { 		org.apache.jackrabbit.mk.model.Id currentHead = st[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `store.lockHead() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	rootNodeId = stagedTree.merge(store.getNode(rootNodeId), [...] ` -topatch--> `if (true) {   	rootNodeId = this.stagedTree.merge(this.store.getNode(rootNodeId), currentHead, this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	rootNodeId = stagedTree.merge(store.getNode(rootNodeId), [...] ` -topatch--> `if (false) {   	rootNodeId = this.stagedTree.merge(this.store.getNode(rootNodeId), currentHead, this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(currentHead.equals(baseRevId))) {   	rootNodeId = stagedTree.merge(store.getNode(rootNodeId), [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {   	return currentHead; } ` -topatch--> `if (true) {   	return currentHead; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {   	return currentHead; } ` -topatch--> `if (false) {   	return currentHead; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (store.getCommit(currentHead).getRootNodeId().equals(rootNodeId)) {   	return currentHead; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setParentId(baseRevId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 151, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setCommitTS(java.lang.System.currentTimeMillis()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 152, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setMsg(msg) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 154, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.mk.model.CommitBuilder.Change change : changeLog) { 	if ((diff.length()) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((diff.length()) > 0) { 	diff.append('\n'); } ` -topatch--> `if (true) { 	diff.append('\n'); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((diff.length()) > 0) { 	diff.append('\n'); } ` -topatch--> `if (false) { 	diff.append('\n'); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((diff.length()) > 0) { 	diff.append('\n'); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 158, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `diff.append(change.asDiff()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setChanges(diff.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 161, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setRootNodeId(rootNodeId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 162, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newCommit.setBranchRootId(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 163, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newRevId = store.putHeadCommit(token, newCommit, null, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 165, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `store.unlockHead() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 191, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stagedTree.reset(newRevId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.CommitBuilder line: 192, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `changeLog.clear() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(t.matches('}'))) { 	do { 		java.lang.String key = t.readString(); 		t.read(':'); 		if (t.match[...] ` -topatch--> `if (true) { 	do { 		java.lang.String key = t.readString(); 		t.read(':'); 		if (t.matches('{')) { 		[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(t.matches('}'))) { 	do { 		java.lang.String key = t.readString(); 		t.read(':'); 		if (t.match[...] ` -topatch--> `if (false) { 	do { 		java.lang.String key = t.readString(); 		t.read(':'); 		if (t.matches('{')) { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(t.matches('}'))) { 	do { 		java.lang.String key = t.readString(); 		t.read(':'); 		if (t.match[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 48, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.json.JsonObject.toJson(buf, this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.object() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 61, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : obj.props.keySet()) { 	buf.key(name).encodedValue(obj.props.get(name));[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 64, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : obj.children.keySet()) { 	buf.key(name); 	org.apache.jackrabbit.mk.json[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsonObject line: 68, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.endObject() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 205, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(',') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 68, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.ByteArrayInputStream(b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 69, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.jackrabbit.mk.model.Id) { 	org.apache.jackrabbit.mk.model.Id other = ([...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.mk.model.Id other = ((org.apache.jackrabbit.mk.model.Id) (obj)); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.jackrabbit.mk.model.Id) { 	org.apache.jackrabbit.mk.model.Id other = ([...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.mk.model.Id other = ((org.apache.jackrabbit.mk.model.Id) (obj));[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.jackrabbit.mk.model.Id) { 	org.apache.jackrabbit.mk.model.Id other = ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 98, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return java.util.Arrays.equals(raw, other.raw) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 140, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `gcStart = java.lang.System.currentTimeMillis() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 141, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `marked.clear() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `objects.clear() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 182, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `objects.putAll(marked) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 184, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `gcStart = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= 'a') && (c <= 'f')) { 	return (c - 'a') + 10; }else 	if ((c >= 'A') && (c <= 'F')) { 		ret[...] ` -topatch--> `if (true) { 	return (c - 'a') + 10; }else 	if ((c >= 'A') && (c <= 'F')) { 		return (c - 'A') + 10; [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= 'a') && (c <= 'f')) { 	return (c - 'a') + 10; }else 	if ((c >= 'A') && (c <= 'F')) { 		ret[...] ` -topatch--> `if (false) { 	return (c - 'a') + 10; }else 	if ((c >= 'A') && (c <= 'F')) { 		return (c - 'A') + 10;[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c >= 'a') && (c <= 'f')) { 	return (c - 'a') + 10; }else 	if ((c >= 'A') && (c <= 'F')) { 		ret[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.StringUtils line: 75, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return (c - 'a') + 10 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.parentId = parentId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.[...] ` -topatch--> `if (true) { 	node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.ByteArray[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.[...] ` -topatch--> `if (false) { 	node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.ByteArra[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (bytes != null) { 	node.deserialize(new org.apache.jackrabbit.mk.store.BinaryBinding(new java.io.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.core.Repository line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 56, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.commitTS = commitTS ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `commit.serialize(new org.apache.jackrabbit.mk.store.BinaryBinding(out)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `if (true) { 	this.objects.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `if (false) { 	this.objects.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `objects.put(id, bytes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `if (true) { 	this.marked.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `if (false) { 	this.marked.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (initialized) { 	throw new java.lang.IllegalStateException("already initialized"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("already initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (initialized) { 	throw new java.lang.IllegalStateException("already initialized"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("already initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (initialized) { 	throw new java.lang.IllegalStateException("already initialized"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 139, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialCacheSize = org.apache.jackrabbit.mk.store.DefaultRevisionStore.determineInitialCacheSize() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cache = com.google.common.cache.CacheBuilder.newBuilder().maximumWeight( initialCacheSize).weigher( [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 152, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `head = ids[0] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((head) == null) || ((head.getBytes().length) == 0)) {  	byte[] rawHead = org.apache.jackrabbit.[...] ` -topatch--> `if (true) {  	byte[] rawHead = org.apache.jackrabbit.mk.model.Id.fromLong(this.commitCounter.increme[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((head) == null) || ((head.getBytes().length) == 0)) {  	byte[] rawHead = org.apache.jackrabbit.[...] ` -topatch--> `if (false) {  	byte[] rawHead = org.apache.jackrabbit.mk.model.Id.fromLong(this.commitCounter.increm[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((head) == null) || ((head.getBytes().length) == 0)) {  	byte[] rawHead = org.apache.jackrabbit.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 157, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `head = new org.apache.jackrabbit.mk.model.Id(rawHead) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 161, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `initialCommit.setCommitTS(java.lang.System.currentTimeMillis()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 162, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `initialCommit.setRootNodeId(rootNodeId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 163, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pm.writeCommit(head, initialCommit) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pm.writeHead(head) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcpm) != null) { 	gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  	new j[...] ` -topatch--> `if (true) { 	this.gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  	new java.u[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcpm) != null) { 	gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  	new j[...] ` -topatch--> `if (false) { 	this.gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  	new java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcpm) != null) { 	gcExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1,  	new j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 191, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `initialized = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("not initialized"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(initialized)) { 	throw new java.lang.IllegalStateException("not initialized"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 425, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifyInitialized() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 427, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `headLock.readLock().lock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 429, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return head ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.DefaultRevisionStore line: 431, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `headLock.readLock().unlock() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.CommitGate line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentHead = newHead ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.CommitGate line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (latch != null) {  	latch.countDown(); 	latch = latchRef.getAndSet(null); 	if (latch != null) { 	[...] ` -topatch--> `if (true) {  	latch.countDown(); 	latch = this.latchRef.getAndSet(null); 	if (latch != null) { 		lat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.CommitGate line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (latch != null) {  	latch.countDown(); 	latch = latchRef.getAndSet(null); 	if (latch != null) { 	[...] ` -topatch--> `if (false) {  	latch.countDown(); 	latch = this.latchRef.getAndSet(null); 	if (latch != null) { 		la[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.CommitGate line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (latch != null) {  	latch.countDown(); 	latch = latchRef.getAndSet(null); 	if (latch != null) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 120, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int pos = 0; pos < len;) { 	int l = in.read(data, pos, ((data.length) - pos)); 	if (l < 0) { 		[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (l < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `if (true) { 	throw new java.io.EOFException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (l < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `if (false) { 	throw new java.io.EOFException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (l < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 125, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `pos += l ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StoredNode line: 62, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iter.hasNext()) { 	org.apache.jackrabbit.mk.store.Binding.StringEntry entry = iter.next(); 	p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StoredNode line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inlined) { 	childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(bindin[...] ` -topatch--> `if (true) { 	this.childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(bind[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StoredNode line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inlined) { 	childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(bindin[...] ` -topatch--> `if (false) { 	this.childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(bin[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StoredNode line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inlined) { 	childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(bindin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.StoredNode line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `childEntries = org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.deserialize(binding) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 98, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `optionalCommaAndNewline(1) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append('{') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 100, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `needComma = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 113, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append('}') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 115, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `needComma = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `optionalCommaAndNewline(name.length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(org.apache.jackrabbit.mk.json.JsopBuilder.encode(name)).append(':') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 155, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `needComma = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 217, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iter.hasNext()) { 	org.apache.jackrabbit.mk.store.Binding.BytesEntry entry = iter.next(); 	ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no InputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((in) == null) { 	throw new java.lang.IllegalStateException("no InputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("rootNodeId", rootNodeId.getBytes()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 83, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("commitTS", commitTS) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 84, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("msg", ((msg) == null ? "" : msg)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("changes", ((changes) == null ? "" : changes)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("parentId", ((parentId) == null ? "" : parentId.toString())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractCommit line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write("branchRootId", ((branchRootId) == null ? "" : branchRootId.toString())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.MutableCommit line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.rootNodeId = rootNodeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 63, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(tag) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `needComma = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.serialize(new org.apache.jackrabbit.mk.store.BinaryBinding(out)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `if (true) { 	this.objects.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `if (false) { 	this.objects.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(objects.containsKey(id))) { 	objects.put(id, bytes); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `objects.put(id, bytes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `if (true) { 	this.marked.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `if (false) { 	this.marked.put(id, bytes); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.persistence.InMemPersistence line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((gcStart) != 0) { 	marked.put(id, bytes); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 47, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 50, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeString(out, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 58, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeBytes(out, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeVarLong(out, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 79, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `byte[] raw = new byte[8] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 81, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = (raw.length) - 1; (i >= 0) && (value != 0); i--) { 	raw[i] = ((byte) (value & 255)); 	v[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 82, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `raw[i] = ((byte) (value & 255)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.Id line: 83, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `value >>>= 8 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 77, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return java.lang.String.valueOf(((char) (lastType))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matches(type)) { 	return getToken(); } ` -topatch--> `if (true) { 	return getToken(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matches(type)) { 	return getToken(); } ` -topatch--> `if (false) { 	return getToken(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (matches(type)) { 	return getToken(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 100, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return getToken() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 168, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `(pos)++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 174, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ch = jsop.charAt(((pos)++)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\"') { 	break; }else 	if (ch == '\\') { 		currentEscaped = true; 		(pos)++; 	} ` -topatch--> `if (true) { 	break; }else 	if (ch == '\\') { 		this.currentEscaped = true; 		(this.pos)++; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\"') { 	break; }else 	if (ch == '\\') { 		currentEscaped = true; 		(pos)++; 	} ` -topatch--> `if (false) { 	break; }else 	if (ch == '\\') { 		this.currentEscaped = true; 		(this.pos)++; 	}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\"') { 	break; }else 	if (ch == '\\') { 		currentEscaped = true; 		(pos)++; 	} ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 176, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\\') { 	currentEscaped = true; 	(pos)++; } ` -topatch--> `if (true) { 	this.currentEscaped = true; 	(this.pos)++; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\\') { 	currentEscaped = true; 	(pos)++; } ` -topatch--> `if (false) { 	this.currentEscaped = true; 	(this.pos)++; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ch == '\\') { 	currentEscaped = true; 	(pos)++; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 182, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentToken = jsop.substring((start + 1), ((pos) - 1)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 183, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.mk.json.JsopReader.STRING ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 84, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeBytes(out, s.getBytes("UTF-8")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null) { 	closeable.close(); } ` -topatch--> `if (true) { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null) { 	closeable.close(); } ` -topatch--> `if (false) { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null) { 	closeable.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 282, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `closeable.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastType) > (org.apache.jackrabbit.mk.json.JsopReader.COMMENT)) { 	return java.lang.String.valu[...] ` -topatch--> `if (true) { 	return java.lang.String.valueOf(((char) (this.lastType))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastType) > (org.apache.jackrabbit.mk.json.JsopReader.COMMENT)) { 	return java.lang.String.valu[...] ` -topatch--> `if (false) { 	return java.lang.String.valueOf(((char) (this.lastType))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastType) > (org.apache.jackrabbit.mk.json.JsopReader.COMMENT)) { 	return java.lang.String.valu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeVarInt(out, data.length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 107, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `out.write(data) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 197, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `optionalCommaAndNewline(value.length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 198, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 199, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `needComma = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentType) == type) { 	read(); 	return true; } ` -topatch--> `if (true) { 	read(); 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentType) == type) { 	read(); 	return true; } ` -topatch--> `if (false) { 	read(); 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentType) == type) { 	read(); 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 130, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastPos = pos ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 142, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastType = currentType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 143, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastToken = currentToken ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 144, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastEscaped = currentEscaped ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 146, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentType = readToken() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 158, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentEscaped = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((pos) >= (length)) { 	return org.apache.jackrabbit.mk.json.JsopReader.END; } ` -topatch--> `if (true) { 	return org.apache.jackrabbit.mk.json.JsopReader.END; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((pos) >= (length)) { 	return org.apache.jackrabbit.mk.json.JsopReader.END; } ` -topatch--> `if (false) { 	return org.apache.jackrabbit.mk.json.JsopReader.END; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((pos) >= (length)) { 	return org.apache.jackrabbit.mk.json.JsopReader.END; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 162, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.mk.json.JsopReader.END ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 164, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ch = jsop.charAt(pos) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch > ' ') { 	break; } ` -topatch--> `if (true) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ch > ' ') { 	break; } ` -topatch--> `if (false) { 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ch > ' ') { 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 166, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopTokenizer line: 171, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (ch) { 	case '\"' : 		{ 			while (true) { 				ch = jsop.charAt(((pos)++)); 				if (ch == '\"'[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (needComma) { 	buff.append(','); } ` -topatch--> `if (true) { 	this.buff.append(','); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (needComma) { 	buff.append(','); } ` -topatch--> `if (false) { 	this.buff.append(','); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (needComma) { 	buff.append(','); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lineLength) > 0) { 	int len = buff.length(); 	if ((len > ((lineLength) / 4)) && (((len + add) -[...] ` -topatch--> `if (true) { 	int len = this.buff.length(); 	if ((len > ((this.lineLength) / 4)) && (((len + add) - ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lineLength) > 0) { 	int len = buff.length(); 	if ((len > ((lineLength) / 4)) && (((len + add) -[...] ` -topatch--> `if (false) { 	int len = this.buff.length(); 	if ((len > ((this.lineLength) / 4)) && (((len + add) - [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((lineLength) > 0) { 	int len = buff.length(); 	if ((len > ((lineLength) / 4)) && (((len + add) -[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 249, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuilder buff = new java.lang.StringBuilder((length + 2)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset < 0) || (count < (-1))) { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset < 0) || (count < (-1))) { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset < 0) || (count < (-1))) { 	throw new java.lang.IllegalArgumentException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset == 0) && (count == (-1))) { 	return entries.values().iterator(); }else { 	if ((offset >=[...] ` -topatch--> `if (true) { 	return this.entries.values().iterator(); }else { 	if ((offset >= (this.entries.size()))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset == 0) && (count == (-1))) { 	return entries.values().iterator(); }else { 	if ((offset >=[...] ` -topatch--> `if (false) { 	return this.entries.values().iterator(); }else { 	if ((offset >= (this.entries.size())[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((offset == 0) && (count == (-1))) { 	return entries.values().iterator(); }else { 	if ((offset >=[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 111, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return entries.values().iterator() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.ChildNodeEntriesMap line: 196, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.writeMap(":children", getCount(),  new org.apache.jackrabbit.mk.store.Binding.BytesEntryIter[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 74, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeVarInt(out, value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeVarInt(out, count) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 83, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iterator.hasNext()) { 	org.apache.jackrabbit.mk.store.Binding.StringEntry entry = iterator.ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((out) == null) { 	throw new java.lang.IllegalStateException("no OutputStream provided"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 95, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.mk.util.IOUtils.writeVarInt(out, count) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.store.BinaryBinding line: 96, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (iterator.hasNext()) { 	org.apache.jackrabbit.mk.store.Binding.BytesEntry entry = iterator.nex[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractNode line: 152, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.writeMap(":props", properties.size(),  new org.apache.jackrabbit.mk.store.Binding.StringEntr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractNode line: 168, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binding.write(":inlined", (childEntries.inlined() ? 1 : 0)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.model.AbstractNode line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `childEntries.serialize(binding) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	return "null"; } ` -topatch--> `if (true) { 	return "null"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	return "null"; } ` -topatch--> `if (false) { 	return "null"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	return "null"; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) { 	return "\"\""; } ` -topatch--> `if (true) { 	return "\"\""; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) { 	return "\"\""; } ` -topatch--> `if (false) { 	return "\"\""; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) { 	return "\"\""; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 240, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < length; i++) { 	char c = s.charAt(i); 	if ((((c == '\"') || (c == '\\')) || (c <[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((c == '\"') || (c == '\\')) || (c < ' ')) || (c >= 127)) { 	java.lang.StringBuilder buff = new[...] ` -topatch--> `if (true) { 	java.lang.StringBuilder buff = new java.lang.StringBuilder(((length + 2) + (length / 8)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((c == '\"') || (c == '\\')) || (c < ' ')) || (c >= 127)) { 	java.lang.StringBuilder buff = new[...] ` -topatch--> `if (false) { 	java.lang.StringBuilder buff = new java.lang.StringBuilder(((length + 2) + (length / 8[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.json.JsopBuilder line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((((c == '\"') || (c == '\\')) || (c < ' ')) || (c >= 127)) { 	java.lang.StringBuilder buff = new[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 248, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `b = ((byte) (b)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 249, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `x |= (b & 127) << s ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (b >= 0) { 	return x; } ` -topatch--> `if (true) { 	return x; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (b >= 0) { 	return x; } ` -topatch--> `if (false) { 	return x; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (b >= 0) { 	return x; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 251, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return x ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 242, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `x &= 127 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 243, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int s = 7; ; s += 7) { 	long b = in.read(); 	if (b < 0) { 		throw new java.io.EOFException(); 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (b < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `if (true) { 	throw new java.io.EOFException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (b < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `if (false) { 	throw new java.io.EOFException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (b < 0) { 	throw new java.io.EOFException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 178, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `out.write(((byte) ((x & 127) | 128))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.mk.util.IOUtils line: 179, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `x >>>= 7 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 443.125
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Jackrabbit-Oak-ffa818f3
TOTAL_TIME=443.125
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=577
NR_FAILLING_COMPILATIONS=42
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_ffa818f3/./output_astor/AstorMain-Jackrabbit-Oak-ffa818f3//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":577,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Jackrabbit-Oak-ffa818f3","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":42,"NR_GENERATIONS":null,"TOTAL_TIME":443.125,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 528.372
694.98user 44.48system 8:49.15elapsed 139%CPU (0avgtext+0avgdata 3210808maxresident)k
92320inputs+456024outputs (37major+8303309minor)pagefaults 0swaps


Node: grisou-41.nancy.grid5000.fr



Date: Mon Dec 31 03:56:45 EST 2018

