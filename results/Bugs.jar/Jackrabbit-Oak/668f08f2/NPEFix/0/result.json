{
  "repair_end": "2018-12-30 03:41:37.301376", 
  "repair_begin": "2018-12-30 03:37:16.731430", 
  "patches": [
    {
      "locations": [
        {
          "executionCount": 0, 
          "line": 65, 
          "class": "org.apache.jackrabbit.mk.store.DefaultRevisionStore", 
          "sourceStart": 2513, 
          "sourceEnd": 2516
        }
      ], 
      "patch": "--- store/DefaultRevisionStore.java\n+++ store/DefaultRevisionStore.java\n@@ -64,15 +64,32 @@\n         head = pm.readHead();\n-        if (head == null || head.getBytes().length == 0) {\n-            // assume virgin repository\n-            byte[] rawHead = longToBytes(++headCounter);\n-            head = new Id(rawHead);\n-            \n-            Id rootNodeId = pm.writeNode(new MutableNode(this, \"/\"));\n-            MutableCommit initialCommit = new MutableCommit();\n-            initialCommit.setCommitTS(System.currentTimeMillis());\n-            initialCommit.setRootNodeId(rootNodeId);\n-            pm.writeCommit(head, initialCommit);\n-            pm.writeHead(head);\n+        if (head == null) {\n+            if (head == null || new Id(new byte[100]).getBytes().length == 0) {\n+                // assume virgin repository\n+                byte[] rawHead = longToBytes(++headCounter);\n+                head = new Id(rawHead);\n+                \n+                Id rootNodeId = pm.writeNode(new MutableNode(this, \"/\"));\n+                MutableCommit initialCommit = new MutableCommit();\n+                initialCommit.setCommitTS(System.currentTimeMillis());\n+                initialCommit.setRootNodeId(rootNodeId);\n+                pm.writeCommit(head, initialCommit);\n+                pm.writeHead(head);\n+            } else {\n+                headCounter = Long.parseLong(head.toString(), 16);\n+            }\n         } else {\n-            headCounter = Long.parseLong(head.toString(), 16);\n+            if (head == null || head.getBytes().length == 0) {\n+                // assume virgin repository\n+                byte[] rawHead = longToBytes(++headCounter);\n+                head = new Id(rawHead);\n+                \n+                Id rootNodeId = pm.writeNode(new MutableNode(this, \"/\"));\n+                MutableCommit initialCommit = new MutableCommit();\n+                initialCommit.setCommitTS(System.currentTimeMillis());\n+                initialCommit.setRootNodeId(rootNodeId);\n+                pm.writeCommit(head, initialCommit);\n+                pm.writeHead(head);\n+            } else {\n+                headCounter = Long.parseLong(head.toString(), 16);\n+            }\n         }\n"
    }
  ]
}