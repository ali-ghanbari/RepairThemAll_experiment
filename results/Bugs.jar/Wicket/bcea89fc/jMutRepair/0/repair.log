cd /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jMutRepair \
	-location . \
	-id Wicket-bcea89fc \
	-failing org.apache.wicket.util.collections.IntHashMapTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder wicket-util/src/main/java \
	-srctestfolder wicket-util/src/test/java \
	-binjavafolder wicket-util/target/classes \
	-bintestfolder wicket-util/target/test-classes \
	-parameters x:x \
	-dependencies /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO ] fr.inria.astor.core.setup.ProjectConfiguration.getVersionJDK(ProjectConfiguration.java:282) - Version of the JVM used: 1.7.0-u80-unofficial
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:370) - Java version of the JDK used to run tests: 1.7.0-u80-unofficial
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:371) - The compliance of the JVM is:  7
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:645) - command line arguments: [-mode  jMutRepair  -location  .  -id  Wicket-bcea89fc  -failing  org.apache.wicket.util.collections.IntHashMapTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  wicket-util/src/main/java  -srctestfolder  wicket-util/src/test/java  -binjavafolder  wicket-util/target/classes  -bintestfolder  wicket-util/target/test-classes  -parameters  x:x  -dependencies  /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
[INFO ] fr.inria.main.evolution.AstorMain.execute(AstorMain.java:216) - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:849) - Source folders: [/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:868) - Source Test folders: [/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/test/java]
java.lang.ClassNotFoundException: archetype-resources.src.test.java.TestHomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.test.java.Start
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.HomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.WicketApplication
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at fr.inria.astor.core.faultlocalization.entity.runtestsuite.Processor.process(Processor.java:52)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:48)
	at fr.inria.astor.core.faultlocalization.entity.TestClassesFinder.call(TestClassesFinder.java:40)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//bin//default from 44 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar, /home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar, /home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes/, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes/, /home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar, /home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar, /home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar, /home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar, /home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes/, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes/, /home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes/, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar, /home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes/, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes/, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes/, /home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes/, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes/, /home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes/, /home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes/, /home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, /home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes/, /home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes/, /home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar, /home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, /home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar, /home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes/, /home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes/, /home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar, /home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes/, /home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//bin//default, /home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes/, /home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase#markupFiles
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.license.ApacheLicenceHeaderTest#licenseHeaders
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.wicket.util.collections.IntHashMapTest#serialize
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:182, fails: 3, GZoltar suspicious 3710, with positive susp 436
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 182
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 433 with susp > 0.1, we consider: 433
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./wicket-util/src/main/java, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes/, /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar, /home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar, /home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar, /home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar, /home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar, /home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar, /home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar, /home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar, /home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, /home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar, /home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, /home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar, /home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, /home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar, /home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, /home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar, /home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, /home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar, /home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar, /home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar, /home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar, /home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, /home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, /home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, /home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar, /home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar, /home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 433
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{info(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=603, susp=0.4082482904638631]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{info(Ljava/lang/String;Ljava/lang/Object;)V 0.0, lineNumber=604, susp=0.4082482904638631]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=259, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply; 0.0, lineNumber=260, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=402, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=405, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=406, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V 0.0, lineNumber=407, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=133, susp=0.23570226039551587]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=364, susp=0.23570226039551587]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=107, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=113, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=117, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=118, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=122, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=124, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=132, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=133, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=134, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=136, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=139, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=140, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=141, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=142, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=143, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=144, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=145, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=147, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=148, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=149, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=150, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=152, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{incSize()V 0.0, lineNumber=156, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{incSize()V 0.0, lineNumber=157, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=ch.qos.logback.classic.LoggerContext{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=45, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=ch.qos.logback.classic.selector.DefaultContextSelector{getLoggerContext()Lch/qos/logback/classic/LoggerContext; 0.0, lineNumber=30, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=ch.qos.logback.classic.selector.DefaultContextSelector{getDefaultLoggerContext()Lch/qos/logback/classic/LoggerContext; 0.0, lineNumber=34, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getName()Ljava/lang/String; 0.0, lineNumber=123, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=132, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=135, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=136, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=137, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=138, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=140, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=141, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=145, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=355, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=356, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=363, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=367, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=368, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=369, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=ch.qos.logback.classic.Logger{createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger; 0.0, lineNumber=370, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.ContextSelectorStaticBinder, methodName=ch.qos.logback.classic.util.ContextSelectorStaticBinder{getContextSelector()Lch/qos/logback/classic/selector/ContextSelector; 0.0, lineNumber=104, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=269, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/String;)Lorg/slf4j/Logger; 0.0, lineNumber=270, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getLogger(Ljava/lang/Class;)Lorg/slf4j/Logger; 0.0, lineNumber=281, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=293, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=297, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=org.slf4j.LoggerFactory{getILoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=299, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=40, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=41, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=42, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=ch.qos.logback.classic.util.LoggerNameUtil{getSeparatorIndexOf(Ljava/lang/String;I)I 0.0, lineNumber=44, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getSingleton()Lorg/slf4j/impl/StaticLoggerBinder; 0.0, lineNumber=68, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=103, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=107, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=org.slf4j.impl.StaticLoggerBinder{getLoggerFactory()Lorg/slf4j/ILoggerFactory; 0.0, lineNumber=111, susp=0.20412414523193154]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 433,  64
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 64
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 64, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= mutationspace
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= wicket-util/target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 22228
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= if-conditions
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= wicket-util/src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.wicket.util.collections.IntHashMapTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Wicket-bcea89fc
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= wicket-util/target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jMutRepair
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-request/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-datetime/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-extensions/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-devutils/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-ioc/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-spring/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-velocity/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-auth-roles/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-guice/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-jmx/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-objectsizeof-agent/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-bean-validation/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-cdi-1.1/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-experimental/wicket-atmosphere/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-examples/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/archetypes/quickstart/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-common-tests/target/classes:/tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.2.RELEASE/spring-web-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.2.RELEASE/spring-core-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.2.RELEASE/spring-aop-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.2.RELEASE/spring-expression-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.2.RELEASE/spring-context-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.2.RELEASE/spring-beans-4.1.2.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= wicket-util/src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `isBootstrap() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(isSnake()) && ((this.prev) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && ((this.prev) == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && ((this.prev) >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && ((this.prev) > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && ((this.prev) <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && ((this.prev) < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) && (!((this.prev) != null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `(!(isSnake())) || ((this.prev) != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(!(isSnake())) && ((prev) != null) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `count == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `count != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `count >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `count > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `count < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `count <= 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `pathname.isDirectory() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) == (!false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) != false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) >= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) > false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) <= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `(relativePathname.equals("target")) < false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(relativePathname.equals("target")) == false ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `pathname.getName().equals(ignore) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found == (!false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found != false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found >= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found > false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found <= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `found < false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 173, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `found == false ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `pathname.isFile() ` -topatch--> `!                                                                        (pathname.isFile())` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(!                                                                          (ignoreFile(pathname))) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) == (!false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) != false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) >= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) > false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) <= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `(ignoreFile(pathname)) < false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFile(pathname)) == false ` -topatch--> `!                                                                          ((ignoreFile(pathname)) =[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `pathname.getName().endsWith(("." + suffix)) ` -topatch--> `!                                                                              (pathname.getName().e[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `(this.ignoreFiles) == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `(this.ignoreFiles) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `(this.ignoreFiles) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `(this.ignoreFiles) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `(this.ignoreFiles) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(ignoreFiles) != null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `ignoreFile.isDirectory() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `ignoreFile.isFile() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `pathname.getName().equals(ignorePath) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `closeable == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `closeable >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `closeable > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `closeable <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `closeable < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `closeable != null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 244, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(org.apache.wicket.util.string.Strings.isEmpty(property)) ` -topatch--> `org.apache.wicket.util.string.Strings.isEmpty(property)` (spoon.support.reflect.code.CtInvocationImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `(files.size()) == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `(files.size()) != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `(files.size()) >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `(files.size()) <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `(files.size()) < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 301, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(files.size()) > 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `licenseType != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `licenseType >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `licenseType > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `licenseType <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `licenseType < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 323, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `licenseType == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `files < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 363, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files != null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `header.startsWith("<?xml") ` -topatch--> `!                                                           (header.startsWith("<?xml"))` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `(sb.length()) == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `(sb.length()) != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `(sb.length()) >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `(sb.length()) <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `(sb.length()) < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.XmlLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(sb.length()) > 0 ` -topatch--> `!                                                                      ((sb.length()) > 0)` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) && (rev == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (!(rev == null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) && (rev == null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev != null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev >= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev > null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev <= null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (rev < null)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `(orig == null) || (!(rev == null))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(orig == null) || (rev == null) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && ((rev.length) != 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && ((rev.length) >= 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && ((rev.length) > 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && ((rev.length) <= 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && ((rev.length) < 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) && (!((rev.length) == 0))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `((this.orig.length) == 0) || ((rev.length) == 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Diff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((orig.length) == 0) && ((rev.length) == 0) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `delta != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `delta >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `delta > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `delta <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `delta < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Revision line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `delta == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.AbstractLicenseHeaderHandler line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.string.Strings.isEmpty(licenseHeader) ` -topatch--> `!                                                                      (org.apache.wicket.util.strin[...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) && ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k == d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k >= d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k > d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k <= d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k < d) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((!(k != d)) && ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) == (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) != (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) >= (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) > (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) <= (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) && (!((diagonal[kminus].i) < (diagonal[kplus].i))))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || ((k != d) || ((diagonal[kminus].i) < (diagonal[kplus].i)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `(k == (-d)) || (!((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k == (-d)) || ((k != d) && ((diagonal[kminus].i) < (diagonal[kplus].i))) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `i == (node.i)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `i != (node.i)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `i >= (node.i)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `i <= (node.i)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `i < (node.i)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `i > (node.i) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (j == M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (j != M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (j > M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (j <= M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (j < M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) && (!(j >= M))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `(i >= N) || (j >= M)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(i >= N) && (j >= M) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `path != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `path >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `path > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `path <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `path < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `path == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `orig < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `orig == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `rev < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `rev == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `path.isSnake() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `path.isSnake() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.MyersDiff line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `path.isSnake() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) == (!false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) != false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) >= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) > false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) <= false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `(licenseHeaderHandler.checkLicenseHeader(file)) < false` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(licenseHeaderHandler.checkLicenseHeader(file)) == false ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) &&  ((licenseHeaderHandler.addLicenseHeader(file)) == false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((!                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ((! (licenseHeaderHandler.addLicenseHeader(file))) == false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) == (!false))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) != false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) >= false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) > false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) <= false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || ( (licenseHeaderHandler.addLicenseHeader(file)) < false)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `((this.addHeaders) == false) || (! ((licenseHeaderHandler.addLicenseHeader(file)) == false))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 278, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((addHeaders) == false) ||  ((licenseHeaderHandler.addLicenseHeader(file)) == false) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `files != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `files >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `files > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `files <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `files < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `files == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 225, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `key != (e.key)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `key >= (e.key)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `key > (e.key)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `key <= (e.key)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `key < (e.key)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `key == (e.key) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `((this.size)++) == (this.threshold)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `((this.size)++) != (this.threshold)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `((this.size)++) > (this.threshold)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `((this.size)++) <= (this.threshold)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `((this.size)++) < (this.threshold)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 745, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((size)++) >= (threshold) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `remaining != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `remaining >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `remaining > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `remaining <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `remaining < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining == 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) &&  ((off + len) < [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((!                                                                                               [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(((!                                                                                                [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((!                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || ( (off + len) ==[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || ( (off + len) !=[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || ( (off + len) >=[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || ( (off + len) > [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || ( (off + len) <=[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) || (! ((off + len) [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((((off < 0) || (off > (b.length))) || (len < 0)) || ((off + len) > (b.length))) ||  ((off + len) < [...] ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `len != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `len >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `len > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `len <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `len < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `len == 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `remaining == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `remaining != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `remaining >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `remaining <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `remaining < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `remaining > 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `(this.currentBufferIndex) == ((this.buffers.size()) - 1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `(this.currentBufferIndex) != ((this.buffers.size()) - 1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `(this.currentBufferIndex) >= ((this.buffers.size()) - 1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `(this.currentBufferIndex) > ((this.buffers.size()) - 1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `(this.currentBufferIndex) <= ((this.buffers.size()) - 1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBufferIndex) < ((buffers.size()) - 1) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `(this.currentBuffer) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `(this.currentBuffer) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `(this.currentBuffer) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `(this.currentBuffer) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `(this.currentBuffer) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.ByteArrayOutputStream line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentBuffer) == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 803, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(modCount.compareAndSet(expectedModCount, expectedModCount)) ` -topatch--> `this.modCount.compareAndSet(this.expectedModCount, this.expectedModCount)` (spoon.support.reflect.code.CtInvocationImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `e < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.collections.IntHashMap line: 808, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `e == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `s != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `s >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `s > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `s <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `s < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 746, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(searchFor == null) && ("".equals(searchFor))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `(searchFor == null) || (!("".equals(searchFor)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 753, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(searchFor == null) || ("".equals(searchFor)) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `replaceWith != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `replaceWith >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `replaceWith > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `replaceWith <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `replaceWith < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 760, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWith == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `matchIndex != (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `matchIndex >= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `matchIndex > (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `matchIndex <= (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `matchIndex < (-1)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 768, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `matchIndex == (-1) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `replaceWithLength == searchForLength` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `replaceWithLength != searchForLength` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `replaceWithLength >= searchForLength` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `replaceWithLength <= searchForLength` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `replaceWithLength < searchForLength` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 781, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `replaceWithLength > searchForLength ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s instanceof org.apache.wicket.util.string.AppendingStringBuffer ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.Strings line: 1271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `s instanceof java.lang.String ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `obj instanceof org.apache.wicket.util.string.AppendingStringBuffer ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `obj instanceof java.lang.StringBuilder ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `obj instanceof java.lang.StringBuffer ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `str != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `str >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `str > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `str <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `str < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `str == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `newcount == (this.value.length)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `newcount != (this.value.length)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `newcount >= (this.value.length)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `newcount <= (this.value.length)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `newcount < (this.value.length)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.string.AppendingStringBuffer line: 375, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `newcount > (value.length) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 383.41
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Wicket-bcea89fc
TOTAL_TIME=383.41
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=269
NR_FAILLING_COMPILATIONS=121
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jMutRepair_Bug_dot_jar_Wicket_bcea89fc/./output_astor/AstorMain-Wicket-bcea89fc//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":269,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Wicket-bcea89fc","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":121,"NR_GENERATIONS":null,"TOTAL_TIME":383.41,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 407.808
485.37user 37.21system 6:48.76elapsed 127%CPU (0avgtext+0avgdata 1677608maxresident)k
95872inputs+133688outputs (45major+3769295minor)pagefaults 0swaps


Node: graphene-110.nancy.grid5000.fr



Date: Mon Feb  4 17:05:33 EST 2019

