cd /tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source wicket-util/src/main/java \
	--classpath "wicket-util/target/classes:wicket-util/target/test-classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-request/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-core/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-datetime/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-extensions/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-devutils/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-ioc/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-cdi/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-spring/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-velocity/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-auth-roles/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-guice/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-jmx/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-objectsizeof-agent/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-bean-validation/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-cdi-1.1/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-experimental/wicket-atmosphere/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-examples/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/archetypes/quickstart/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-core/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-javax/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-jetty/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/testing/wicket-common-tests/target/classes:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/testing/wicket-js-tests/target/classes:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.1.RELEASE/spring-context-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.1.RELEASE/spring-web-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.1.RELEASE/spring-core-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.1.RELEASE/spring-expression-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.1.RELEASE/spring-aop-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.1.RELEASE/spring-beans-4.1.1.RELEASE.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
java.lang.ClassNotFoundException: archetype-resources.src.main.java.HomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.WicketApplication
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.test.java.Start
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.test.java.TestHomePage
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
05:52:04.448 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [wicket-util/src/main/java]
05:52:04.456 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-util/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-util/target/test-classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-request/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-core/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-datetime/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-extensions/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-devutils/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-ioc/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-cdi/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-spring/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-velocity/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-auth-roles/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-guice/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-jmx/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-objectsizeof-agent/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-bean-validation/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-cdi-1.1/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-experimental/wicket-atmosphere/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-examples/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/archetypes/quickstart/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-core/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-javax/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-jetty/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-jetty9/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/wicket-native-websocket/wicket-native-websocket-tomcat/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/testing/wicket-common-tests/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Wicket_2fc6a395/testing/wicket-js-tests/target/classes/, file:/home/tdurieux/.m2/repository/org/springframework/spring-context/4.1.1.RELEASE/spring-context-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-coyote/7.0.55/tomcat-coyote-7.0.55.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.16.v20140903/jetty-io-8.1.16.v20140903.jar, file:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.0.7.v20131107/websocket-common-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1.2_spec/1.0.0.Alpha1/jboss-annotations-api_1.2_spec-1.0.0.Alpha1.jar, file:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-impl/0.5/deltaspike-core-impl-0.5.jar, file:/home/tdurieux/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-client-impl/9.2.2.v20140723/javax-websocket-client-impl-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar, file:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-catalina/7.0.55/tomcat-catalina-7.0.55.jar, file:/home/tdurieux/.m2/repository/org/atmosphere/atmosphere-runtime/2.2.2/atmosphere-runtime-2.2.2.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-util/7.0.55/tomcat-util-7.0.55.jar, file:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.1.3/jackson-databind-2.4.1.3.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.1.1/jackson-core-2.4.1.1.jar, file:/home/tdurieux/.m2/repository/org/springframework/spring-web/4.1.1.RELEASE/spring-web-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.2.2.v20140723/websocket-client-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar, file:/home/tdurieux/.m2/repository/javax/servlet/jsp/javax.servlet.jsp-api/2.3.2-b01/javax.servlet.jsp-api-2.3.2-b01.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-websocket/8.1.16.v20140903/jetty-websocket-8.1.16.v20140903.jar, file:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar, file:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.1/cdi-api-1.1.jar, file:/home/tdurieux/.m2/repository/org/webjars/jquery-atmosphere/2.2.3/jquery-atmosphere-2.2.3.jar, file:/home/tdurieux/.m2/repository/org/httpunit/httpunit/1.7.2/httpunit-1.7.2.jar, file:/home/tdurieux/.m2/repository/org/springframework/spring-core/4.1.1.RELEASE/spring-core-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/org/jboss/spec/javax/el/jboss-el-api_3.0_spec/1.0.0.Alpha1/jboss-el-api_3.0_spec-1.0.0.Alpha1.jar, file:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.jar, file:/home/tdurieux/.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar, file:/home/tdurieux/.m2/repository/org/apache/deltaspike/core/deltaspike-core-api/0.5/deltaspike-core-api-0.5.jar, file:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, file:/home/tdurieux/.m2/repository/com/github/cage/cage/1.0/cage-1.0.jar, file:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, file:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-annotations/9.2.2.v20140723/jetty-annotations-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, file:/home/tdurieux/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, file:/home/tdurieux/.m2/repository/rhino/js/1.6R5/js-1.6R5.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.2.2.v20140723/jetty-io-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-webapp/9.2.2.v20140723/jetty-webapp-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/jboss/weld/weld-spi/2.1.Final/weld-spi-2.1.Final.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar, file:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.2.2.v20140723/websocket-server-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.2.2.v20140723/websocket-servlet-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, file:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-servlet-api/7.0.55/tomcat-servlet-api-7.0.55.jar, file:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar, file:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/home/tdurieux/.m2/repository/de/agilecoders/wicket/webjars/wicket-webjars/0.5.0-M2/wicket-webjars-0.5.0-M2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/aggregate/jetty-all-server/8.1.16.v20140903/jetty-all-server-8.1.16.v20140903.jar, file:/home/tdurieux/.m2/repository/org/jboss/weld/servlet/weld-servlet/2.2.4.Final/weld-servlet-2.2.4.Final.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-plus/9.2.2.v20140723/jetty-plus-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.0.7.v20131107/websocket-api-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, file:/home/tdurieux/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-util/7.0.0-SNAPSHOT/wicket-util-7.0.0-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/jboss/weld/weld-api/2.1.Final/weld-api-2.1.Final.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-xml/9.2.2.v20140723/jetty-xml-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, file:/home/tdurieux/.m2/repository/org/jboss/seam/conversation/seam-conversation-spi/3.0.0.Final/seam-conversation-spi-3.0.0.Final.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, file:/home/tdurieux/.m2/repository/net/sf/jtidy/jtidy/r938/jtidy-r938.jar, file:/home/tdurieux/.m2/repository/javax/el/el-api/2.2/el-api-2.2.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.2.2.v20140723/jetty-http-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/nekohtml/nekohtml/0.9.5/nekohtml-0.9.5.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, file:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/wicket/wicket-request/7.0.0-SNAPSHOT/wicket-request-7.0.0-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-juli/7.0.55/tomcat-juli-7.0.55.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-jndi/9.2.2.v20140723/jetty-jndi-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/com/jhlabs/filters/2.0.235/filters-2.0.235.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.2.2.v20140723/jetty-util-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, file:/home/tdurieux/.m2/repository/org/jglue/cdi-unit/cdi-unit/2.2.1/cdi-unit-2.2.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-servlet/9.0.7.v20131107/websocket-servlet-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/springframework/spring-expression/4.1.1.RELEASE/spring-expression-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/javax/el/javax.el-api/3.0.1-b04/javax.el-api-3.0.1-b04.jar, file:/home/tdurieux/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar, file:/home/tdurieux/.m2/repository/org/springframework/spring-aop/4.1.1.RELEASE/spring-aop-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/org/glassfish/web/el-impl/2.2/el-impl-2.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/9.0.7.v20131107/jetty-io-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/jboss/weld/se/weld-se-core/2.1.0.Final/weld-se-core-2.1.0.Final.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/9.2.2.v20140723/jetty-security-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/9.0.7.v20131107/jetty-util-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.7/jcl-over-slf4j-1.7.7.jar, file:/home/tdurieux/.m2/repository/org/reflections/reflections/0.9.8/reflections-0.9.8.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-annotations-api/7.0.55/tomcat-annotations-api-7.0.55.jar, file:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.1/xmlParserAPIs-2.6.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-common/9.2.2.v20140723/websocket-common-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-client/9.0.7.v20131107/websocket-client-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar, file:/home/tdurieux/.m2/repository/org/glassfish/javax.el/3.0.1-b05/javax.el-3.0.1-b05.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, file:/home/tdurieux/.m2/repository/com/github/axet/kaptcha/0.0.9/kaptcha-0.0.9.jar, file:/home/tdurieux/.m2/repository/javax/websocket/javax.websocket-api/1.0/javax.websocket-api-1.0.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/javax-websocket-server-impl/9.2.2.v20140723/javax-websocket-server-impl-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.16.v20140903/jetty-util-8.1.16.v20140903.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.security.auth.message/1.0.0.v201108011116/javax.security.auth.message-1.0.0.v201108011116.jar, file:/home/tdurieux/.m2/repository/joda-time/joda-time/2.4/joda-time-2.4.jar, file:/home/tdurieux/.m2/repository/org/jboss/classfilewriter/jboss-classfilewriter/1.0.4.Final/jboss-classfilewriter-1.0.4.Final.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar, file:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.2_spec/1.0.0.Alpha3/jboss-interceptors-api_1.2_spec-1.0.0.Alpha3.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/9.0.7.v20131107/jetty-http-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-api/9.2.2.v20140723/websocket-api-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/9.2.2.v20140723/jetty-server-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/9.2.2.v20140723/jetty-servlet-9.2.2.v20140723.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar, file:/home/tdurieux/.m2/repository/org/jboss/weld/weld-core-impl/2.1.0.Final/weld-core-impl-2.1.0.Final.jar, file:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.16.v20140903/jetty-http-8.1.16.v20140903.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/websocket/websocket-server/9.0.7.v20131107/websocket-server-9.0.7.v20131107.jar, file:/home/tdurieux/.m2/repository/org/springframework/spring-beans/4.1.1.RELEASE/spring-beans-4.1.1.RELEASE.jar, file:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/tomcat/tomcat-api/7.0.55/tomcat-api-7.0.55.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
05:52:04.457 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
05:52:04.457 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.wicket.util.LongEncoderTest, org.apache.wicket.util.collections.MicroMapTest, org.apache.wicket.util.collections.MiniMapTest, org.apache.wicket.util.collections.MostRecentlyUsedMapTest, org.apache.wicket.util.collections.ReverseListIteratorTest, org.apache.wicket.util.convert.converter.BigIntegerConverterTest, org.apache.wicket.util.convert.converters.ConvertersTest, org.apache.wicket.util.crypt.Base64Test, org.apache.wicket.util.encoding.UrlDecoderTest, org.apache.wicket.util.encoding.UrlEncoderTest, org.apache.wicket.util.file.FilesTest, org.apache.wicket.util.file.WebXmlFileTest, org.apache.wicket.util.io.FullyBufferedReaderTest, org.apache.wicket.util.io.LastModifiedTest, org.apache.wicket.util.io.XmlReaderTest, org.apache.wicket.util.lang.ArgsTest, org.apache.wicket.util.lang.BytesTest, org.apache.wicket.util.lang.ClassesTest, org.apache.wicket.util.lang.NumbersTest, org.apache.wicket.util.lang.ObjectsTest, org.apache.wicket.util.lang.PackagesTest, org.apache.wicket.util.lang.PrimitivesTest, org.apache.wicket.util.license.ApacheLicenceHeaderTest, org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase, org.apache.wicket.util.parse.metapattern.MetaPatternTest, org.apache.wicket.util.parse.metapattern.parsers.VariableAssignmentParserTest, org.apache.wicket.util.resource.ResourceUtilsTest, org.apache.wicket.util.size.BytesTest, org.apache.wicket.util.string.AppendingStringBufferTest, org.apache.wicket.util.string.PrependingStringBufferTest, org.apache.wicket.util.string.StringListTest, org.apache.wicket.util.string.StringValueTest, org.apache.wicket.util.string.StringsTest, org.apache.wicket.util.string.interpolator.VariableInterpolatorTest, org.apache.wicket.util.time.DurationTest, org.apache.wicket.util.time.TimeFrameTest, org.apache.wicket.util.time.TimeMapTest, org.apache.wicket.util.time.TimeOfDayTest, org.apache.wicket.util.time.TimeTest, org.apache.wicket.util.value.LongValueTest, org.apache.wicket.util.value.ValueMapTest, org.apache.wicket.util.visit.AllVisitFilterTest, org.apache.wicket.util.visit.ClassVisitFilterTest]
05:52:04.459 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[wicket-util/src/main/java], projectClasspath='[Ljava.net.URL;@45c8e616', projectTests=[org.apache.wicket.util.LongEncoderTest, org.apache.wicket.util.collections.MicroMapTest, org.apache.wicket.util.collections.MiniMapTest, org.apache.wicket.util.collections.MostRecentlyUsedMapTest, org.apache.wicket.util.collections.ReverseListIteratorTest, org.apache.wicket.util.convert.converter.BigIntegerConverterTest, org.apache.wicket.util.convert.converters.ConvertersTest, org.apache.wicket.util.crypt.Base64Test, org.apache.wicket.util.encoding.UrlDecoderTest, org.apache.wicket.util.encoding.UrlEncoderTest, org.apache.wicket.util.file.FilesTest, org.apache.wicket.util.file.WebXmlFileTest, org.apache.wicket.util.io.FullyBufferedReaderTest, org.apache.wicket.util.io.LastModifiedTest, org.apache.wicket.util.io.XmlReaderTest, org.apache.wicket.util.lang.ArgsTest, org.apache.wicket.util.lang.BytesTest, org.apache.wicket.util.lang.ClassesTest, org.apache.wicket.util.lang.NumbersTest, org.apache.wicket.util.lang.ObjectsTest, org.apache.wicket.util.lang.PackagesTest, org.apache.wicket.util.lang.PrimitivesTest, org.apache.wicket.util.license.ApacheLicenceHeaderTest, org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase, org.apache.wicket.util.parse.metapattern.MetaPatternTest, org.apache.wicket.util.parse.metapattern.parsers.VariableAssignmentParserTest, org.apache.wicket.util.resource.ResourceUtilsTest, org.apache.wicket.util.size.BytesTest, org.apache.wicket.util.string.AppendingStringBufferTest, org.apache.wicket.util.string.PrependingStringBufferTest, org.apache.wicket.util.string.StringListTest, org.apache.wicket.util.string.StringValueTest, org.apache.wicket.util.string.StringsTest, org.apache.wicket.util.string.interpolator.VariableInterpolatorTest, org.apache.wicket.util.time.DurationTest, org.apache.wicket.util.time.TimeFrameTest, org.apache.wicket.util.time.TimeMapTest, org.apache.wicket.util.time.TimeOfDayTest, org.apache.wicket.util.time.TimeTest, org.apache.wicket.util.value.LongValueTest, org.apache.wicket.util.value.ValueMapTest, org.apache.wicket.util.visit.AllVisitFilterTest, org.apache.wicket.util.visit.ClassVisitFilterTest], complianceLevel=7, outputFolder=., json=true}
05:52:04.459 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
05:52:04.464 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 802 MB
05:52:04.464 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
05:52:04.464 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 981 MB
05:52:04.464 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
05:52:04.465 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
05:52:04.465 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
05:52:21.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
05:52:21.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.file.Files:368 which is executed by 3 tests
67881560
05:52:22.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
05:52:22.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.file.Files:367 which is executed by 3 tests
67881560
05:52:22.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
05:52:22.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.file.Files:423 which is executed by 2 tests
67881560
05:52:23.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
05:52:23.207 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (87 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 0

05:52:23.208 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
05:52:23.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
05:52:23.286 [pool-6-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (74 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 0

05:52:23.286 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
05:52:23.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
05:52:23.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.file.Files:420 which is executed by 2 tests
67881560
05:52:23.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
05:52:23.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.io.Connections:50 which is executed by 2 tests
-902494922
05:52:23.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
05:52:23.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:698 which is executed by 1 tests
-217105821
05:52:24.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:24.274 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:25.437 [pool-7-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Strings.java:343: error: missing return statement
    }
    ^
05:52:25.457 [pool-7-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public final class Strings {
    public static final java.lang.String LINE_SEPARATOR;

    private static final char[] HEX_DIGIT = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };

    private static final java.util.regex.Pattern HTML_NUMBER_REGEX = java.util.regex.Pattern.compile("&#\\d+;");

    private static final java.lang.String[] NO_STRINGS = new java.lang.String[0];

    public static final java.lang.String SESSION_ID_PARAM_NAME = java.lang.System.getProperty("wicket.jsessionid.name", "jsessionid");

    private static final java.lang.String SESSION_ID_PARAM = (';' + (org.apache.wicket.util.string.Strings.SESSION_ID_PARAM_NAME)) + '=';

    static {
        LINE_SEPARATOR = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.String>() {
            @java.lang.Override
            public java.lang.String run() {
                return java.lang.System.getProperty("line.separator");
            }
        });
    }

    private Strings() {
    }

    public static java.lang.String afterFirst(final java.lang.String s, final char c) {
        if (s == null) {
            return null;
        }
        final int index = s.indexOf(c);
        if (index == (-1)) {
            return "";
        }
        return s.substring((index + 1));
    }

    public static java.lang.String afterFirstPathComponent(final java.lang.String path, final char separator) {
        return org.apache.wicket.util.string.Strings.afterFirst(path, separator);
    }

    public static java.lang.String afterLast(final java.lang.String s, final char c) {
        if (s == null) {
            return null;
        }
        final int index = s.lastIndexOf(c);
        if (index == (-1)) {
            return "";
        }
        return s.substring((index + 1));
    }

    public static java.lang.String beforeFirst(final java.lang.String s, final char c) {
        if (s == null) {
            return null;
        }
        final int index = s.indexOf(c);
        if (index == (-1)) {
            return "";
        }
        return s.substring(0, index);
    }

    public static java.lang.String beforeLast(final java.lang.String s, final char c) {
        if (s == null) {
            return null;
        }
        final int index = s.lastIndexOf(c);
        if (index == (-1)) {
            return "";
        }
        return s.substring(0, index);
    }

    public static java.lang.String beforeLastPathComponent(final java.lang.String path, final char separator) {
        return org.apache.wicket.util.string.Strings.beforeLast(path, separator);
    }

    public static java.lang.String capitalize(final java.lang.String s) {
        if (s == null) {
            return null;
        }
        final char[] chars = s.toCharArray();
        if ((chars.length) > 0) {
            chars[0] = java.lang.Character.toUpperCase(chars[0]);
        }
        return new java.lang.String(chars);
    }

    public static java.lang.CharSequence escapeMarkup(final java.lang.CharSequence s) {
        return org.apache.wicket.util.string.Strings.escapeMarkup(s, false);
    }

    public static java.lang.CharSequence escapeMarkup(final java.lang.CharSequence s, final boolean escapeSpaces) {
        return org.apache.wicket.util.string.Strings.escapeMarkup(s, escapeSpaces, false);
    }

    public static java.lang.CharSequence escapeMarkup(final java.lang.CharSequence s, final boolean escapeSpaces, final boolean convertToHtmlUnicodeEscapes) {
        if (s == null) {
            return null;
        }
        int len = s.length();
        final org.apache.wicket.util.string.AppendingStringBuffer buffer = new org.apache.wicket.util.string.AppendingStringBuffer(((int) (len * 1.1)));
        for (int i = 0; i < len; i++) {
            final char c = s.charAt(i);
            switch (c) {
                case '\t' :
                    if (escapeSpaces) {
                        buffer.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                    }else {
                        buffer.append(c);
                    }
                    break;
                case ' ' :
                    if (escapeSpaces) {
                        buffer.append("&nbsp;");
                    }else {
                        buffer.append(c);
                    }
                    break;
                case '<' :
                    buffer.append("&lt;");
                    break;
                case '>' :
                    buffer.append("&gt;");
                    break;
                case '&' :
                    buffer.append("&amp;");
                    break;
                case '"' :
                    buffer.append("&quot;");
                    break;
                case '\'' :
                    buffer.append("&#039;");
                    break;
                default :
                    int ci = 65535 & c;
                    if (((((ci < 32) && (ci != 9)) && (ci != 10)) && (ci != 13)) || (convertToHtmlUnicodeEscapes && (ci > 159))) {
                        buffer.append("&#");
                        buffer.append(java.lang.Integer.toString(ci));
                        buffer.append(';');
                    }else {
                        buffer.append(c);
                    }
                    break;
            }
        }
        return buffer;
    }

    public static java.lang.CharSequence unescapeMarkup(final java.lang.String markup) {
        java.lang.String unescapedMarkup = org.apache.wicket.util.string.StringEscapeUtils.unescapeHtml(markup);
        return unescapedMarkup;
    }

    public static java.lang.String firstPathComponent(final java.lang.String path, final char separator) {
        if (path == null) {
            return null;
        }
        final int index = path.indexOf(separator);
        if (index == (-1)) {
            return path;
        }
        return path.substring(0, index);
    }

    public static java.lang.String fromEscapedUnicode(final java.lang.String escapedUnicodeString) {
        int off = 0;
        char[] in = escapedUnicodeString.toCharArray();
        int len = in.length;
        char[] out = new char[len];
        char aChar;
        int outLen = 0;
        int end = off + len;
        while (off < end) {
            aChar = in[(off++)];
            if (aChar == '\\') {
                aChar = in[(off++)];
                if (aChar == 'u') {
                    int value = 0;
                    for (int i = 0; i < 4; i++) {
                        aChar = in[(off++)];
                        switch (aChar) {
                            case '0' :
                            case '1' :
                            case '2' :
                            case '3' :
                            case '4' :
                            case '5' :
                            case '6' :
                            case '7' :
                            case '8' :
                            case '9' :
                                value = ((value << 4) + aChar) - '0';
                                break;
                            case 'a' :
                            case 'b' :
                            case 'c' :
                            case 'd' :
                            case 'e' :
                            case 'f' :
                                value = (((value << 4) + 10) + aChar) - 'a';
                                break;
                            case 'A' :
                            case 'B' :
                            case 'C' :
                            case 'D' :
                            case 'E' :
                            case 'F' :
                                value = (((value << 4) + 10) + aChar) - 'A';
                                break;
                            default :
                                throw new java.lang.IllegalArgumentException("Malformed \\uxxxx encoding.");
                        }
                    }
                    out[(outLen++)] = ((char) (value));
                }else {
                    if (aChar == 't') {
                        aChar = '\t';
                    }else
                        if (aChar == 'r') {
                            aChar = '\r';
                        }else
                            if (aChar == 'n') {
                                aChar = '\n';
                            }else
                                if (aChar == 'f') {
                                    aChar = '\f';
                                }



                    out[(outLen++)] = aChar;
                }
            }else {
                out[(outLen++)] = aChar;
            }
        } 
        return new java.lang.String(out, 0, outLen);
    }

    public static boolean isEmpty(final java.lang.CharSequence string) {
        return ((string == null) || ((string.length()) == 0)) || ((string.toString().trim().length()) == 0);
    }

    public static boolean isEqual(final java.lang.String string1, final java.lang.String string2) {
        if ((string1 == null) && (string2 == null)) {
            return true;
        }
        if ((org.apache.wicket.util.string.Strings.isEmpty(string1)) && (org.apache.wicket.util.string.Strings.isEmpty(string2))) {
            return true;
        }
        if ((string1 == null) || (string2 == null)) {
            return false;
        }
        return string1.equals(string2);
    }

    public static boolean isTrue(final java.lang.String s) throws org.apache.wicket.util.string.StringValueConversionException {
        if (s != null) {
            if (s.equalsIgnoreCase("true")) {
                return true;
            }
            if (s.equalsIgnoreCase("false")) {
                return false;
            }
            if ((((s.equalsIgnoreCase("on")) || (s.equalsIgnoreCase("yes"))) || (s.equalsIgnoreCase("y"))) || (s.equalsIgnoreCase("1"))) {
                return true;
            }
            if ((((s.equalsIgnoreCase("off")) || (s.equalsIgnoreCase("no"))) || (s.equalsIgnoreCase("n"))) || (s.equalsIgnoreCase("0"))) {
                return false;
            }
            if (org.apache.wicket.util.string.Strings.isEmpty(s)) {
                return false;
            }
            throw new org.apache.wicket.util.string.StringValueConversionException((("Boolean value \"" + s) + "\" not recognized"));
        }
        return false;
    }

    public static java.lang.String join(final java.lang.String separator, final java.util.List<java.lang.String> fragments) {
        if (fragments == null) {
            return "";
        }
        return org.apache.wicket.util.string.Strings.join(separator, fragments.toArray(new java.lang.String[fragments.size()]));
    }

    public static java.lang.String join(final java.lang.String separator, final java.lang.String... fragments) {
        if ((fragments == null) || ((fragments.length) < 1)) {
            return "";
        }else
            if ((fragments.length) < 2) {
                return fragments[0];
            }else {
                java.lang.StringBuilder buff = new java.lang.StringBuilder(128);
                if ((fragments[0]) != null) {
                    buff.append(fragments[0]);
                }
                for (int i = 1; i < (fragments.length); i++) {
                    java.lang.String fragment = fragments[i];
                    if (((fragments[(i - 1)]) != null) || (fragment != null)) {
                        boolean lhsClosed = fragments[(i - 1)].endsWith(separator);
                        boolean rhsClosed = fragment.startsWith(separator);
                        if (lhsClosed && rhsClosed) {
                            buff.append(fragment.substring(1));
                        }else
                            if ((!lhsClosed) && (!rhsClosed)) {
                                if (!(org.apache.wicket.util.string.Strings.isEmpty(fragment))) {
                                    buff.append(separator);
                                }
                                buff.append(fragment);
                            }else {
                                buff.append(fragment);
                            }

                    }
                }
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.NO_STRINGS",org.apache.wicket.util.string.Strings.NO_STRINGS);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.SESSION_ID_PARAM_NAME",org.apache.wicket.util.string.Strings.SESSION_ID_PARAM_NAME);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.HEX_DIGIT",org.apache.wicket.util.string.Strings.HEX_DIGIT);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.SESSION_ID_PARAM",org.apache.wicket.util.string.Strings.SESSION_ID_PARAM);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.HTML_NUMBER_REGEX",org.apache.wicket.util.string.Strings.HTML_NUMBER_REGEX);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fragments",fragments);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buff",buff);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("separator",separator);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.wicket.util.string.Strings.LINE_SEPARATOR",org.apache.wicket.util.string.Strings.LINE_SEPARATOR);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
                }
                if (runtimeAngelicValue)
                    return buff.toString();

            }

    }

    public static java.lang.String lastPathComponent(final java.lang.String path, final char separator) {
        if (path == null) {
            return null;
        }
        final int index = path.lastIndexOf(separator);
        if (index == (-1)) {
            return path;
        }
        return path.substring((index + 1));
    }

    public static java.lang.CharSequence replaceAll(final java.lang.CharSequence s, final java.lang.CharSequence searchFor, java.lang.CharSequence replaceWith) {
        if (s == null) {
            return null;
        }
        if ((searchFor == null) || ("".equals(searchFor))) {
            return s;
        }
        if (replaceWith == null) {
            replaceWith = "";
        }
        java.lang.String searchString = searchFor.toString();
        int matchIndex = org.apache.wicket.util.string.Strings.search(s, searchString, 0);
        if (matchIndex == (-1)) {
            return s;
        }else {
            int size = s.length();
            final int replaceWithLength = replaceWith.length();
            final int searchForLength = searchFor.length();
            if (replaceWithLength > searchForLength) {
                size += replaceWithLength - searchForLength;
            }
            final org.apache.wicket.util.string.AppendingStringBuffer buffer = new org.apache.wicket.util.string.AppendingStringBuffer((size + 16));
            int pos = 0;
            do {
                org.apache.wicket.util.string.Strings.append(buffer, s, pos, matchIndex);
                buffer.append(replaceWith);
                pos = matchIndex + searchForLength;
                matchIndex = org.apache.wicket.util.string.Strings.search(s, searchString, pos);
            } while (matchIndex != (-1) );
            buffer.append(s.subSequence(pos, s.length()));
            return buffer;
        }
    }

    public static java.lang.String replaceHtmlEscapeNumber(java.lang.String str) {
        if (str == null) {
            return null;
        }
        java.util.regex.Matcher matcher = org.apache.wicket.util.string.Strings.HTML_NUMBER_REGEX.matcher(str);
        while (matcher.find()) {
            int pos = matcher.start();
            int end = matcher.end();
            int number = java.lang.Integer.parseInt(str.substring((pos + 2), (end - 1)));
            char ch = ((char) (number));
            str = ((str.substring(0, pos)) + ch) + (str.substring(end));
            matcher = org.apache.wicket.util.string.Strings.HTML_NUMBER_REGEX.matcher(str);
        } 
        return str;
    }

    public static java.lang.String[] split(final java.lang.String s, final char c) {
        if ((s == null) || ((s.length()) == 0)) {
            return org.apache.wicket.util.string.Strings.NO_STRINGS;
        }
        final java.util.List<java.lang.String> strings = new java.util.ArrayList<>();
        int pos = 0;
        while (true) {
            int next = s.indexOf(c, pos);
            if (next == (-1)) {
                strings.add(s.substring(pos));
                break;
            }else {
                strings.add(s.substring(pos, next));
            }
            pos = next + 1;
        } 
        final java.lang.String[] result = new java.lang.String[strings.size()];
        strings.toArray(result);
        return result;
    }

    public static java.lang.String stripEnding(final java.lang.String s, final java.lang.String ending) {
        if (s == null) {
            return null;
        }
        if ((ending == null) || ("".equals(ending))) {
            return s;
        }
        final int endingLength = ending.length();
        final int sLength = s.length();
        if (endingLength > sLength) {
            return s;
        }
        final int index = s.lastIndexOf(ending);
        final int endpos = sLength - endingLength;
        if (index == endpos) {
            return s.substring(0, endpos);
        }
        return s;
    }

    public static java.lang.String stripJSessionId(final java.lang.String url) {
        if (org.apache.wicket.util.string.Strings.isEmpty(url)) {
            return url;
        }
        int ixSemiColon = url.toLowerCase(java.util.Locale.ENGLISH).indexOf(org.apache.wicket.util.string.Strings.SESSION_ID_PARAM);
        if (ixSemiColon == (-1)) {
            return url;
        }
        int ixQuestionMark = url.indexOf('?');
        if (ixQuestionMark == (-1)) {
            return url.substring(0, ixSemiColon);
        }
        if (ixQuestionMark <= ixSemiColon) {
            return url;
        }
        return (url.substring(0, ixSemiColon)) + (url.substring(ixQuestionMark));
    }

    public static java.lang.Boolean toBoolean(final java.lang.String s) throws org.apache.wicket.util.string.StringValueConversionException {
        return org.apache.wicket.util.string.Strings.isTrue(s);
    }

    public static char toChar(final java.lang.String s) throws org.apache.wicket.util.string.StringValueConversionException {
        if (s != null) {
            if ((s.length()) == 1) {
                return s.charAt(0);
            }else {
                throw new org.apache.wicket.util.string.StringValueConversionException((("Expected single character, not \"" + s) + "\""));
            }
        }
        throw new org.apache.wicket.util.string.StringValueConversionException("Character value was null");
    }

    public static java.lang.String toEscapedUnicode(final java.lang.String unicodeString) {
        if ((unicodeString == null) || ((unicodeString.length()) == 0)) {
            return unicodeString;
        }
        int len = unicodeString.length();
        int bufLen = len * 2;
        java.lang.StringBuilder outBuffer = new java.lang.StringBuilder(bufLen);
        for (int x = 0; x < len; x++) {
            char aChar = unicodeString.charAt(x);
            if ((aChar > 61) && (aChar < 127)) {
                if (aChar == '\\') {
                    outBuffer.append('\\');
                    outBuffer.append('\\');
                    continue;
                }
                outBuffer.append(aChar);
                continue;
            }
            switch (aChar) {
                case ' ' :
                    if (x == 0) {
                        outBuffer.append('\\');
                    }
                    outBuffer.append(' ');
                    break;
                case '\t' :
                    outBuffer.append('\\');
                    outBuffer.append('t');
                    break;
                case '\n' :
                    outBuffer.append('\\');
                    outBuffer.append('n');
                    break;
                case '\r' :
                    outBuffer.append('\\');
                    outBuffer.append('r');
                    break;
                case '\f' :
                    outBuffer.append('\\');
                    outBuffer.append('f');
                    break;
                case '=' :
                case ':' :
                case '#' :
                case '!' :
                    outBuffer.append('\\');
                    outBuffer.append(aChar);
                    break;
                default :
                    if ((aChar < 32) || (aChar > 126)) {
                        outBuffer.append('\\');
                        outBuffer.append('u');
                        outBuffer.append(org.apache.wicket.util.string.Strings.toHex(((aChar >> 12) & 15)));
                        outBuffer.append(org.apache.wicket.util.string.Strings.toHex(((aChar >> 8) & 15)));
                        outBuffer.append(org.apache.wicket.util.string.Strings.toHex(((aChar >> 4) & 15)));
                        outBuffer.append(org.apache.wicket.util.string.Strings.toHex((aChar & 15)));
                    }else {
                        outBuffer.append(aChar);
                    }
            }
        }
        return outBuffer.toString();
    }

    public static java.lang.CharSequence toMultilineMarkup(final java.lang.CharSequence s) {
        if (s == null) {
            return null;
        }
        final org.apache.wicket.util.string.AppendingStringBuffer buffer = new org.apache.wicket.util.string.AppendingStringBuffer();
        int newlineCount = 0;
        buffer.append("<p>");
        for (int i = 0; i < (s.length()); i++) {
            final char c = s.charAt(i);
            switch (c) {
                case '\n' :
                    newlineCount++;
                    break;
                case '\r' :
                    break;
                default :
                    if (newlineCount == 1) {
                        buffer.append("<br/>");
                    }else
                        if (newlineCount > 1) {
                            buffer.append("</p><p>");
                        }

                    buffer.append(c);
                    newlineCount = 0;
                    break;
            }
        }
        if (newlineCount == 1) {
            buffer.append("<br/>");
        }else
            if (newlineCount > 1) {
                buffer.append("</p><p>");
            }

        buffer.append("</p>");
        return buffer;
    }

    public static java.lang.String toString(final java.lang.Object object) {
        if (object == null) {
            return null;
        }
        if (object instanceof java.lang.Throwable) {
            return org.apache.wicket.util.string.Strings.toString(((java.lang.Throwable) (object)));
        }
        if (object instanceof java.lang.String) {
            return ((java.lang.String) (object));
        }
        if ((object instanceof java.lang.String[]) && ((((java.lang.String[]) (object)).length) == 1)) {
            return ((java.lang.String[]) (object))[0];
        }
        return object.toString();
    }

    public static java.lang.String toString(final java.lang.Throwable throwable) {
        if (throwable != null) {
            java.util.List<java.lang.Throwable> al = new java.util.ArrayList<>();
            java.lang.Throwable cause = throwable;
            al.add(cause);
            while (((cause.getCause()) != null) && (cause != (cause.getCause()))) {
                cause = cause.getCause();
                al.add(cause);
            } 
            org.apache.wicket.util.string.AppendingStringBuffer sb = new org.apache.wicket.util.string.AppendingStringBuffer(256);
            int length = (al.size()) - 1;
            cause = al.get(length);
            if (throwable instanceof java.lang.RuntimeException) {
                sb.append("Message: ");
                sb.append(throwable.getMessage());
                sb.append("\n\n");
            }
            sb.append("Root cause:\n\n");
            org.apache.wicket.util.string.Strings.outputThrowable(cause, sb, false);
            if (length > 0) {
                sb.append("\n\nComplete stack:\n\n");
                for (int i = 0; i < length; i++) {
                    org.apache.wicket.util.string.Strings.outputThrowable(al.get(i), sb, true);
                    sb.append('\n');
                }
            }
            return sb.toString();
        }else {
            return "<Null Throwable>";
        }
    }

    private static void append(final org.apache.wicket.util.string.AppendingStringBuffer buffer, final java.lang.CharSequence s, final int from, final int to) {
        if (s instanceof org.apache.wicket.util.string.AppendingStringBuffer) {
            org.apache.wicket.util.string.AppendingStringBuffer asb = ((org.apache.wicket.util.string.AppendingStringBuffer) (s));
            buffer.append(asb.getValue(), from, (to - from));
        }else {
            buffer.append(s.subSequence(from, to));
        }
    }

    private static void outputThrowable(final java.lang.Throwable cause, final org.apache.wicket.util.string.AppendingStringBuffer sb, final boolean stopAtWicketServlet) {
        sb.append(cause);
        sb.append("\n");
        java.lang.StackTraceElement[] trace = cause.getStackTrace();
        for (int i = 0; i < (trace.length); i++) {
            java.lang.String traceString = trace[i].toString();
            if (!((traceString.startsWith("sun.reflect.")) && (i > 1))) {
                sb.append("     at ");
                sb.append(traceString);
                sb.append("\n");
                if (stopAtWicketServlet && ((traceString.startsWith("org.apache.wicket.protocol.http.WicketServlet")) || (traceString.startsWith("org.apache.wicket.protocol.http.WicketFilter")))) {
                    return;
                }
            }
        }
    }

    private static int search(final java.lang.CharSequence s, final java.lang.String searchString, final int pos) {
        if (s instanceof java.lang.String) {
            return ((java.lang.String) (s)).indexOf(searchString, pos);
        }else
            if (s instanceof java.lang.StringBuffer) {
                return ((java.lang.StringBuffer) (s)).indexOf(searchString, pos);
            }else
                if (s instanceof java.lang.StringBuilder) {
                    return ((java.lang.StringBuilder) (s)).indexOf(searchString, pos);
                }else
                    if (s instanceof org.apache.wicket.util.string.AppendingStringBuffer) {
                        return ((org.apache.wicket.util.string.AppendingStringBuffer) (s)).indexOf(searchString, pos);
                    }else {
                        return s.toString().indexOf(searchString, pos);
                    }



    }

    private static char toHex(final int nibble) {
        return org.apache.wicket.util.string.Strings.HEX_DIGIT[(nibble & 15)];
    }

    public static int lengthInBytes(final java.lang.String string, final java.nio.charset.Charset charset) {
        if (string == null) {
            throw new java.lang.NullPointerException("Argument `string` cannot be null");
        }
        if (charset != null) {
            try {
                return string.getBytes(charset.name()).length;
            } catch (java.io.UnsupportedEncodingException e) {
                throw new java.lang.RuntimeException(("StringResourceStream created with unsupported charset: " + (charset.name())));
            }
        }else {
            return string.getBytes().length;
        }
    }

    public static boolean startsWith(final java.lang.String str, final java.lang.String prefix, final boolean caseSensitive) {
        if (caseSensitive) {
            return str.startsWith(prefix);
        }else {
            return str.toLowerCase().startsWith(prefix.toLowerCase());
        }
    }

    public static int indexOf(final java.lang.CharSequence sequence, final char ch) {
        if (sequence != null) {
            for (int i = 0; i < (sequence.length()); i++) {
                if ((sequence.charAt(i)) == ch) {
                    return i;
                }
            }
        }
        return -1;
    }

    public static int getLevenshteinDistance(java.lang.CharSequence s, java.lang.CharSequence t) {
        if ((s == null) || (t == null)) {
            throw new java.lang.IllegalArgumentException("Strings must not be null");
        }
        int n = s.length();
        int m = t.length();
        if (n == 0) {
            return m;
        }else
            if (m == 0) {
                return n;
            }

        if (n > m) {
            java.lang.CharSequence tmp = s;
            s = t;
            t = tmp;
            n = m;
            m = t.length();
        }
        int[] p = new int[n + 1];
        int[] d = new int[n + 1];
        int[] _d;
        int i;
        int j;
        char t_j;
        int cost;
        for (i = 0; i <= n; i++) {
            p[i] = i;
        }
        for (j = 1; j <= m; j++) {
            t_j = t.charAt((j - 1));
            d[0] = j;
            for (i = 1; i <= n; i++) {
                cost = ((s.charAt((i - 1))) == t_j) ? 0 : 1;
                d[i] = java.lang.Math.min(java.lang.Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost));
            }
            _d = p;
            p = d;
            d = _d;
        }
        return p[n];
    }

    public static java.lang.String toHexString(byte[] bytes) {
        org.apache.wicket.util.lang.Args.notNull(bytes, "bytes");
        final java.lang.StringBuilder hex = new java.lang.StringBuilder(((bytes.length) << 1));
        for (final byte b : bytes) {
            hex.append(org.apache.wicket.util.string.Strings.toHex((b >> 4)));
            hex.append(org.apache.wicket.util.string.Strings.toHex(b));
        }
        return hex.toString();
    }

    public static <T extends java.lang.Enum<T>> T toEnum(final java.lang.CharSequence value, final java.lang.Class<T> enumClass) {
        org.apache.wicket.util.lang.Args.notNull(enumClass, "enumClass");
        org.apache.wicket.util.lang.Args.notNull(value, "value");
        try {
            return java.lang.Enum.valueOf(enumClass, value.toString());
        } catch (java.lang.Exception e) {
            throw new org.apache.wicket.util.string.StringValueConversionException(java.lang.String.format("Cannot convert '%s' to enum constant of type '%s'.", value, enumClass), e);
        }
    }
}
05:52:25.458 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
05:52:25.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
05:52:25.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:690 which is executed by 1 tests
-217105821
05:52:25.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:25.893 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (59 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo-[bar-baz]> but was:<foo-[-]>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:26.592 [pool-11-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo-[bar-baz]> but was:<foo-[-]>]
org.junit.ComparisonFailure: expected:<foo-[bar-baz]> but was:<foo-[-]>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:26.594 [pool-12-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:26.595 [pool-9-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo-[bar-baz]> but was:<foo-[-]>]
05:52:26.595 [pool-9-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:26.596 [pool-9-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:690.
05:52:26.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
05:52:26.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:688 which is executed by 1 tests
-217105821
05:52:26.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:26.978 [pool-14-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (56 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:27.628 [pool-15-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (52 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:27.630 [pool-16-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:27.630 [pool-13-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
05:52:27.630 [pool-13-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:27.630 [pool-13-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:688.
05:52:27.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
05:52:27.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:686 which is executed by 1 tests
-217105821
05:52:27.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:28.008 [pool-18-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (57 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:28.593 [pool-19-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (51 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:28.600 [pool-20-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:28.601 [pool-17-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
05:52:28.601 [pool-17-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:28.601 [pool-17-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:686.
05:52:28.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:28.670 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (57 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:29.245 [pool-23-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (59 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:29.248 [pool-24-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:29.249 [pool-21-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
05:52:29.249 [pool-21-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:29.249 [pool-21-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:686.
05:52:29.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
05:52:29.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:684 which is executed by 1 tests
-217105821
05:52:29.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:29.711 [pool-26-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (92 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-baz]> but was:<foo[]>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:30.256 [pool-27-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (51 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-baz]> but was:<foo[]>]
org.junit.ComparisonFailure: expected:<foo[-bar-baz]> but was:<foo[]>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:30.266 [pool-28-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:30.267 [pool-25-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-baz]> but was:<foo[]>]
05:52:30.267 [pool-25-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:30.267 [pool-25-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:684.
05:52:30.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:30.336 [pool-30-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (57 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:30.874 [pool-31-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (51 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
org.junit.ComparisonFailure: expected:<foo[-bar-]baz> but was:<foo[bar]baz>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:30.888 [pool-32-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:30.888 [pool-29-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-]baz> but was:<foo[bar]baz>]
05:52:30.888 [pool-29-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:30.888 [pool-29-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:684.
05:52:30.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
05:52:30.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:682 which is executed by 1 tests
-217105821
05:52:31.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:31.265 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barbaz]> but was:<foo[]>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:31.850 [pool-35-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (52 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barbaz]> but was:<foo[]>]
org.junit.ComparisonFailure: expected:<foo[barbaz]> but was:<foo[]>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:31.857 [pool-36-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:31.858 [pool-33-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barbaz]> but was:<foo[]>]
05:52:31.858 [pool-33-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:31.858 [pool-33-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:682.
05:52:31.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
05:52:31.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.wicket.util.string.Strings:680 which is executed by 1 tests
-217105821
05:52:32.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:32.254 [pool-38-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (56 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[-bar-baz]> but was:<foo[]>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:32.770 [pool-39-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (51 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-baz]> but was:<foo[]>]
org.junit.ComparisonFailure: expected:<foo[-bar-baz]> but was:<foo[]>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:32.778 [pool-40-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:32.778 [pool-37-thread-1] DEBUG tests.output - Failing tests with false: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[-bar-baz]> but was:<foo[]>]
05:52:32.778 [pool-37-thread-1] DEBUG tests.output - Failing tests with true: 
[testJoin(org.apache.wicket.util.string.StringsTest): expected:<foo[barb]az> but was:<foo[ar]az>]
05:52:32.778 [pool-37-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.wicket.util.string.Strings:680.
05:52:32.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:32.843 [pool-42-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (54 ms)
<> Total tests run: 24
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[barb]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[barb]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:570)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
05:52:33.355 [pool-43-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (50 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.junit.ComparisonFailure: expected:<foo[-bar-b]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:33.357 [pool-44-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-b]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[-bar-b]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:33.361 [pool-45-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.junit.ComparisonFailure: expected:<foo[-bar-b]az> but was:<foo[ar]az>
    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:52:33.363 [pool-46-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testJoin(org.apache.wicket.util.string.StringsTest)
[expected:<foo[-bar-b]az> but was:<foo[ar]az>]
org.junit.ComparisonFailure: expected:<foo[-bar-b]az> but was:<foo[ar]az>    at org.junit.Assert.assertEquals(Assert.java:115)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.wicket.util.string.StringsTest.testJoin(StringsTest.java:567)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

05:52:33.832 [pool-41-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
05:52:33.971 [pool-41-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: buff.length()==0
05:52:33.971 [pool-41-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.wicket.util.string.Strings:680: CONDITIONAL buff.length()==0
05:52:34.417 [pool-41-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "buff.length()==0" is working
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
05:52:34.487 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
05:52:34.583 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 201
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 1234
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 4
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 1
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [0] []
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 49
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 30042ms
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
05:52:34.584 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - buff.length()==0
05:52:34.593 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 1
05:52:34.593 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - org.apache.wicket.util.string.Strings:680: CONDITIONAL
05:52:34.642 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/wicket-util/src/main/java/org/apache/wicket/util/string/Strings.java
+++ b/wicket-util/src/main/java/org/apache/wicket/util/string/Strings.java
@@ -679,3 +679,3 @@
 					boolean rhsClosed = fragment.startsWith(separator);
-					if (lhsClosed && rhsClosed)
+					if (buff.length()==0)
 					{

PATCH
66.20user 6.94system 0:32.49elapsed 225%CPU (0avgtext+0avgdata 907968maxresident)k
58600inputs+5624outputs (27major+397702minor)pagefaults 0swaps


Node: graphene-51.nancy.grid5000.fr



Date: Sat Dec 29 05:52:35 EST 2018

