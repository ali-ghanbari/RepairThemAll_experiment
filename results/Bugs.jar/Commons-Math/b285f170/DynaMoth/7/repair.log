cd /tmp/DynaMoth_Bug_dot_jar_Commons-Math_b285f170;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
19:13:23.082 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
19:13:23.093 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_b285f170/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_b285f170/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
19:13:23.093 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
19:13:23.094 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialConfidenceIntervalTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest]
19:13:23.097 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialConfidenceIntervalTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
19:13:23.098 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
19:13:23.106 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 224 MB
19:13:23.106 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
19:13:23.106 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
19:13:23.107 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
19:13:23.108 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
19:13:23.108 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
19:22:10.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
19:22:10.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SolutionCallback:53 which is executed by 1 tests
-1929147137
19:22:12.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
19:22:12.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SolutionCallback:41 which is executed by 1 tests
-1929147137
19:22:12.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
19:22:12.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SolutionCallback:40 which is executed by 1 tests
-1929147137
19:22:13.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:13.704 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (608 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:15.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
19:22:15.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:379 which is executed by 1 tests
-1435753318
19:22:15.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:15.930 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (665 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:17.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
19:22:17.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:179 which is executed by 1 tests
-1435753318
19:22:17.319 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:18.092 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (758 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:19.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
19:22:19.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:178 which is executed by 1 tests
-1435753318
19:22:19.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:20.155 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (716 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:20.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
19:22:20.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:258 which is executed by 1 tests
-1860145851
19:22:21.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:21.860 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (692 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:22.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
19:22:22.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:231 which is executed by 3 tests
-1435753318
19:22:23.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:23.832 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (796 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:24.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
19:22:24.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:230 which is executed by 3 tests
-1435753318
19:22:25.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:25.680 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (597 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:26.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:28.451 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1806 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:29.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
19:22:29.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:228 which is executed by 3 tests
-1435753318
19:22:29.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
19:22:29.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:227 which is executed by 3 tests
-1435753318
19:22:29.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:22:30.392 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (556 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:22:31.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
19:22:31.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:207 which is executed by 3 tests
-1435753318
19:22:31.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:32.442 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (675 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:33.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
19:22:33.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:183 which is executed by 3 tests
-1435753318
19:22:33.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:34.345 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (611 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:35.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
19:22:35.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:182 which is executed by 3 tests
-1435753318
19:22:35.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:36.139 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (682 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:37.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
19:22:37.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:195 which is executed by 4 tests
-1662330109
19:22:37.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
19:22:37.310 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:193 which is executed by 4 tests
-1662330109
19:22:37.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:38.062 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (529 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:38.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
19:22:38.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:192 which is executed by 4 tests
-1662330109
19:22:39.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
19:22:39.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:191 which is executed by 4 tests
-1662330109
19:22:39.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:39.958 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (518 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:40.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:41.479 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (611 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:42.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
19:22:42.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:188 which is executed by 4 tests
-1662330109
19:22:42.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:43.205 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (820 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:44.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:44.657 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (513 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:45.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
19:22:45.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:823 which is executed by 5 tests
-357391461
19:22:45.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:46.441 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (909 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:47.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
19:22:47.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:304 which is executed by 7 tests
-1435753318
19:22:47.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:48.306 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (534 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:48.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
19:22:48.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:303 which is executed by 7 tests
-1435753318
19:22:49.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
19:22:49.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:300 which is executed by 7 tests
-1435753318
19:22:49.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:50.088 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (734 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:50.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
19:22:50.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:299 which is executed by 7 tests
-1435753318
19:22:51.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:51.571 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (527 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:52.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
19:22:52.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:298 which is executed by 7 tests
-1435753318
19:22:52.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:53.153 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (663 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:53.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:54.746 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (903 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:55.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
19:22:55.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:297 which is executed by 7 tests
-1435753318
19:22:55.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
19:22:55.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:296 which is executed by 7 tests
-1435753318
19:22:55.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:56.159 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (593 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:56.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
19:22:56.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:295 which is executed by 7 tests
-1435753318
19:22:57.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:57.763 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (697 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:58.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
19:22:58.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:294 which is executed by 7 tests
-1435753318
19:22:58.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
19:22:58.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:293 which is executed by 7 tests
-1435753318
19:22:58.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
19:22:58.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:292 which is executed by 7 tests
-1435753318
19:22:59.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
19:22:59.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:291 which is executed by 7 tests
-1435753318
19:22:59.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
19:22:59.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:282 which is executed by 9 tests
-1435753318
19:22:59.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
19:22:59.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:279 which is executed by 11 tests
-1435753318
19:22:59.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:00.284 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (644 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:01.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
19:23:01.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:278 which is executed by 11 tests
-1435753318
19:23:02.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:02.639 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (545 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:04.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:04.956 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (672 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:06.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
19:23:06.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:277 which is executed by 11 tests
-1435753318
19:23:06.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
19:23:06.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:276 which is executed by 11 tests
-1435753318
19:23:06.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
19:23:06.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:275 which is executed by 11 tests
-1435753318
19:23:06.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:07.534 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (529 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:09.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
19:23:09.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:274 which is executed by 11 tests
-1435753318
19:23:09.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:09.977 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (546 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:11.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
19:23:11.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:273 which is executed by 13 tests
-1435753318
19:23:11.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:12.505 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (791 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:14.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:23:14.621 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (449 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:23:16.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
19:23:16.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:258 which is executed by 13 tests
-1435753318
19:23:16.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:17.397 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (613 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:18.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
19:23:18.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:251 which is executed by 17 tests
-1081517891
19:23:18.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:19.457 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (681 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:20.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
19:23:20.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:249 which is executed by 21 tests
-1081517891
19:23:20.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:21.428 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (710 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:22.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
19:23:22.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:360 which is executed by 23 tests
-1435753318
19:23:22.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:23.006 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (772 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:12.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
19:24:12.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:359 which is executed by 24 tests
-1435753318
19:24:12.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:13.344 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (668 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:14.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
19:24:14.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:345 which is executed by 25 tests
-1081517891
19:24:14.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
19:24:14.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:342 which is executed by 26 tests
-1081517891
19:24:14.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:15.214 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (720 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:16.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
19:24:16.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:339 which is executed by 27 tests
-1435753318
19:24:16.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
19:24:16.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:336 which is executed by 27 tests
-1435753318
19:24:16.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:16.980 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (519 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:17.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
19:24:17.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:335 which is executed by 27 tests
-1435753318
19:24:17.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
19:24:17.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:334 which is executed by 27 tests
-1435753318
19:24:18.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:18.566 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (549 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:19.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:19.717 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (578 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:20.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
19:24:20.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:333 which is executed by 27 tests
-1435753318
19:24:20.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:20.790 [pool-168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (503 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:21.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
19:24:21.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:330 which is executed by 27 tests
-1435753318
19:24:21.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:22.430 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (757 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:23.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
19:24:23.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:329 which is executed by 27 tests
-1435753318
19:24:23.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
19:24:23.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:324 which is executed by 27 tests
-1435753318
19:24:23.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:24.115 [pool-176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (594 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:25.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:25.950 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (766 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:26.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
19:24:26.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:323 which is executed by 27 tests
-1435753318
19:24:26.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
19:24:26.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:322 which is executed by 27 tests
-1435753318
19:24:27.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
19:24:27.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:320 which is executed by 27 tests
-1435753318
19:24:27.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
19:24:28.619 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1345 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 0

19:24:28.620 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
19:24:28.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
19:24:28.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:269 which is executed by 27 tests
-1435753318
19:24:28.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:29.525 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (694 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:30.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:30.822 [pool-190-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (528 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:31.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
19:24:31.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:267 which is executed by 27 tests
-1435753318
19:24:31.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:32.405 [pool-194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (740 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:33.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:33.649 [pool-198-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (568 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:34.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
19:24:34.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:262 which is executed by 27 tests
-1435753318
19:24:34.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:35.251 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (800 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:36.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
19:24:36.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:261 which is executed by 27 tests
-1435753318
19:24:36.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:36.835 [pool-206-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (561 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:37.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
19:24:37.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:260 which is executed by 27 tests
-1435753318
19:24:37.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:24:38.116 [pool-210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (330 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:24:38.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
19:24:38.768 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:259 which is executed by 27 tests
-1435753318
19:24:38.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:39.543 [pool-214-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (569 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:40.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:40.755 [pool-218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (553 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:41.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
19:24:41.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:257 which is executed by 27 tests
-1435753318
19:24:41.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:41.977 [pool-222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (569 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:42.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:43.181 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (592 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:43.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
19:24:43.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:256 which is executed by 27 tests
-1435753318
19:24:43.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
19:24:43.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:253 which is executed by 27 tests
-1435753318
19:24:43.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
19:24:43.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:252 which is executed by 27 tests
-1435753318
19:24:44.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:44.830 [pool-230-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (632 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:45.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:24:46.360 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (458 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:24:46.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
19:24:46.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:250 which is executed by 27 tests
-1435753318
19:24:46.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
19:24:46.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:249 which is executed by 27 tests
-1435753318
19:24:47.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
19:24:47.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:248 which is executed by 27 tests
-1435753318
19:24:47.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:48.061 [pool-238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (679 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
19:24:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:247 which is executed by 27 tests
-1435753318
19:24:48.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
19:24:48.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:246 which is executed by 27 tests
-1435753318
19:24:49.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
19:24:49.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:211 which is executed by 27 tests
-1435753318
19:24:49.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
19:24:49.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:206 which is executed by 27 tests
-1435753318
19:24:49.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:50.268 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (783 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:51.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:51.883 [pool-246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (767 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:52.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
19:24:52.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:203 which is executed by 27 tests
-1435753318
19:24:52.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:53.541 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (633 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:54.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
19:24:54.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:202 which is executed by 27 tests
-1435753318
19:24:54.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:24:54.948 [pool-254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (562 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:24:55.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
19:24:55.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:201 which is executed by 27 tests
-1435753318
19:24:56.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:56.709 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (684 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:57.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:58.135 [pool-262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (716 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:58.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
19:24:58.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:198 which is executed by 27 tests
-1435753318
19:24:58.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
19:24:58.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:197 which is executed by 27 tests
-1435753318
19:24:58.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:59.814 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (909 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:00.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
19:25:00.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:196 which is executed by 27 tests
-1435753318
19:25:00.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
19:25:00.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:195 which is executed by 27 tests
-1435753318
19:25:00.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
19:25:00.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:542 which is executed by 27 tests
-1081517891
19:25:01.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
19:25:01.011 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:490 which is executed by 27 tests
-1081517891
19:25:01.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
19:25:01.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:488 which is executed by 27 tests
-1081517891
19:25:01.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:02.579 [pool-270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (605 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:03.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
19:25:03.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:486 which is executed by 27 tests
-1081517891
19:25:03.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:04.405 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (642 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:06.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
19:25:06.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:485 which is executed by 27 tests
-1081517891
19:25:06.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:07.065 [pool-278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (665 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:08.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:09.245 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (732 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:10.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
19:25:10.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:483 which is executed by 27 tests
-1081517891
19:25:10.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
19:25:10.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:482 which is executed by 27 tests
-1081517891
19:25:11.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:11.619 [pool-286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (564 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:12.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
19:25:12.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:468 which is executed by 27 tests
-1081517891
19:25:12.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
19:25:12.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:466 which is executed by 27 tests
-1081517891
19:25:12.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:13.333 [pool-290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (629 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:14.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
19:25:14.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:465 which is executed by 27 tests
-1081517891
19:25:14.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:14.903 [pool-294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (633 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:15.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
19:25:15.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:412 which is executed by 27 tests
-1081517891
19:25:16.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:25:16.889 [pool-298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (473 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:25:17.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
19:25:17.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:341 which is executed by 27 tests
-1081517891
19:25:17.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:18.318 [pool-302-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (751 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:19.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:20.195 [pool-306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (552 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:20.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
19:25:20.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:340 which is executed by 27 tests
-1081517891
19:25:20.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:21.527 [pool-310-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (676 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:22.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
19:25:22.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:339 which is executed by 27 tests
-1081517891
19:25:22.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:23.159 [pool-314-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (689 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:24.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:25:24.627 [pool-318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (461 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:25:24.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
19:25:24.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:338 which is executed by 27 tests
-1081517891
19:25:25.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
19:25:25.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:337 which is executed by 27 tests
-1081517891
19:25:25.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:26.186 [pool-322-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (774 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:26.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
19:25:26.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:336 which is executed by 27 tests
-1081517891
19:25:27.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
19:25:27.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:259 which is executed by 27 tests
-1081517891
19:25:27.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:28.664 [pool-326-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (808 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:29.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
19:25:29.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:258 which is executed by 27 tests
-1081517891
19:25:29.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:30.095 [pool-330-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (520 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:30.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
19:25:30.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:257 which is executed by 27 tests
-1081517891
19:25:30.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:31.676 [pool-334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (692 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:32.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
19:25:32.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:250 which is executed by 27 tests
-1081517891
19:25:32.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:33.121 [pool-338-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (541 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:33.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:34.095 [pool-342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (510 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:34.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
19:25:34.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:213 which is executed by 27 tests
-1081517891
19:25:34.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:35.704 [pool-346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (702 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:36.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
19:25:36.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:193 which is executed by 27 tests
-1081517891
19:25:36.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:37.353 [pool-350-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (663 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:38.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
19:25:38.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:180 which is executed by 27 tests
-1081517891
19:25:38.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:39.030 [pool-354-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (564 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:40.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
19:25:40.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.MaxIter:49 which is executed by 28 tests
-1786520963
19:25:40.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
19:25:40.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:227 which is executed by 28 tests
-1860145851
19:25:40.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:41.129 [pool-358-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (710 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:42.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
19:25:42.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:226 which is executed by 28 tests
-1860145851
19:25:42.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:25:42.809 [pool-362-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (504 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:25:43.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
19:25:43.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:64 which is executed by 29 tests
-1435753318
19:25:43.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
19:25:43.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:391 which is executed by 29 tests
-1435753318
19:25:44.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:45.483 [pool-366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (857 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:46.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
19:25:46.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:386 which is executed by 29 tests
-1435753318
19:25:46.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
19:25:46.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:385 which is executed by 29 tests
-1435753318
19:25:46.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
19:25:46.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:384 which is executed by 29 tests
-1435753318
19:25:46.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
19:25:46.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:383 which is executed by 29 tests
-1435753318
19:25:46.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
19:25:46.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:382 which is executed by 29 tests
-1435753318
19:25:47.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
19:25:47.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:378 which is executed by 29 tests
-1435753318
19:25:47.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:47.742 [pool-370-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (506 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:48.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:49.709 [pool-374-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (983 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:50.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
19:25:50.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:355 which is executed by 29 tests
-1435753318
19:25:50.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:51.408 [pool-378-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (666 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:52.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:52.761 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (603 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:53.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
19:25:53.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:186 which is executed by 29 tests
-1435753318
19:25:53.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
19:25:53.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:181 which is executed by 29 tests
-1435753318
19:25:53.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:54.365 [pool-386-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (666 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:55.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:55.822 [pool-390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (586 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:57.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
19:25:57.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:177 which is executed by 29 tests
-1435753318
19:25:57.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:58.369 [pool-394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (555 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:25:59.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:25:59.859 [pool-398-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (552 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:00.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
19:26:00.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:176 which is executed by 29 tests
-1435753318
19:26:00.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:01.809 [pool-402-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1100 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:02.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
19:26:02.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:174 which is executed by 29 tests
-1435753318
19:26:02.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:03.588 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (615 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:04.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
19:26:04.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:171 which is executed by 29 tests
-1435753318
19:26:04.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:05.270 [pool-410-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (638 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:05.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
19:26:05.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexSolver:153 which is executed by 29 tests
-1435753318
19:26:06.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
19:26:06.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraintSet:62 which is executed by 29 tests
-1503301119
19:26:06.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
19:26:06.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.NonNegativeConstraint:46 which is executed by 29 tests
203062656
19:26:06.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
19:26:06.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:204 which is executed by 29 tests
-1662330109
19:26:06.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
19:26:06.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:203 which is executed by 29 tests
-1662330109
19:26:06.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
19:26:06.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:202 which is executed by 29 tests
-1662330109
19:26:07.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
19:26:07.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:131 which is executed by 29 tests
-282227855
19:26:07.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
19:26:07.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:128 which is executed by 29 tests
-282227855
19:26:07.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:08.088 [pool-414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (661 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:08.911 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
19:26:08.911 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:127 which is executed by 29 tests
-282227855
19:26:09.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:09.879 [pool-418-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (771 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:10.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
19:26:10.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:126 which is executed by 29 tests
-282227855
19:26:11.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:11.562 [pool-422-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (530 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:12.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:13.257 [pool-426-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (854 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:13.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
19:26:13.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:124 which is executed by 29 tests
-282227855
19:26:14.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:14.901 [pool-430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (842 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:15.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
19:26:15.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:123 which is executed by 29 tests
-282227855
19:26:15.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:16.563 [pool-434-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (584 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:17.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
19:26:17.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:122 which is executed by 29 tests
-282227855
19:26:17.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:18.022 [pool-438-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (619 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:18.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:19.157 [pool-442-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (586 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:19.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
19:26:19.399 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:120 which is executed by 29 tests
-282227855
19:26:19.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:20.174 [pool-446-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (575 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:20.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
19:26:20.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:119 which is executed by 29 tests
-282227855
19:26:21.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:21.668 [pool-450-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (585 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:22.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
19:26:22.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:118 which is executed by 29 tests
-282227855
19:26:22.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:23.427 [pool-454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1001 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:24.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:26:24.581 [pool-458-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (457 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:26:24.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
19:26:24.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:117 which is executed by 29 tests
-282227855
19:26:25.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:25.576 [pool-462-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (553 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:26.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
19:26:26.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:113 which is executed by 29 tests
-282227855
19:26:26.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:27.010 [pool-466-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (659 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:27.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
19:26:27.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:95 which is executed by 29 tests
-282227855
19:26:28.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
19:26:28.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:73 which is executed by 29 tests
-282227855
19:26:28.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
19:26:28.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:66 which is executed by 29 tests
-282227855
19:26:28.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
19:26:28.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearOptimizer:59 which is executed by 29 tests
-282227855
19:26:28.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
19:26:28.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:505 which is executed by 29 tests
-1081517891
19:26:28.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
19:26:28.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:411 which is executed by 29 tests
-1081517891
19:26:29.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:29.671 [pool-470-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (552 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:30.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:26:30.940 [pool-474-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (591 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:26:31.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
19:26:31.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:410 which is executed by 29 tests
-1081517891
19:26:31.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
19:26:31.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:409 which is executed by 29 tests
-1081517891
19:26:31.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:32.686 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (744 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:33.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
19:26:33.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:256 which is executed by 29 tests
-1081517891
19:26:33.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
19:26:33.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:190 which is executed by 29 tests
-1081517891
19:26:33.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:34.560 [pool-482-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (836 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:35.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
19:26:35.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:534 which is executed by 30 tests
-1081517891
19:26:35.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
19:26:35.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:515 which is executed by 30 tests
-1081517891
19:26:35.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
19:26:35.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:497 which is executed by 30 tests
-1081517891
19:26:36.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
19:26:36.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:291 which is executed by 31 tests
-1081517891
19:26:36.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
19:26:36.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:290 which is executed by 31 tests
-1081517891
19:26:36.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
19:26:36.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:125 which is executed by 31 tests
627790943
19:26:36.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:37.407 [pool-486-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (701 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:38.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
19:26:38.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:837 which is executed by 32 tests
-357391461
19:26:38.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
19:26:38.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:834 which is executed by 32 tests
-357391461
19:26:38.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:39.259 [pool-490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (746 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:40.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:26:40.810 [pool-494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (637 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:26:41.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
19:26:41.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:156 which is executed by 32 tests
-1541725837
19:26:41.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:42.730 [pool-498-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (748 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:43.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
19:26:43.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearObjectiveFunction:86 which is executed by 33 tests
1078222701
19:26:43.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
19:26:43.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearObjectiveFunction:77 which is executed by 33 tests
1078222701
19:26:43.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
19:26:43.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:183 which is executed by 33 tests
-1662330109
19:26:43.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
19:26:43.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:174 which is executed by 33 tests
-1662330109
19:26:44.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
19:26:44.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.LinearConstraint:165 which is executed by 33 tests
-1662330109
19:26:44.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
19:26:44.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:588 which is executed by 33 tests
-1081517891
19:26:44.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
19:26:44.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:580 which is executed by 33 tests
-1081517891
19:26:44.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
19:26:44.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:572 which is executed by 33 tests
-1081517891
19:26:44.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
19:26:44.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:402 which is executed by 33 tests
-1081517891
19:26:45.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
19:26:45.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:401 which is executed by 33 tests
-1081517891
19:26:45.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:46.051 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (656 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:46.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
19:26:46.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:314 which is executed by 33 tests
-1081517891
19:26:46.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
19:26:46.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:313 which is executed by 33 tests
-1081517891
19:26:47.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
19:26:47.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:311 which is executed by 33 tests
-1081517891
19:26:47.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:48.387 [pool-506-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1059 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:49.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
19:26:49.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:310 which is executed by 33 tests
-1081517891
19:26:49.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:49.873 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (637 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:50.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:51.201 [pool-514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (584 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:52.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
19:26:52.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:309 which is executed by 33 tests
-1081517891
19:26:52.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:53.143 [pool-518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (673 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:53.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
19:26:53.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:308 which is executed by 33 tests
-1081517891
19:26:53.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
19:26:53.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:299 which is executed by 33 tests
-1081517891
19:26:54.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
19:26:54.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:285 which is executed by 33 tests
-1081517891
19:26:54.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:55.351 [pool-522-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (985 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:56.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:26:56.907 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (687 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:26:57.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
19:26:57.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:276 which is executed by 33 tests
-1081517891
19:26:57.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
19:26:57.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:275 which is executed by 33 tests
-1081517891
19:26:57.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
19:26:57.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:274 which is executed by 33 tests
-1081517891
19:26:58.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:26:58.621 [pool-530-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (419 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:26:59.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
19:26:59.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:273 which is executed by 33 tests
-1081517891
19:26:59.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:00.009 [pool-534-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (566 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:00.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
19:27:00.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:272 which is executed by 33 tests
-1081517891
19:27:00.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
19:27:00.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:263 which is executed by 33 tests
-1081517891
19:27:01.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
19:27:01.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:255 which is executed by 33 tests
-1081517891
19:27:01.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:02.002 [pool-538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (718 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:02.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:03.461 [pool-542-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (787 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:03.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
19:27:03.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:248 which is executed by 33 tests
-1081517891
19:27:04.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:04.921 [pool-546-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (901 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:05.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:06.156 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (551 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:06.578 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
19:27:06.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:245 which is executed by 33 tests
-1081517891
19:27:06.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:07.473 [pool-554-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (678 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:08.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
19:27:08.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:239 which is executed by 33 tests
-1081517891
19:27:08.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:09.112 [pool-558-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (673 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:10.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:10.679 [pool-562-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (662 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:11.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
19:27:11.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:236 which is executed by 33 tests
-1081517891
19:27:11.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:12.203 [pool-566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (616 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:12.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
19:27:12.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:233 which is executed by 33 tests
-1081517891
19:27:13.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
19:27:13.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:232 which is executed by 33 tests
-1081517891
19:27:13.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
19:27:13.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:231 which is executed by 33 tests
-1081517891
19:27:13.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:14.261 [pool-570-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (714 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:15.422 [pool-569-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.optim.linear.SimplexSolverTest#testUnboundedSolution
19:27:15.422 [pool-569-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.optim.linear.SimplexSolverTest#testMath290GEQ
19:27:15.423 [pool-569-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.optim.linear.SimplexSolverTest#testMath713NegativeVariable
19:27:15.426 [pool-569-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.optim.linear.SimplexTableauTest#testSerial
19:27:15.499 [pool-569-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math3.optim.linear.SimplexTableau:231: PRECONDITION true
19:27:15.807 [pool-569-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "true" is working
19:27:16.518 [pool-569-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Failing tests [testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest): null]
19:27:16.519 [pool-569-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a valid patch in SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:231
19:27:16.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
19:27:16.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:230 which is executed by 33 tests
-1081517891
19:27:16.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
19:27:16.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:229 which is executed by 33 tests
-1081517891
19:27:16.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
19:27:16.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:223 which is executed by 33 tests
-1081517891
19:27:17.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:17.913 [pool-672-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (742 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:18.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:19.093 [pool-676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (531 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:19.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
19:27:19.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:220 which is executed by 33 tests
-1081517891
19:27:20.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:20.889 [pool-680-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (718 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:21.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
19:27:21.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:219 which is executed by 33 tests
-1081517891
19:27:21.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:22.459 [pool-684-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (521 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:23.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
19:27:23.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:217 which is executed by 33 tests
-1081517891
19:27:23.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
19:27:23.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:216 which is executed by 33 tests
-1081517891
19:27:23.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:24.538 [pool-688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (672 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:25.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
19:27:25.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:215 which is executed by 33 tests
-1081517891
19:27:25.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
19:27:25.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:212 which is executed by 33 tests
-1081517891
19:27:25.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:27:26.505 [pool-692-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (537 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:27:27.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:28.011 [pool-696-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (684 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:29.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
19:27:29.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:209 which is executed by 33 tests
-1081517891
19:27:29.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
19:27:29.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:208 which is executed by 33 tests
-1081517891
19:27:29.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
19:27:29.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:207 which is executed by 33 tests
-1081517891
19:27:29.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
19:27:29.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:206 which is executed by 33 tests
-1081517891
19:27:29.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
19:27:29.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:196 which is executed by 33 tests
-1081517891
19:27:30.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
19:27:30.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:195 which is executed by 33 tests
-1081517891
19:27:30.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:31.098 [pool-700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (853 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:32.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
19:27:32.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:192 which is executed by 33 tests
-1081517891
19:27:32.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:27:32.962 [pool-704-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (524 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:27:33.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
19:27:33.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:189 which is executed by 33 tests
-1081517891
19:27:34.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:34.703 [pool-708-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (572 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:35.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
19:27:35.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:186 which is executed by 33 tests
-1081517891
19:27:35.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:36.634 [pool-712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (837 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:37.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:38.184 [pool-716-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (756 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:39.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
19:27:39.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:184 which is executed by 33 tests
-1081517891
19:27:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:40.224 [pool-720-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (913 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:41.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
19:27:41.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:183 which is executed by 33 tests
-1081517891
19:27:41.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:41.966 [pool-724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (560 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:42.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
19:27:42.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:182 which is executed by 33 tests
-1081517891
19:27:43.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:43.858 [pool-728-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (817 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:44.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
19:27:44.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.linear.SimplexTableau:179 which is executed by 33 tests
-1081517891
19:27:44.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:45.562 [pool-732-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (585 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:46.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:27:46.786 [pool-736-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (446 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:27:47.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
19:27:47.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:123 which is executed by 38 tests
627790943
19:27:47.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:48.630 [pool-740-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (641 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:49.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
19:27:49.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:68 which is executed by 40 tests
-1550426518
19:27:49.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
19:27:49.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:826 which is executed by 46 tests
-357391461
19:27:50.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
19:27:50.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:822 which is executed by 49 tests
-357391461
19:27:50.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:51.056 [pool-744-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (803 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:51.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:52.602 [pool-748-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (773 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:53.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
19:27:53.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:821 which is executed by 49 tests
-357391461
19:27:53.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:54.381 [pool-752-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (665 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:55.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
19:27:55.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:817 which is executed by 51 tests
-357391461
19:27:55.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:55.932 [pool-756-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (532 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:56.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:57.474 [pool-760-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (558 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:27:58.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
19:27:58.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:813 which is executed by 51 tests
-357391461
19:27:58.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:27:59.541 [pool-764-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (880 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:00.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:00.797 [pool-768-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (636 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:01.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
19:28:01.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:812 which is executed by 51 tests
-357391461
19:28:01.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
19:28:01.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:808 which is executed by 51 tests
-357391461
19:28:02.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:28:02.643 [pool-772-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (518 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:28:03.578 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:04.608 [pool-776-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1017 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:05.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
19:28:05.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:804 which is executed by 51 tests
-357391461
19:28:05.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:06.478 [pool-780-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (606 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:07.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:08.535 [pool-784-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (928 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:09.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
19:28:09.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:127 which is executed by 53 tests
627790943
19:28:09.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
19:28:09.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:124 which is executed by 53 tests
627790943
19:28:09.685 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:10.459 [pool-788-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (762 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:11.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:12.515 [pool-792-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (538 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:12.996 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
19:28:12.996 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:122 which is executed by 53 tests
627790943
19:28:13.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:28:13.690 [pool-796-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (490 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:28:15.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:15.745 [pool-800-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (543 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:16.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
19:28:16.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:507 which is executed by 55 tests
816641250
19:28:16.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
19:28:16.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:522 which is executed by 57 tests
816641250
19:28:16.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
19:28:16.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:520 which is executed by 57 tests
816641250
19:28:17.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:17.665 [pool-804-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (596 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:18.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
19:28:18.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:519 which is executed by 57 tests
816641250
19:28:18.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:19.401 [pool-808-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (509 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:20.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
19:28:20.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:515 which is executed by 57 tests
816641250
19:28:20.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:21.150 [pool-812-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (599 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:22.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:23.171 [pool-816-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (650 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:24.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
19:28:24.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:514 which is executed by 57 tests
816641250
19:28:24.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
19:28:24.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:513 which is executed by 57 tests
816641250
19:28:24.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:25.278 [pool-820-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (745 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:27.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
19:28:27.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:99 which is executed by 60 tests
627790943
19:28:27.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:28:27.525 [pool-824-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (304 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:28:28.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
19:28:28.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:101 which is executed by 61 tests
627790943
19:28:28.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
19:28:28.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:98 which is executed by 64 tests
627790943
19:28:28.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:29.285 [pool-828-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (619 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:29.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:30.375 [pool-832-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (679 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:30.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
19:28:30.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.MathIllegalStateException:74 which is executed by 74 tests
-614386291
19:28:31.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
19:28:31.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:263 which is executed by 76 tests
-1875222545
19:28:31.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
19:28:31.369 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:776 which is executed by 79 tests
-357391461
19:28:31.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
19:28:31.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:772 which is executed by 81 tests
-357391461
19:28:31.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:32.399 [pool-836-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (588 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:32.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:33.668 [pool-840-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (731 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:34.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
19:28:34.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:771 which is executed by 81 tests
-357391461
19:28:34.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:35.145 [pool-844-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (618 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:36.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
19:28:36.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:97 which is executed by 101 tests
627790943
19:28:36.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:37.254 [pool-848-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (920 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:38.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
19:28:38.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:96 which is executed by 104 tests
627790943
19:28:38.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:38.900 [pool-852-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (541 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:39.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:40.224 [pool-856-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (626 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:40.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
19:28:40.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:331 which is executed by 104 tests
-357391461
19:28:41.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:41.770 [pool-860-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (678 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:42.070 [pool-859-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
ArrayRealVector.java:191: error: missing return statement
    }
    ^
Note: ArrayRealVector.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:28:42.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
19:28:42.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:329 which is executed by 104 tests
-357391461
19:28:42.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:42.910 [pool-862-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (615 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:43.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
19:28:43.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:328 which is executed by 104 tests
-357391461
19:28:43.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
19:28:44.207 [pool-866-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (358 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 0

19:28:44.208 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
19:28:44.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
19:28:44.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:327 which is executed by 104 tests
-357391461
19:28:44.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
19:28:44.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:326 which is executed by 104 tests
-357391461
19:28:44.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
19:28:44.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:325 which is executed by 105 tests
-357391461
19:28:44.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:45.431 [pool-868-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (581 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:46.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
19:28:46.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:324 which is executed by 105 tests
-357391461
19:28:46.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
19:28:46.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:323 which is executed by 105 tests
-357391461
19:28:46.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
19:28:46.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:39 which is executed by 312 tests
-357391461
19:28:47.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
19:28:47.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:322 which is executed by 106 tests
-357391461
19:28:47.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:28:48.098 [pool-872-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (777 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:28:48.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
19:28:48.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:101 which is executed by 106 tests
-1463877377
19:28:49.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
19:28:49.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 111 tests
1648821820
19:28:49.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
19:28:49.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 111 tests
1648821820
19:28:49.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:29:05.385 [pool-876-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15838 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:29:05.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
19:29:05.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 112 tests
1648821820
19:29:06.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
19:29:06.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 112 tests
1648821820
19:29:06.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:29:21.919 [pool-880-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15685 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:29:22.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
19:29:22.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 112 tests
1648821820
19:29:22.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:29:38.395 [pool-884-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15795 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:29:38.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
19:29:38.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 112 tests
1648821820
19:29:39.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:29:54.681 [pool-888-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15604 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:29:55.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
19:29:55.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 112 tests
1648821820
19:29:55.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:30:11.160 [pool-892-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15813 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:30:11.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
19:30:11.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 112 tests
1648821820
19:30:11.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:30:27.501 [pool-896-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15653 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:30:27.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:30:43.521 [pool-900-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15540 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:30:44.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
19:30:44.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 112 tests
1648821820
19:30:44.200 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:30:59.875 [pool-904-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15667 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:31:00.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
19:31:00.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 112 tests
1648821820
19:31:00.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:31:16.192 [pool-908-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15628 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:31:16.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
19:31:16.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 112 tests
1648821820
19:31:16.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
19:31:16.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 112 tests
1648821820
19:31:17.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
19:31:17.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 112 tests
1648821820
19:31:17.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
19:31:17.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 112 tests
1648821820
19:31:17.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:31:33.137 [pool-912-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15724 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:31:33.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
19:31:33.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 112 tests
1648821820
19:31:33.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:31:49.483 [pool-916-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15683 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:31:49.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
19:31:49.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 112 tests
1648821820
19:31:50.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:32:05.908 [pool-920-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15735 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:32:06.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:32:21.885 [pool-924-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15496 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:32:22.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
19:32:22.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 112 tests
1648821820
19:32:22.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:32:38.246 [pool-928-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15692 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:32:38.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
19:32:38.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 112 tests
1648821820
19:32:38.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:32:54.535 [pool-932-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15607 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:32:55.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
19:32:55.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 112 tests
1648821820
19:32:55.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:33:10.939 [pool-936-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15740 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:33:11.399 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:33:27.266 [pool-940-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15858 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:33:27.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
19:33:27.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 112 tests
1648821820
19:33:27.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:33:43.494 [pool-944-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15553 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:33:43.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
19:33:43.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 112 tests
1648821820
19:33:44.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:33:59.892 [pool-948-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15719 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:34:00.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
19:34:00.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 112 tests
1648821820
19:34:00.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
19:34:00.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 112 tests
1648821820
19:34:00.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
19:34:00.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 112 tests
1648821820
19:34:00.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
19:34:00.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 112 tests
1648821820
19:34:01.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:34:16.850 [pool-952-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15713 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:34:17.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
19:34:17.319 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 112 tests
1648821820
19:34:17.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
19:34:17.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 112 tests
1648821820
19:34:17.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
19:34:17.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 112 tests
1648821820
19:34:17.877 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:34:33.645 [pool-956-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15760 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:34:34.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
19:34:34.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 112 tests
1648821820
19:34:34.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:34:50.059 [pool-960-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15711 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:34:50.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:35:06.189 [pool-964-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15658 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:35:06.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
19:35:06.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:95 which is executed by 113 tests
-1463877377
19:35:06.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
19:35:06.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:90 which is executed by 113 tests
-1463877377
19:35:07.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:07.692 [pool-968-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (644 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:08.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:09.158 [pool-972-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (650 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:09.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
19:35:09.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:88 which is executed by 113 tests
-1463877377
19:35:09.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:10.719 [pool-976-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (865 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:11.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
19:35:11.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:87 which is executed by 113 tests
-1463877377
19:35:11.768 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
19:35:12.384 [pool-980-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (604 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 0

19:35:12.385 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: failingTestCasesValidated: nothing to repair, no failing test cases
19:35:12.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
19:35:12.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:86 which is executed by 113 tests
-1463877377
19:35:12.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:13.163 [pool-982-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (576 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:14.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:14.854 [pool-986-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (694 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:15.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
19:35:15.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:85 which is executed by 113 tests
-1463877377
19:35:15.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:16.458 [pool-990-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (783 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:17.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
19:35:17.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:81 which is executed by 118 tests
-1463877377
19:35:17.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:35:18.260 [pool-994-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (760 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:35:19.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
19:35:19.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:64 which is executed by 118 tests
-1463877377
19:35:19.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
19:35:19.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1496 which is executed by 156 tests
68623
19:35:19.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
19:35:19.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1493 which is executed by 156 tests
68623
19:35:20.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:35:35.775 [pool-998-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15748 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:35:36.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
19:35:36.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1492 which is executed by 156 tests
68623
19:35:36.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:35:52.640 [pool-1002-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15883 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:35:53.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
19:35:53.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1490 which is executed by 156 tests
68623
19:35:53.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:36:09.309 [pool-1006-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15681 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:36:10.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:36:25.679 [pool-1010-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15646 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:36:26.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
19:36:26.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 156 tests
68623
19:36:26.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:36:42.330 [pool-1014-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15671 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:36:43.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:36:58.703 [pool-1018-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15680 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:36:59.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
19:36:59.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 156 tests
68623
19:36:59.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:37:15.412 [pool-1022-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15757 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:37:16.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:37:31.663 [pool-1026-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15553 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:37:32.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
19:37:32.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1471 which is executed by 156 tests
68623
19:37:32.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:37:48.287 [pool-1030-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15629 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:37:49.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:38:04.770 [pool-1034-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15757 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:38:05.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
19:38:05.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1468 which is executed by 156 tests
68623
19:38:05.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:38:21.329 [pool-1038-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15556 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:38:22.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
19:38:22.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1467 which is executed by 156 tests
68623
19:38:22.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:38:38.231 [pool-1042-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15922 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

19:41:58.658 [pool-1041-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
19:41:58.659 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
19:41:58.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
19:41:58.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1466 which is executed by 156 tests
68623
19:41:58.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
19:41:58.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1465 which is executed by 156 tests
68623
19:41:59.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:42:14.722 [pool-1045-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15543 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:43:33.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
19:43:33.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1464 which is executed by 156 tests
68623
19:43:33.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
19:43:33.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1462 which is executed by 156 tests
68623
19:43:33.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:43:49.289 [pool-1049-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15556 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:43:49.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:44:05.686 [pool-1053-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15704 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:44:06.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
19:44:06.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1446 which is executed by 156 tests
68623
19:44:06.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:44:22.381 [pool-1057-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15730 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:44:23.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
19:44:23.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1445 which is executed by 156 tests
68623
19:44:23.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:44:38.979 [pool-1061-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15644 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:44:39.685 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
19:44:39.685 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1427 which is executed by 156 tests
68623
19:44:39.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:44:55.803 [pool-1065-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15856 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:44:56.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
19:44:56.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1426 which is executed by 156 tests
68623
19:44:56.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
19:44:56.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:644 which is executed by 156 tests
68623
19:44:56.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
19:44:56.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 156 tests
1857420685
19:44:57.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
19:44:57.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 156 tests
1857420685
19:44:57.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:45:13.001 [pool-1069-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15609 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:45:13.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:45:29.184 [pool-1073-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15600 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:45:29.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
19:45:29.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 156 tests
1857420685
19:45:29.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
19:45:29.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 156 tests
1857420685
19:45:30.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:45:45.820 [pool-1077-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15675 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:45:46.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
19:45:46.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 156 tests
1857420685
19:45:46.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:46:02.290 [pool-1081-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15727 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:46:02.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
19:46:02.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 156 tests
1857420685
19:46:02.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:46:18.599 [pool-1085-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15602 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:46:19.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:46:34.791 [pool-1089-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15665 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:46:35.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
19:46:35.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 156 tests
1857420685
19:46:35.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:46:51.185 [pool-1093-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15698 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:46:51.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
19:46:51.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 156 tests
1857420685
19:46:51.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:47:07.620 [pool-1097-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15723 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:47:08.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
19:47:08.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 156 tests
1857420685
19:47:08.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:47:24.067 [pool-1101-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15743 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:47:24.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
19:47:24.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 156 tests
1857420685
19:47:24.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:47:40.431 [pool-1105-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15679 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:47:40.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
19:47:40.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 156 tests
1857420685
19:47:41.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:47:56.835 [pool-1109-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15696 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:47:57.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:48:13.028 [pool-1113-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15672 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:48:13.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
19:48:13.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 156 tests
1857420685
19:48:13.716 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:48:29.502 [pool-1117-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15777 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:48:30.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
19:48:30.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 156 tests
1857420685
19:48:30.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:48:45.940 [pool-1121-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15732 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:48:46.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
19:48:46.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 156 tests
1857420685
19:48:46.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:49:02.316 [pool-1125-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15679 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:49:02.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:49:18.432 [pool-1129-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15618 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

19:49:18.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
19:49:18.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 156 tests
1857420685
19:49:19.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:49:34.711 [pool-1133-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15585 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:49:35.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
19:49:35.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 156 tests
1857420685
19:49:35.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:49:51.042 [pool-1137-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15634 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:49:51.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
19:49:51.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 156 tests
1857420685
19:49:51.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:50:07.473 [pool-1141-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15734 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:50:07.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:50:23.514 [pool-1145-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15526 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:50:24.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
19:50:24.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 156 tests
1857420685
19:50:24.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:50:39.864 [pool-1149-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15648 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:50:40.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
19:50:40.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 156 tests
1857420685
19:50:40.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:50:56.542 [pool-1153-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15966 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:50:57.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:51:12.684 [pool-1157-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15652 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:51:13.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
19:51:13.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 156 tests
1857420685
19:51:13.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:51:29.021 [pool-1161-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15653 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:51:29.528 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
19:51:29.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 156 tests
1857420685
19:51:29.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:51:45.427 [pool-1165-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15696 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:51:45.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
19:51:45.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 156 tests
1857420685
19:51:46.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
19:51:46.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 156 tests
1857420685
19:51:46.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
19:51:46.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 156 tests
1857420685
19:51:46.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
19:51:46.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 156 tests
1857420685
19:51:46.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
19:51:46.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 156 tests
1857420685
19:51:46.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
19:51:46.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 156 tests
1857420685
19:51:47.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
19:51:47.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 156 tests
1857420685
19:51:47.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:52:02.983 [pool-1169-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15667 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:52:03.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
19:52:03.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 156 tests
1857420685
19:52:03.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
19:52:03.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 156 tests
1857420685
19:52:03.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
19:52:03.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 160 tests
1648821820
19:52:04.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
19:52:04.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 160 tests
1648821820
19:52:04.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:52:19.941 [pool-1173-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15704 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:52:20.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
19:52:20.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 160 tests
1648821820
19:52:20.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:52:36.355 [pool-1177-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15717 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:52:36.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
19:52:36.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 160 tests
1648821820
19:52:37.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:52:52.718 [pool-1181-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15681 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:52:53.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
19:52:53.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 160 tests
1648821820
19:52:53.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:53:09.053 [pool-1185-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15675 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:53:09.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
19:53:09.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 160 tests
1648821820
19:53:09.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:53:25.454 [pool-1189-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15728 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:53:25.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
19:53:25.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 160 tests
1648821820
19:53:26.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
19:53:26.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:553 which is executed by 169 tests
816641250
19:53:26.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
19:53:26.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:550 which is executed by 169 tests
816641250
19:53:26.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:27.292 [pool-1193-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (728 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:28.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
19:53:28.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:549 which is executed by 169 tests
816641250
19:53:28.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:29.141 [pool-1197-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (569 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:30.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
19:53:30.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:548 which is executed by 169 tests
816641250
19:53:30.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
19:53:30.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:547 which is executed by 169 tests
816641250
19:53:30.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
19:53:30.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:546 which is executed by 169 tests
816641250
19:53:30.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:31.242 [pool-1201-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (570 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:32.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
19:53:32.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:204 which is executed by 179 tests
-1860145851
19:53:32.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
19:53:32.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:203 which is executed by 179 tests
-1860145851
19:53:32.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:33.455 [pool-1205-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (771 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:34.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
19:53:34.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:155 which is executed by 210 tests
-1596688722
19:53:34.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
19:53:34.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:101 which is executed by 210 tests
-1596688722
19:53:34.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
19:53:34.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:726 which is executed by 213 tests
-357391461
19:53:34.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
19:53:34.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:128 which is executed by 215 tests
-1596688722
19:53:34.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:35.512 [pool-1209-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (518 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:36.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:37.074 [pool-1213-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (678 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:53:37.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
19:53:37.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:100 which is executed by 215 tests
-1596688722
19:53:37.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:38.374 [pool-1217-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (607 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:39.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
19:53:39.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:91 which is executed by 215 tests
-1596688722
19:53:39.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:40.199 [pool-1221-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (792 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:41.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:41.628 [pool-1225-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (550 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:42.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
19:53:42.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:87 which is executed by 215 tests
-1596688722
19:53:42.417 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:43.018 [pool-1229-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (589 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:43.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:44.636 [pool-1233-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (661 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:45.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
19:53:45.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:86 which is executed by 215 tests
-1596688722
19:53:45.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:46.192 [pool-1237-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (736 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:46.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
19:53:46.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:82 which is executed by 215 tests
-1596688722
19:53:47.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:48.069 [pool-1241-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (905 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:48.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
19:53:48.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseMultivariateOptimizer:66 which is executed by 215 tests
-1596688722
19:53:48.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
19:53:48.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:154 which is executed by 222 tests
-1860145851
19:53:49.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
19:53:49.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:152 which is executed by 222 tests
-1860145851
19:53:49.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:49.822 [pool-1245-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (589 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:50.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
19:53:50.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:151 which is executed by 222 tests
-1860145851
19:53:50.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:51.400 [pool-1249-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (568 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:52.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
19:53:52.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:230 which is executed by 230 tests
-1860145851
19:53:52.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
19:53:52.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:225 which is executed by 230 tests
-1860145851
19:53:52.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:53.311 [pool-1253-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (681 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:54.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:55.200 [pool-1257-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (898 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:55.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
19:53:55.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:221 which is executed by 230 tests
-1860145851
19:53:55.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:56.665 [pool-1261-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (731 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:53:57.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:58.066 [pool-1265-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (653 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:53:58.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
19:53:58.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:220 which is executed by 230 tests
-1860145851
19:53:58.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:53:59.692 [pool-1269-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (767 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:00.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
19:54:00.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.optim.BaseOptimizer:148 which is executed by 230 tests
-1860145851
19:54:00.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:01.719 [pool-1273-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (845 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:02.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
19:54:02.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:336 which is executed by 297 tests
627790943
19:54:02.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:03.101 [pool-1277-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (626 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:04.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
19:54:04.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:600 which is executed by 355 tests
-357391461
19:54:04.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
19:54:04.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3496 which is executed by 392 tests
1033054629
19:54:04.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
19:54:04.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:610 which is executed by 424 tests
-357391461
19:54:04.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
19:54:04.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:761 which is executed by 425 tests
-357391461
19:54:05.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
19:54:05.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.ArrayRealVector:758 which is executed by 437 tests
-357391461
19:54:05.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:05.866 [pool-1281-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (620 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:06.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:07.449 [pool-1285-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (634 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:08.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
19:54:08.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:272 which is executed by 546 tests
627790943
19:54:08.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
19:54:08.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:316 which is executed by 568 tests
-1875222545
19:54:08.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
19:54:08.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:315 which is executed by 568 tests
-1875222545
19:54:08.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:09.439 [pool-1289-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (722 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:54:10.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
19:54:10.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:314 which is executed by 568 tests
-1875222545
19:54:10.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:10.983 [pool-1293-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (548 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:769)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:54:12.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
19:54:12.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:307 which is executed by 646 tests
-1875222545
19:54:12.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
19:54:12.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:306 which is executed by 646 tests
-1875222545
19:54:12.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:54:13.349 [pool-1297-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (666 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

+1.2345658851e+02 -1.0007711538e+02   5.74903214e-01

+1.2345365928e+02 -9.1410541457e+01   1.51994696e+00
+1.2345365928e+02 -8.4056082915e+01   1.37914949e+00
+1.2345482964e+02 -9.8765000000e+01   1.13999475e+00
+1.2345482964e+02 -9.1410541457e+01   8.57490525e-01
+1.2345482964e+02 -8.4056082915e+01   1.17596475e+00
+1.2345600000e+02 -1.0611945854e+02   1.04345607e+00
+1.2345600000e+02 -9.8765000000e+01   6.19245084e-01
+1.2345600000e+02 -9.1410541457e+01   7.96012543e-01
+1.2345600000e+02 -8.4056082915e+01   1.57375845e+00
+1.2345717036e+02 -1.1347391709e+02   1.23033091e+00
+1.2345717036e+02 -1.0611945854e+02   6.64413163e-01
+1.2345717036e+02 -9.8765000000e+01   6.99473862e-01
+1.2345717036e+02 -9.1410541457e+01   1.33551301e+00
+1.2345834072e+02 -1.1347391709e+02   9.92994763e-01
+1.2345834072e+02 -1.0611945854e+02   8.86348702e-01
+1.2345834072e+02 -9.8765000000e+01   1.38068109e+00
+1.2345951108e+02 -1.1347391709e+02   1.35663706e+00

+1.2345014820e+02 -1.3553729271e+02   2.88454096e+01
+1.2345014820e+02 -1.2818283417e+02   2.37209264e+01
+1.2345014820e+02 -1.2082837563e+02   1.91974216e+01
+1.2345014820e+02 -1.1347391709e+02   1.52748953e+01
+1.2345014820e+02 -1.0611945854e+02   1.19533474e+01
+1.2345014820e+02 -9.8765000000e+01   9.23277793e+00
+1.2345014820e+02 -9.1410541457e+01   7.11318695e+00
+1.2345014820e+02 -8.4056082915e+01   5.59457441e+00
+1.2345014820e+02 -7.6701624372e+01   4.67694032e+00
+1.2345014820e+02 -6.9347165829e+01   4.36028469e+00
+1.2345131856e+02 -1.3553729271e+02   2.36243877e+01
+1.2345131856e+02 -1.2818283417e+02   1.89591761e+01
+1.2345131856e+02 -1.2082837563e+02   1.48949431e+01
+1.2345131856e+02 -1.1347391709e+02   1.14316884e+01
+1.2345131856e+02 -1.0611945854e+02   8.56941221e+00
+1.2345131856e+02 -9.8765000000e+01   6.30811446e+00
+1.2345131856e+02 -9.1410541457e+01   4.64779517e+00
+1.2345131856e+02 -8.4056082915e+01   3.58845432e+00
+1.2345131856e+02 -7.6701624372e+01   3.13009192e+00
+1.2345131856e+02 -6.9347165829e+01   3.27270797e+00
+1.2345248892e+02 -1.3553729271e+02   1.90043442e+01
+1.2345248892e+02 -1.2818283417e+02   1.47984044e+01
+1.2345248892e+02 -1.2082837563e+02   1.11934430e+01
+1.2345248892e+02 -1.1347391709e+02   8.18946001e+00
+1.2345248892e+02 -1.0611945854e+02   5.78645550e+00
+1.2345248892e+02 -9.8765000000e+01   3.98442944e+00
+1.2345248892e+02 -9.1410541457e+01   2.78338184e+00
+1.2345248892e+02 -8.4056082915e+01   2.18331268e+00
+1.2345248892e+02 -7.6701624372e+01   2.18422197e+00
+1.2345248892e+02 -6.9347165829e+01   2.78610971e+00
+1.2345365928e+02 -1.3553729271e+02   1.49852792e+01
+1.2345365928e+02 -1.2818283417e+02   1.12386110e+01
+1.2345365928e+02 -1.2082837563e+02   8.09292133e+00
+1.2345365928e+02 -1.1347391709e+02   5.54821006e+00
+1.2345365928e+02 -1.0611945854e+02   3.60447724e+00
+1.2345365928e+02 -9.8765000000e+01   2.26172287e+00
+1.2345365928e+02 -7.6701624372e+01   1.83933047e+00
+1.2345365928e+02 -6.9347165829e+01   2.90048990e+00
+1.2345482964e+02 -1.3553729271e+02   1.15671926e+01
+1.2345482964e+02 -1.2818283417e+02   8.27979617e+00
+1.2345482964e+02 -1.2082837563e+02   5.59337814e+00
+1.2345482964e+02 -1.1347391709e+02   3.50793856e+00
+1.2345482964e+02 -1.0611945854e+02   2.02347743e+00
+1.2345482964e+02 -7.6701624372e+01   2.09541742e+00
+1.2345482964e+02 -6.9347165829e+01   3.61584853e+00
+1.2345600000e+02 -1.3553729271e+02   8.75008453e+00
+1.2345600000e+02 -1.2818283417e+02   5.92195974e+00
+1.2345600000e+02 -1.2082837563e+02   3.69481340e+00
+1.2345600000e+02 -1.1347391709e+02   2.06864551e+00
+1.2345600000e+02 -7.6701624372e+01   2.95248281e+00
+1.2345600000e+02 -6.9347165829e+01   4.93218562e+00
+1.2345717036e+02 -1.3553729271e+02   6.53395486e+00
+1.2345717036e+02 -1.2818283417e+02   4.16510176e+00
+1.2345717036e+02 -1.2082837563e+02   2.39722711e+00
+1.2345717036e+02 -8.4056082915e+01   2.57253061e+00
+1.2345717036e+02 -7.6701624372e+01   4.41052666e+00
+1.2345717036e+02 -6.9347165829e+01   6.84950115e+00
+1.2345834072e+02 -1.3553729271e+02   4.91880364e+00
+1.2345834072e+02 -1.2818283417e+02   3.00922223e+00
+1.2345834072e+02 -1.2082837563e+02   1.70061927e+00
+1.2345834072e+02 -9.1410541457e+01   2.47599193e+00
+1.2345834072e+02 -8.4056082915e+01   4.17228122e+00
+1.2345834072e+02 -7.6701624372e+01   6.46954895e+00
+1.2345834072e+02 -6.9347165829e+01   9.36779514e+00
+1.2345951108e+02 -1.3553729271e+02   3.90463088e+00
+1.2345951108e+02 -1.2818283417e+02   2.45432116e+00
+1.2345951108e+02 -1.2082837563e+02   1.60498988e+00
+1.2345951108e+02 -1.0611945854e+02   1.70926269e+00
+1.2345951108e+02 -9.8765000000e+01   2.66286677e+00
+1.2345951108e+02 -9.1410541457e+01   4.21744930e+00
+1.2345951108e+02 -8.4056082915e+01   6.37301027e+00
+1.2345951108e+02 -7.6701624372e+01   9.12954970e+00
+1.2345951108e+02 -6.9347165829e+01   1.24870676e+01
+1.2346068144e+02 -1.3553729271e+02   3.49143656e+00
+1.2346068144e+02 -1.2818283417e+02   2.50039853e+00
+1.2346068144e+02 -1.2082837563e+02   2.11033894e+00
+1.2346068144e+02 -1.1347391709e+02   2.32125781e+00
+1.2346068144e+02 -1.0611945854e+02   3.13315513e+00
+1.2346068144e+02 -9.8765000000e+01   4.54603090e+00
+1.2346068144e+02 -9.1410541457e+01   6.55988511e+00
+1.2346068144e+02 -8.4056082915e+01   9.17471778e+00
+1.2346068144e+02 -7.6701624372e+01   1.23905289e+01
+1.2346068144e+02 -6.9347165829e+01   1.62073185e+01

# sigma=[0.0011703608261000845, 7.3544585426432905]
# 83 sets filtered out
                 True value       Mean        Std deviation
--------------------------------------------------------------
Parameter #0
              +1.234560e+02   +1.234560e+02   +4.711312e-04
sigma: +4.796968e-04 (+2.315530e-05)
--------------------------------------------------------------
Parameter #1
              -9.876500e+01   -9.885318e+01   +2.609609e+00
sigma: +2.644958e+00 (+1.577361e-01)
--------------------------------------------------------------
20:01:58.565 [pool-1296-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
20:01:58.566 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
20:01:58.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
20:01:58.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:339 which is executed by 736 tests
-1875222545
20:01:59.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
20:01:59.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:345 which is executed by 737 tests
-1875222545
20:01:59.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
20:01:59.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:457 which is executed by 773 tests
1308483921
20:01:59.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
20:01:59.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:456 which is executed by 773 tests
1308483921
20:01:59.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:00.656 [pool-1595-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (794 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:04.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
20:02:04.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:455 which is executed by 773 tests
1308483921
20:02:04.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:05.248 [pool-1599-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (809 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:08.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
20:02:08.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:488 which is executed by 808 tests
1308483921
20:02:08.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
20:02:08.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:484 which is executed by 808 tests
1308483921
20:02:09.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:09.637 [pool-1603-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (619 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:13.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:13.577 [pool-1607-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (504 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:15.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
20:02:15.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:473 which is executed by 808 tests
1308483921
20:02:15.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
20:02:15.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:469 which is executed by 809 tests
1308483921
20:02:16.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
20:02:16.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:468 which is executed by 809 tests
1308483921
20:02:16.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:16.900 [pool-1611-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (650 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:20.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:20.833 [pool-1615-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (600 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:22.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
20:02:22.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:46 which is executed by 815 tests
-1554378724
20:02:22.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:23.407 [pool-1619-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (460 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:23.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
20:02:23.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:158 which is executed by 903 tests
-1541725837
20:02:24.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
20:02:24.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:155 which is executed by 904 tests
-1541725837
20:02:24.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:24.829 [pool-1623-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (558 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:25.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:26.433 [pool-1627-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (730 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:27.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
20:02:27.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:97 which is executed by 907 tests
-1541725837
20:02:27.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
20:02:27.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:96 which is executed by 907 tests
-1541725837
20:02:27.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:28.339 [pool-1631-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (882 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:29.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
20:02:29.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:50 which is executed by 915 tests
-1554378724
20:02:29.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
20:02:29.830 [pool-1635-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (566 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

20:02:30.668 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
20:02:30.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:45 which is executed by 915 tests
-1554378724
20:02:30.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:31.546 [pool-1639-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (684 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:32.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:33.522 [pool-1643-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (849 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:34.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
20:02:34.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:165 which is executed by 934 tests
-1541725837
20:02:34.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
20:02:34.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Incrementor:164 which is executed by 934 tests
-1541725837
20:02:34.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:35.304 [pool-1647-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (668 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:36.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
20:02:36.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:344 which is executed by 942 tests
627790943
20:02:36.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
20:02:36.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:342 which is executed by 942 tests
627790943
20:02:36.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
20:02:36.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:338 which is executed by 942 tests
627790943
20:02:36.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:37.365 [pool-1651-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (759 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:40.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:40.991 [pool-1655-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (773 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:41.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
20:02:41.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:335 which is executed by 942 tests
627790943
20:02:42.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:42.657 [pool-1659-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (562 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:45.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:45.779 [pool-1663-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (613 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:47.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
20:02:47.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:332 which is executed by 942 tests
627790943
20:02:47.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
20:02:47.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:331 which is executed by 942 tests
627790943
20:02:47.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
20:02:47.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3006 which is executed by 1011 tests
1033054629
20:02:47.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
20:02:47.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3001 which is executed by 1011 tests
1033054629
20:02:48.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
20:02:48.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:89 which is executed by 1114 tests
-310961535
20:02:48.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
20:02:48.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:88 which is executed by 1114 tests
-310961535
20:02:48.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:49.041 [pool-1667-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (532 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:49.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
20:02:49.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:87 which is executed by 1114 tests
-310961535
20:02:49.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:50.530 [pool-1671-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (698 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:51.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
20:02:51.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:54 which is executed by 1115 tests
-1554378724
20:02:51.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
20:02:51.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:44 which is executed by 1115 tests
-1554378724
20:02:51.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:52.441 [pool-1675-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (623 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:53.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
20:02:53.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:43 which is executed by 1115 tests
-1554378724
20:02:53.419 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected TooManyIterationsException
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
20:02:54.010 [pool-1679-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (579 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[expected TooManyIterationsException]
java.lang.AssertionError: expected TooManyIterationsException    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:783)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

20:02:54.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:02:55.739 [pool-1683-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (849 ms)
<> Total tests run: 29
<> Ignored tests: 0
<> Failed tests: 1
~ testSolutionCallback(org.apache.commons.math3.optim.linear.SimplexSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertNotNull(Assert.java:621)
    at org.junit.Assert.assertNotNull(Assert.java:631)
    at org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionCallback(SimplexSolverTest.java:789)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

20:02:56.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
20:02:56.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:42 which is executed by 1115 tests
-1554378724
20:02:56.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
20:02:56.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:196 which is executed by 1382 tests
936233262
20:02:56.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
20:02:56.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195 which is executed by 1382 tests
936233262
20:02:57.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
20:03:13.025 [pool-1687-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15907 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
20:03:13.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
20:03:13.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3024 which is executed by 2474 tests
1033054629
20:03:13.827 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 766
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 5120
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 323
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 2
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 2990749ms
20:03:14.165 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
5825.95user 75.51system 49:53.65elapsed 197%CPU (0avgtext+0avgdata 4709848maxresident)k
38488inputs+14040outputs (3major+2279293minor)pagefaults 0swaps


Node: granduc-18.luxembourg.grid5000.fr



Date: Sun Dec 30 20:03:14 EST 2018

