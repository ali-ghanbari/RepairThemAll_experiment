{
  "repair_end": "2018-12-29 09:09:30.705681", 
  "repair_begin": "2018-12-29 08:29:24.911751", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_110/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:25.551117692 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -99,7 +97,19 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_727/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:12.590336844 -0500\n@@ -95,6 +95,9 @@\n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n             if (ball.contains(farthest, tolerance)) {\n+\t\t\t\treturn ball;\n+\t\t\t}\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            support.clear();\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1306/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:22.233651378 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_861/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:39.142277591 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +127,21 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_764/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:40.126316370 -0500\n@@ -103,11 +103,11 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_166/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:50.843064289 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_149/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:41.447083554 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -105,8 +108,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +142,15 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    if (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1552/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:57.065256227 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1374/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:03:27.865553322 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1669/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:44.177074826 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +142,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1637/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:23.777105851 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -131,6 +126,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -146,7 +155,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_708/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:54:44.754359324 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -104,10 +107,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_742/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:22.550329245 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,10 +107,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_67/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:46:45.763172729 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "farthest=point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_31/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:45:56.683249144 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -172,7 +170,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                farthest = point;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_754/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:25.778326830 -0500\n@@ -84,7 +84,10 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_193/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:48:08.607029621 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_193/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:08.607029621 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1291/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:01.085686819 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1168/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:37.769849250 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1168/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:00:37.769849250 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 137, 
          "faulty": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}", 
          "type": "Delete", 
          "seed": "support.add(pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_425/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:26.430701013 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -134,21 +142,6 @@\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n-\n-                    // we have found an outside point,\n-                    // enlarge the ball by adding it to the support\n-                    support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n-                }\n             }\n \n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_425/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:50:26.430701013 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1541/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:54.637260935 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    extreme.set(0, pi);\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_904/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:13.674257656 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_233/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:36.022971316 -0500\n@@ -99,15 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_518/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:00.738540926 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_828/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:30.598282817 -0500\n@@ -103,11 +103,9 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -144,7 +142,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_503/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:51:45.002564130 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +139,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_981/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:14.110144860 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1275/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:57.069693788 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            support.clear();\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1708/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:23.345019086 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1708/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:08:23.349019081 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1741/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:56.760975059 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -146,7 +144,7 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n+                    support.clear();\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 174, 
          "faulty": "farthest=point;", 
          "type": "Replace", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_123/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:34.355098539 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -171,7 +168,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n-                farthest = point;\n+                if (d > dMax) {\n+\t\t\t\t\tfarthest = point;\n+\t\t\t\t\tdMax = d;\n+\t\t\t\t}\n                 dMax     = d;\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1192/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:49.561823770 -0500\n@@ -103,10 +103,11 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1284/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:59.477689600 -0500\n@@ -94,7 +94,21 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -104,11 +118,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1148/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:19.977889461 -0500\n@@ -103,11 +103,35 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_226/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:28.922992594 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_544/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:24.914507616 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            extreme.add(0, farthest);\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -105,8 +106,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 136, 
          "faulty": "final P pi=extreme.get(i);", 
          "type": "InsertBefore", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_522/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:01.586539711 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n@@ -133,7 +132,10 @@\n         if (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n+                for (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\tfinal P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1474/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:02.769369253 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,7 +139,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1601/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:06:45.765167799 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +139,15 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    if (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_355/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:51.158775964 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_671/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:54:05.670394317 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_671/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:54:05.670394317 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1622/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:08.237130496 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1622/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:07:08.241130489 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_549/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:25.862506365 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -169,6 +167,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_43/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:46:05.367234583 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_412/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:23.110707671 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -169,6 +166,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_946/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:41.906214001 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +143,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_298/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:20.650848917 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -105,8 +108,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_203/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:11.487024209 -0500\n@@ -103,10 +103,12 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_848/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:56:35.886279568 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_848/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:35.886279568 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_173/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:58.183049692 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1109/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:46.825970554 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -131,6 +126,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -146,7 +155,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1394/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:03:40.717535976 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -153,7 +148,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_248/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:45.526943552 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +146,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_272/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:51.094927728 -0500\n@@ -104,10 +104,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "InsertBefore", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1653/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:39.633081612 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -146,7 +144,10 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n+                    for (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_979/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:13.786145522 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_346/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:49.182780450 -0500\n@@ -99,15 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +157,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1286/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:59.797689046 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_302/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:21.486846808 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -146,7 +144,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1259/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:41.365721805 -0500\n@@ -105,11 +105,11 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n-            // it was an interesting point, move it to the front\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1350/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:51.785605138 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1615/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:06:55.053152133 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -105,8 +106,9 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                if (points == null || points.isEmpty()) {\n+\t\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t\t}\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_850/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:36.210279370 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_850/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:56:36.210279370 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1151/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:20.609887996 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1085/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:28.502008941 -0500\n@@ -104,17 +104,24 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_256/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:47.498937910 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_783/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:50.254309244 -0500\n@@ -103,11 +103,9 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_962/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:58:03.582166702 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_962/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:03.582166702 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -105,8 +108,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1239/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:36.257731190 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +139,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_427/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:26.754700367 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_427/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:50:26.758700358 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 136, 
          "faulty": "final P pi=extreme.get(i);", 
          "type": "InsertBefore", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 173, 
          "faulty": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}", 
          "type": "InsertBefore", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_156/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:43.011080300 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -133,7 +131,10 @@\n         if (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n+                for (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\tfinal P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n@@ -171,6 +172,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t\tif (d > dMax) {\n                 farthest = point;\n                 dMax     = d;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:48.957708105 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,11 +107,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:01:48.961708098 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1074/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:19.446023925 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,7 +136,16 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    if (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_217/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:20.823007046 -0500\n@@ -104,16 +104,23 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_228/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:29.262991664 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -146,7 +141,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 174, 
          "faulty": "farthest=point;", 
          "type": "Replace", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_925/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:19.106254682 -0500\n@@ -104,10 +104,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -171,7 +181,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n-                farthest = point;\n+                if (d > dMax) {\n+\t\t\t\t\tfarthest = point;\n+\t\t\t\t\tdMax = d;\n+\t\t\t\t}\n                 dMax     = d;\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 96, 
          "faulty": "final P farthest=selectFarthest(points,ball);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_121/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:34.035099223 -0500\n@@ -86,20 +86,33 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n-            // select the point farthest to current ball\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n             if (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_584/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:46.098480580 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +142,9 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        ball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1159/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:34.289856944 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1159/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:00:34.289856944 -0500\n@@ -77,12 +77,12 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1530/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 03:05:40.505288947 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1530/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:40.505288947 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1672/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:50.537065444 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    extreme.set(0, pi);\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1408/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:03:50.145523595 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,7 +140,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    support.clear();\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_986/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:15.310142416 -0500\n@@ -104,17 +104,11 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_986/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:58:15.310142416 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 96, 
          "faulty": "final P farthest=selectFarthest(points,ball);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_55/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:46:31.295193818 -0500\n@@ -86,13 +86,27 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        support.clear();\n+        support.clear();\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n-            // select the point farthest to current ball\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n             if (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1301/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:15.229662889 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1526/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:39.557290864 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -169,6 +166,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1212/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:06.133789450 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -104,10 +107,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_610/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:04.454458647 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,24 +127,20 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n-\n-                    // we have found an outside point,\n-                    // enlarge the ball by adding it to the support\n-                    support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n-                }\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1205/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:04.469792820 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +139,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_395/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:13.086728263 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -139,7 +134,8 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n+                    extreme.set(0, pi);\n+\t\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_395/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:50:13.090728255 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_965/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:04.238165320 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -104,17 +107,13 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_797/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:11.326295067 -0500\n@@ -103,10 +103,9 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 174, 
          "faulty": "farthest=point;", 
          "type": "Replace", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1546/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:55.921258440 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +143,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -171,7 +167,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n-                farthest = point;\n+                if (d > dMax) {\n+\t\t\t\t\tfarthest = point;\n+\t\t\t\t\tdMax = d;\n+\t\t\t\t}\n                 dMax     = d;\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_140/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:39.675087262 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1432/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:04:08.353500466 -0500\n@@ -103,11 +103,9 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\tball = moveToFrontBall(extreme, support);\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 137, 
          "faulty": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}", 
          "type": "Delete", 
          "seed": "support.add(pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_943/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:41.270215439 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -134,21 +142,6 @@\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n-\n-                    // we have found an outside point,\n-                    // enlarge the ball by adding it to the support\n-                    support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n-                }\n             }\n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_809/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:14.406293065 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,11 +105,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_613/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:04.978458040 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_567/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:36.222492946 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -141,7 +138,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    support.clear();\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_638/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:34.454425532 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            support.clear();\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_644/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:35.730424194 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -105,8 +103,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_379/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:08.706737494 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            support.clear();\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_270/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:50.774928629 -0500\n@@ -103,10 +103,11 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -169,6 +170,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_891/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:04.522262762 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1178/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:40.453843370 -0500\n@@ -99,15 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_596/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:01.170462474 -0500\n@@ -104,17 +104,11 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1310/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:23.169649857 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_999/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:18.726135506 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_999/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:58:18.730135498 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1011/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:33.390106658 -0500\n@@ -105,15 +105,25 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_168/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:51.159063652 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_487/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:51:12.070616964 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +129,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -144,7 +156,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1518/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:37.785294461 -0500\n@@ -103,12 +103,10 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_397/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:13.438727528 -0500\n@@ -84,7 +84,10 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n@@ -105,8 +108,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1683/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:05.181044342 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -153,7 +161,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_338/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:47.370784591 -0500\n@@ -104,12 +104,8 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n-            // it was an interesting point, move it to the front\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1722/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:38.752998410 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,7 +139,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    extreme.set(0, pi);\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:40.093988078 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,10 +107,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:59:40.097988067 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1112/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:47.413969042 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            support.clear();\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_951/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:54.718185655 -0500\n@@ -84,7 +84,10 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n@@ -104,11 +107,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_951/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:57:54.722185646 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1015/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:34.294104922 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -105,8 +108,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 137, 
          "faulty": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_772/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:42.130314943 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -134,21 +142,6 @@\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n-\n-                    // we have found an outside point,\n-                    // enlarge the ball by adding it to the support\n-                    support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n-                }\n             }\n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_594/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:00.858462840 -0500\n@@ -94,7 +94,21 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -104,17 +118,11 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_459/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:52.790650829 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -104,11 +102,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_840/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:33.966280742 -0500\n@@ -102,11 +102,25 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_350/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:50.130778293 -0500\n@@ -103,12 +103,8 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,7 +140,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1655/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:39.961081119 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -144,7 +141,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -169,6 +165,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_533/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:10.450527217 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,11 +107,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +139,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_294/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:19.814851031 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -169,6 +166,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_864/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:39.786277202 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_496/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:51:37.494575651 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            support.clear();\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_358/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:57.522761733 -0500\n@@ -104,17 +104,13 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 174, 
          "faulty": "farthest=point;", 
          "type": "Replace", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_919/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:17.642255479 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -171,7 +169,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n-                farthest = point;\n+                if (d > dMax) {\n+\t\t\t\t\tfarthest = point;\n+\t\t\t\t\tdMax = d;\n+\t\t\t\t}\n                 dMax     = d;\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:57.429807265 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -104,11 +102,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -153,7 +146,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1022/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:35.966101722 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,7 +139,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    support.clear();\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1406/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:03:49.817524021 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -84,9 +87,13 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +111,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1044/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:59.018059223 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1044/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:58:59.018059223 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_268/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:50.446929554 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1050/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:00.502056587 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n@@ -146,7 +145,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -169,6 +167,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1604/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:06:46.393166728 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -105,8 +108,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_830/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:30.922282616 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_410/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:22.746708406 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1695/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:19.761023992 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,7 +136,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    support.clear();\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1326/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:33.245633718 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +142,9 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        ball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1326/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:02:33.245633718 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_605/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:03.394459878 -0500\n@@ -72,7 +72,6 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -105,8 +104,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_479/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:51:10.026620446 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -105,8 +106,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_374/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:07.554739946 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -104,11 +102,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_813/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:15.034292659 -0500\n@@ -99,16 +99,23 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_630/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:20.790440214 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -132,7 +140,21 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_642/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:35.414424525 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -105,8 +106,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -169,6 +168,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "farthest=point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_158/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:43.327079647 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -99,7 +97,19 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n@@ -172,7 +182,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                farthest = point;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_659/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:51.002408596 -0500\n@@ -104,10 +104,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1574/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:06:32.257191238 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +129,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1795/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:09:29.596934551 -0500\n@@ -104,17 +104,24 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_600/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:02.118461365 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -144,7 +141,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_239/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:43.178950320 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_556/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:33.322496655 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -105,8 +106,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_937/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:57:34.022232025 -0500\n@@ -104,10 +104,9 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_96/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:10.523139170 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,7 +139,16 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    if (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1489/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:12.577347567 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -144,7 +141,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_573/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:37.494491330 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 173, 
          "faulty": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}", 
          "type": "InsertBefore", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_51/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:46:24.623203934 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -171,6 +169,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t\tif (d > dMax) {\n                 farthest = point;\n                 dMax     = d;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_444/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:37.410679540 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -144,7 +141,9 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        ball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1744/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:57.380974269 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -131,6 +126,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1457/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:04:45.525408869 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -132,7 +129,21 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_423/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:26.094701682 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_386/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:10.630733422 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_145/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:40.799084907 -0500\n@@ -99,14 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1537/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:47.961274035 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -141,7 +138,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    support.clear();\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1241/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:36.573730606 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_310/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:23.286842291 -0500\n@@ -104,10 +104,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_333/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:46.458786686 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_703/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:54:31.982370295 -0500\n@@ -86,15 +86,27 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -104,11 +116,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1140/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:17.877894355 -0500\n@@ -104,17 +104,13 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "support.add(farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_699/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:54:25.298376212 -0500\n@@ -105,11 +105,10 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n-            // it was an interesting point, move it to the front\n+            support.add(farthest);\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1642/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:07:24.913104084 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +144,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1642/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:07:24.913104084 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_776/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:55:48.726310306 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_308/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:22.962843101 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_308/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:49:22.962843101 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_546/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:25.226507204 -0500\n@@ -104,10 +104,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1234/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:01:29.333744135 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -169,6 +167,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1234/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:01:29.333744135 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_276/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:57.790909121 -0500\n@@ -72,7 +72,10 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,11 +107,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_13/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:45:46.359267085 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1319/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:02:25.709645748 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -103,7 +101,8 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n                 // TODO: fix this, it should never happen but it does!\n                 throw new MathInternalError();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_147/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:41.135084205 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -105,8 +106,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_321/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:49:25.882835826 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_321/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:25.886835817 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "Replace", 
          "seed": "support.add(pi);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1186/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:42.233839497 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +129,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -139,7 +151,7 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n+                    support.add(pi);\n \n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_312/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:23.634841421 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -139,7 +137,8 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n+                    extreme.set(0, pi);\n+\t\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_656/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:50.378409219 -0500\n@@ -104,10 +104,18 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +154,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_185/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:07.019032630 -0500\n@@ -102,11 +102,10 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            extreme.add(0, farthest);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1727/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:08:39.904996890 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +143,9 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        ball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_189/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:07.931030900 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1520/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:38.097293826 -0500\n@@ -105,16 +105,13 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1183/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:00:41.597840879 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -153,7 +150,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_576/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:38.114490545 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_162/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:44.223077793 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    support.clear();\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1115/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:59:47.921967737 -0500\n@@ -99,14 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +153,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_713/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:54:51.658353571 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -146,7 +143,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_997/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:18.406136150 -0500\n@@ -86,7 +86,8 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n+        extreme.add(points.get(0));\n+\t\t// start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n@@ -104,10 +105,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            ball = moveToFrontBall(extreme, support);\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_336/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:47.050785325 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_447/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:50:38.054678305 -0500\n@@ -99,16 +99,25 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:28:54.093652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_230/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 02:48:29.606990616 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_230/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:29.606990616 -0500\n@@ -84,7 +84,10 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n@@ -104,10 +107,20 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_230/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:48:29.606990616 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_344/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:49:48.854781197 -0500\n@@ -104,17 +104,13 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(0, farthest);\n \n \n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 171, 
          "faulty": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (final P point : points) {\n  final double d=point.distance(center);\n  if (d > dMax) {\n    farthest=point;\n    dMax=d;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_191/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:48:08.271030257 -0500\n@@ -104,10 +104,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n@@ -132,7 +129,21 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -153,7 +164,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n@@ -169,6 +192,13 @@\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n+\t\t\tfinal double d = point.distance(center);\n+\t\t\tif (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t}\n+\t\tfor (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_811/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:14.718292863 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_869/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:56:40.934276510 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_869/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:56:40.938276508 -0500\n@@ -77,12 +77,13 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_621/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:53:06.922455799 -0500\n@@ -105,8 +105,9 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                if (points == null || points.isEmpty()) {\n+\t\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t\t}\n             }\n \n             // it was an interesting point, move it to the front\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 173, 
          "faulty": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}", 
          "type": "InsertBefore", 
          "seed": "if (d > dMax) {\n  farthest=point;\n  dMax=d;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:04:25.673456975 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -171,6 +166,10 @@\n         for (final P point : points) {\n             final double d = point.distance(center);\n             if (d > dMax) {\n+\t\t\t\tfarthest = point;\n+\t\t\t\tdMax = d;\n+\t\t\t}\n+\t\t\tif (d > dMax) {\n                 farthest = point;\n                 dMax     = d;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1510/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:35.769298575 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -153,7 +148,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 02:28:54.081652000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1510/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 03:05:35.769298575 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1548/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 03:05:56.237257829 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 136, 
          "faulty": "final P pi=extreme.get(i);", 
          "type": "InsertBefore", 
          "seed": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_130/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:47:37.191092500 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -133,7 +131,10 @@\n         if (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n+                for (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\tfinal P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 86, 
          "faulty": "List<P> extreme=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Replace", 
          "seed": "extreme.add(points.get(0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_569/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:52:36.538492544 -0500\n@@ -83,7 +83,10 @@\n      */\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n-        List<P> extreme = new ArrayList<P>(max);\n+        if (points == null || points.isEmpty()) {\n+\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t}\n+\t\tList<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n@@ -104,10 +107,7 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n+            extreme.add(points.get(0));\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:28:54.137653000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1003/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-29 02:58:25.418122180 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -153,7 +151,19 @@\n \n         }\n \n-        return ball;\n+        for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\tfinal P pi = extreme.get(i);\n+\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\tsupport.add(pi);\n+\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()),\n+\t\t\t\t\t\tsupport);\n+\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t}\n+\t\t\t\textreme.set(0, pi);\n+\t\t\t}\n+\t\t}\n+\t\treturn ball;\n \n     }\n \n\n\n"
    }
  ]
}