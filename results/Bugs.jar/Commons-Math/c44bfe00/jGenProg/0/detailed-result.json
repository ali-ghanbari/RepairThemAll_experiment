{"general":{"NR_RIGHT_COMPILATIONS":795,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Commons-Math-c44bfe00","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":476,"NR_GENERATIONS":1271,"TOTAL_TIME":4269.138,"NR_FAILING_VALIDATION_PROCESS":2},"patches":[{"VARIANT_ID":"2542","VALIDATION":"|true|0|5791|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math4.analysis.solvers.BracketingNthOrderBrentSolver","PATH":"\\\/tmp\\\/jGenProg_Bug_dot_jar_Commons-Math_c44bfe00\\\/output_astor\\\/AstorMain-Commons-Math-c44bfe00\\\/src\\\/default\\\/org\\\/apache\\\/commons\\\/math4\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0.218","INGREDIENT_PARENT":"++agingB","PATCH_HUNK_TYPE":"CtUnaryOperatorImpl|CtBlockImpl","ORIGINAL_CODE":"java.lang.System.arraycopy(y, start, y, 0, nbPoints)","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_Bug_dot_jar_Commons-Math_c44bfe00\\\/.\\\/output_astor\\\/AstorMain-Commons-Math-c44bfe00\\\/\\\/src\\\/\\\/variant-2542_f\\\/org\\\/apache\\\/commons\\\/math4\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","LINE":"305","MP_RANKING":"66","PATCH_HUNK_CODE":"++agingB"}],"TIME":"4269","GENERATION":"1271","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_Bug_dot_jar_Commons-Math_c44bfe00\\\/.\\\/output_astor\\\/AstorMain-Commons-Math-c44bfe00\\\/\\\/bin\\\/\\\/variant-2542","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- org\\\/apache\\\/commons\\\/math4\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n+++ org\\\/apache\\\/commons\\\/math4\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n@@ -303,46 +303,46 @@\\n \\t\\t\\t\\tnbPoints = end - start;\\n \\t\\t\\t\\tjava.lang.System.arraycopy(x, start, x, 0, nbPoints);\\n \\t\\t\\t\\tjava.lang.System.arraycopy(y, start, y, 0, nbPoints);\\n-\\t\\t\\t\\tsignChangeIndex -= start;\\n \\n-\\t\\t\\t}else \\t\\t\\t\\tif (nbPoints == (x.length)) {\\n \\n \\n-\\t\\t\\t\\t\\tnbPoints--;\\n \\n \\n-\\t\\t\\t\\t\\tif (signChangeIndex >= (((x.length) + 1) \\\/ 2)) {\\n \\n-\\t\\t\\t\\t\\t\\tjava.lang.System.arraycopy(x, 1, x, 0, nbPoints);\\n-\\t\\t\\t\\t\\t\\tjava.lang.System.arraycopy(y, 1, y, 0, nbPoints);\\n-\\t\\t\\t\\t\\t\\t--signChangeIndex;\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t}\\n \\n \\n \\n-\\t\\t\\tjava.lang.System.arraycopy(x, signChangeIndex, x, (signChangeIndex + 1), (nbPoints - signChangeIndex));\\n-\\t\\t\\tx[signChangeIndex] = nextX;\\n-\\t\\t\\tjava.lang.System.arraycopy(y, signChangeIndex, y, (signChangeIndex + 1), (nbPoints - signChangeIndex));\\n-\\t\\t\\ty[signChangeIndex] = nextY;\\n-\\t\\t\\t++nbPoints;\\n \\n \\n-\\t\\t\\tif ((nextY * yA) <= 0) {\\n \\n-\\t\\t\\t\\txB = nextX;\\n-\\t\\t\\t\\tyB = nextY;\\n-\\t\\t\\t\\tabsYB = org.apache.commons.math4.util.FastMath.abs(yB);\\n-\\t\\t\\t\\t++agingA;\\n-\\t\\t\\t\\tagingB = 0;\\n-\\t\\t\\t}else {\\n \\n-\\t\\t\\t\\txA = nextX;\\n-\\t\\t\\t\\tyA = nextY;\\n-\\t\\t\\t\\tabsYA = org.apache.commons.math4.util.FastMath.abs(yA);\\n-\\t\\t\\t\\tagingA = 0;\\n-\\t\\t\\t\\t++agingB;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t++agingB; \\t\\t\\t\\tsignChangeIndex -= start;}else \\t\\t\\t\\tif (nbPoints == (x.length)) { \\t\\t\\t\\t\\tnbPoints--; \\t\\t\\t\\t\\tif (signChangeIndex >= (((x.length) + 1) \\\/ 2)) { \\t\\t\\t\\t\\t\\tjava.lang.System.arraycopy(x, 1, x, 0, nbPoints); \\t\\t\\t\\t\\t\\tjava.lang.System.arraycopy(y, 1, y, 0, nbPoints); \\t\\t\\t\\t\\t\\t--signChangeIndex;}} \\t\\t\\tjava.lang.System.arraycopy(x, signChangeIndex, x, (signChangeIndex + 1), (nbPoints - signChangeIndex)); \\t\\t\\tx[signChangeIndex] = nextX; \\t\\t\\tjava.lang.System.arraycopy(y, signChangeIndex, y, (signChangeIndex + 1), (nbPoints - signChangeIndex)); \\t\\t\\ty[signChangeIndex] = nextY; \\t\\t\\t++nbPoints; \\t\\t\\tif ((nextY * yA) <= 0) { \\t\\t\\t\\txB = nextX; \\t\\t\\t\\tyB = nextY; \\t\\t\\t\\tabsYB = org.apache.commons.math4.util.FastMath.abs(yB); \\t\\t\\t\\t++agingA; \\t\\t\\t\\tagingB = 0;}else { \\t\\t\\t\\txA = nextX; \\t\\t\\t\\tyA = nextY; \\t\\t\\t\\tabsYA = org.apache.commons.math4.util.FastMath.abs(yA); \\t\\t\\t\\tagingA = 0; \\t\\t\\t\\t++agingB;\\n \\n \\n \\t\\t\\t\\tsignChangeIndex++;\\n\\n"}]}