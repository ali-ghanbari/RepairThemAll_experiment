cd /tmp/DynaMoth_Bug_dot_jar_Commons-Math_f4c926ea;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
18:47:03.495 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
18:47:03.516 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_f4c926ea/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_f4c926ea/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
18:47:03.516 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
18:47:03.516 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.spherical.oned.ArcTest, org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math3.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math3.geometry.spherical.oned.S1PointTest, org.apache.commons.math3.geometry.spherical.oned.Sphere1Test, org.apache.commons.math3.geometry.spherical.twod.CircleTest, org.apache.commons.math3.geometry.spherical.twod.S2PointTest, org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math3.geometry.spherical.twod.SubCircleTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ml.neuralnet.MapUtilsTest, org.apache.commons.math3.ml.neuralnet.NetworkTest, org.apache.commons.math3.ml.neuralnet.NeuronTest, org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest, org.apache.commons.math3.ode.nonstiff.LutherStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math3.stat.interval.IntervalUtilsTest, org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest]
18:47:03.519 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.SparseGradientTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.MidPointIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math3.analysis.integration.gauss.HermiteTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.ParetoDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianCurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicCurveFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialCurveFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.WeightedObservedPointsTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTest, org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest, org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.fitting.leastsquares.MinpackTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math3.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.spherical.oned.ArcTest, org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math3.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math3.geometry.spherical.oned.S1PointTest, org.apache.commons.math3.geometry.spherical.oned.Sphere1Test, org.apache.commons.math3.geometry.spherical.twod.CircleTest, org.apache.commons.math3.geometry.spherical.twod.S2PointTest, org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math3.geometry.spherical.twod.SubCircleTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ml.clustering.DBSCANClustererTest, org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math3.ml.distance.CanberraDistanceTest, org.apache.commons.math3.ml.distance.ChebyshevDistanceTest, org.apache.commons.math3.ml.distance.EarthMoversDistanceTest, org.apache.commons.math3.ml.distance.EuclideanDistanceTest, org.apache.commons.math3.ml.distance.ManhattanDistanceTest, org.apache.commons.math3.ml.neuralnet.MapUtilsTest, org.apache.commons.math3.ml.neuralnet.NetworkTest, org.apache.commons.math3.ml.neuralnet.NeuronTest, org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest, org.apache.commons.math3.ode.nonstiff.LutherStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.HaltonSequenceGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorFactoryTest, org.apache.commons.math3.random.SobolSequenceGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.KendallsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.BinomialTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math3.stat.interval.IntervalUtilsTest, org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.CombinationsTest, org.apache.commons.math3.util.CombinatoricsUtilsTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
18:47:03.520 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
18:47:03.529 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 217 MB
18:47:03.529 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
18:47:03.529 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
18:47:03.529 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
18:47:03.531 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
18:47:03.531 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
18:55:30.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
18:55:30.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:175 which is executed by 1 tests
2368533
18:55:30.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:32.195 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (1414 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:33.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
18:55:33.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:174 which is executed by 1 tests
2368533
18:55:33.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:33.813 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:34.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
18:55:34.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:173 which is executed by 1 tests
2368533
18:55:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:34.704 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (121 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:35.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
18:55:35.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:172 which is executed by 1 tests
2368533
18:55:35.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:35.701 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:36.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
18:55:36.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:226 which is executed by 2 tests
636246794
18:55:36.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
18:55:36.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:225 which is executed by 2 tests
636246794
18:55:36.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
18:55:36.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:224 which is executed by 2 tests
636246794
18:55:36.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
18:55:36.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:223 which is executed by 2 tests
636246794
18:55:37.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
18:55:37.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:222 which is executed by 2 tests
636246794
18:55:37.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
18:55:37.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:142 which is executed by 8 tests
-786828785
18:55:37.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
18:55:37.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:342 which is executed by 10 tests
-207728720
18:55:37.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:37.831 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (28 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:38.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
18:55:38.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:341 which is executed by 10 tests
-207728720
18:55:38.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:38.440 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:38.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:38.821 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:39.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
18:55:39.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:340 which is executed by 10 tests
-207728720
18:55:39.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:39.444 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:39.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
18:55:39.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:339 which is executed by 10 tests
-207728720
18:55:40.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:40.059 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:40.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:40.426 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:40.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
18:55:40.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3073 which is executed by 10 tests
1033054629
18:55:41.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:41.153 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (103 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:42.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
18:55:42.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3072 which is executed by 10 tests
1033054629
18:55:42.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:43.090 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (114 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:44.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:44.546 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:45.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
18:55:45.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:360 which is executed by 17 tests
-207728720
18:55:46.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
18:55:46.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:357 which is executed by 17 tests
-207728720
18:55:46.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
18:55:46.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:356 which is executed by 17 tests
-207728720
18:55:46.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:46.596 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:46.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
18:55:46.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:353 which is executed by 17 tests
-207728720
18:55:47.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
18:55:47.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:352 which is executed by 17 tests
-207728720
18:55:47.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:47.347 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:47.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
18:55:47.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:351 which is executed by 17 tests
-207728720
18:55:47.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
18:55:47.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:338 which is executed by 17 tests
-207728720
18:55:48.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:48.093 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:48.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:48.415 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:48.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
18:55:48.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:336 which is executed by 17 tests
-207728720
18:55:48.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:48.954 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:49.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
18:55:49.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:335 which is executed by 17 tests
-207728720
18:55:49.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:49.489 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:49.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:49.810 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:50.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
18:55:50.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:333 which is executed by 17 tests
-207728720
18:55:50.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:50.362 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:50.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
18:55:50.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:332 which is executed by 17 tests
-207728720
18:55:50.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:50.889 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:51.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:51.204 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:51.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
18:55:51.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:323 which is executed by 17 tests
-207728720
18:55:51.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:51.725 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:52.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:52.059 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:52.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
18:55:52.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:321 which is executed by 17 tests
-207728720
18:55:52.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:52.580 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:52.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
18:55:52.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:320 which is executed by 17 tests
-207728720
18:55:53.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:53.094 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:53.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:54.070 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (694 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:54.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
18:55:54.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:318 which is executed by 17 tests
-207728720
18:55:54.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:54.620 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:54.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
18:55:54.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:317 which is executed by 17 tests
-207728720
18:55:55.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:55.133 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:55.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:55.445 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:55.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
18:55:55.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:239 which is executed by 17 tests
-207728720
18:55:55.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:55.969 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:56.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
18:55:56.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:237 which is executed by 17 tests
-207728720
18:55:56.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:56.491 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:56.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
18:55:56.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:236 which is executed by 17 tests
-207728720
18:55:56.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:57.011 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:57.310 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
18:55:57.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:235 which is executed by 17 tests
-207728720
18:55:57.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:55:57.543 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:55:57.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
18:55:57.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:234 which is executed by 17 tests
-207728720
18:55:58.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
18:55:58.083 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:233 which is executed by 17 tests
-207728720
18:55:58.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
18:55:58.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:232 which is executed by 17 tests
-207728720
18:55:58.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
18:55:58.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:183 which is executed by 17 tests
-207728720
18:55:58.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
18:55:58.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:63 which is executed by 95 tests
2368533
18:55:59.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
18:55:59.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:287 which is executed by 18 tests
2368533
18:55:59.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
18:55:59.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:206 which is executed by 25 tests
-204121547
18:55:59.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:55:59.587 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:55:59.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
18:55:59.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:205 which is executed by 25 tests
-204121547
18:56:00.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
18:56:00.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:69 which is executed by 25 tests
1157956927
18:56:00.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
18:56:00.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:68 which is executed by 25 tests
1157956927
18:56:00.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
18:56:00.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:393 which is executed by 25 tests
-786828785
18:56:00.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
18:56:00.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:304 which is executed by 25 tests
-786828785
18:56:00.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
18:56:00.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:301 which is executed by 25 tests
-786828785
18:56:01.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:01.200 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:01.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:01.537 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:01.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
18:56:01.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:300 which is executed by 25 tests
-786828785
18:56:02.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
18:56:02.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:251 which is executed by 25 tests
-786828785
18:56:02.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
18:56:02.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:250 which is executed by 25 tests
-786828785
18:56:02.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:02.485 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:02.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
18:56:02.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:238 which is executed by 25 tests
-786828785
18:56:02.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
18:56:02.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:237 which is executed by 25 tests
-786828785
18:56:03.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:03.223 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:03.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
18:56:03.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:232 which is executed by 25 tests
-786828785
18:56:03.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:03.794 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:04.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:04.161 [pool-168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:04.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
18:56:04.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:229 which is executed by 25 tests
-786828785
18:56:04.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:04.747 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:05.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:05.063 [pool-176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:05.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
18:56:05.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:226 which is executed by 25 tests
-786828785
18:56:05.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
18:56:05.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:225 which is executed by 25 tests
-786828785
18:56:05.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
18:56:05.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:179 which is executed by 25 tests
-786828785
18:56:05.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
18:56:05.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:178 which is executed by 25 tests
-786828785
18:56:06.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:06.236 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (29 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:06.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
18:56:06.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:177 which is executed by 25 tests
-786828785
18:56:06.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:06.761 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:07.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
18:56:07.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:176 which is executed by 25 tests
-786828785
18:56:07.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
18:56:07.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Network:172 which is executed by 25 tests
-786828785
18:56:07.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:07.517 [pool-188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:07.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:07.826 [pool-192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:08.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
18:56:08.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:93 which is executed by 25 tests
1157956927
18:56:08.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
18:56:08.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:92 which is executed by 25 tests
1157956927
18:56:08.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:56:08.550 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

18:56:08.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
18:56:08.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1:91 which is executed by 25 tests
1157956927
18:56:09.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
18:56:09.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2:111 which is executed by 25 tests
1157956927
18:56:09.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
18:56:09.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:108 which is executed by 27 tests
1157956927
18:56:09.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
18:56:09.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:85 which is executed by 27 tests
1157956927
18:56:09.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
18:56:09.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.ml.neuralnet.Neuron:70 which is executed by 27 tests
-1965019244
18:56:09.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
18:56:09.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.analysis.function.Constant:43 which is executed by 29 tests
-503167035
18:56:10.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
18:56:10.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:301 which is executed by 30 tests
2368533
18:56:10.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
18:56:10.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:257 which is executed by 31 tests
2368533
18:56:10.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:10.565 [pool-200-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (101 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:10.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
18:56:10.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:159 which is executed by 44 tests
2368533
18:56:11.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
18:56:11.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:230 which is executed by 44 tests
-204121547
18:56:11.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
18:56:11.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:229 which is executed by 44 tests
-204121547
18:56:11.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
18:56:11.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:227 which is executed by 44 tests
-204121547
18:56:11.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
18:56:11.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:224 which is executed by 44 tests
-204121547
18:56:12.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
18:56:12.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:223 which is executed by 44 tests
-204121547
18:56:12.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
18:56:12.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:220 which is executed by 44 tests
-204121547
18:56:12.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
18:56:12.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:219 which is executed by 44 tests
-204121547
18:56:12.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
18:56:12.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:217 which is executed by 44 tests
-204121547
18:56:12.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
18:56:12.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:216 which is executed by 44 tests
-204121547
18:56:13.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
18:56:13.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:215 which is executed by 44 tests
-204121547
18:56:13.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
18:56:13.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:214 which is executed by 44 tests
-204121547
18:56:13.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
18:56:13.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:213 which is executed by 44 tests
-204121547
18:56:13.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
18:56:13.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:212 which is executed by 44 tests
-204121547
18:56:13.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
18:56:13.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:203 which is executed by 44 tests
-204121547
18:56:14.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:14.166 [pool-204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:14.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:14.580 [pool-208-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:14.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
18:56:14.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:201 which is executed by 44 tests
-204121547
18:56:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
18:56:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:200 which is executed by 44 tests
-204121547
18:56:15.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
18:56:15.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:199 which is executed by 44 tests
-204121547
18:56:15.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
18:56:15.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.SubLine:198 which is executed by 44 tests
-204121547
18:56:15.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
18:56:15.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:378 which is executed by 45 tests
2368533
18:56:15.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
18:56:15.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:279 which is executed by 45 tests
2368533
18:56:16.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
18:56:16.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:274 which is executed by 45 tests
2368533
18:56:16.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
18:56:16.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.distribution.UniformRealDistribution:228 which is executed by 47 tests
-2021749513
18:56:16.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
18:56:16.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.distribution.UniformRealDistribution:227 which is executed by 47 tests
-2021749513
18:56:16.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
18:56:16.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:259 which is executed by 51 tests
2368533
18:56:17.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
18:56:17.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2667 which is executed by 51 tests
1033054629
18:56:17.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:17.442 [pool-212-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:18.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
18:56:18.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:256 which is executed by 52 tests
2368533
18:56:19.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:19.154 [pool-216-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:19.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:19.675 [pool-220-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (121 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:20.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
18:56:20.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:255 which is executed by 52 tests
2368533
18:56:20.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
18:56:20.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:267 which is executed by 53 tests
1084075479
18:56:20.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
18:56:20.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:155 which is executed by 53 tests
-1943478097
18:56:20.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
18:56:20.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:239 which is executed by 54 tests
2368533
18:56:20.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
18:56:20.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:238 which is executed by 54 tests
2368533
18:56:21.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
18:56:21.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2671 which is executed by 54 tests
1033054629
18:56:21.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:21.551 [pool-224-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:22.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
18:56:22.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2670 which is executed by 54 tests
1033054629
18:56:23.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:23.324 [pool-228-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:24.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:24.820 [pool-232-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:26.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
18:56:26.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:172 which is executed by 57 tests
898417246
18:56:26.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
18:56:26.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:171 which is executed by 57 tests
898417246
18:56:26.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:26.769 [pool-236-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:27.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
18:56:27.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:170 which is executed by 57 tests
898417246
18:56:27.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:27.445 [pool-240-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:27.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
18:56:27.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:169 which is executed by 57 tests
898417246
18:56:27.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:28.105 [pool-244-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (114 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:28.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
18:56:28.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:168 which is executed by 57 tests
898417246
18:56:28.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:28.750 [pool-248-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (101 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:29.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
18:56:29.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:167 which is executed by 57 tests
898417246
18:56:29.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:29.417 [pool-252-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (119 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:29.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
18:56:29.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:160 which is executed by 57 tests
898417246
18:56:29.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:30.070 [pool-256-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (101 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:30.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:30.504 [pool-260-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:30.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
18:56:30.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:159 which is executed by 57 tests
898417246
18:56:31.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
18:56:31.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:154 which is executed by 57 tests
898417246
18:56:31.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:31.420 [pool-264-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:31.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:31.848 [pool-268-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:32.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
18:56:32.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:263 which is executed by 58 tests
1084075479
18:56:32.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:32.505 [pool-272-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:32.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
18:56:32.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:261 which is executed by 58 tests
1084075479
18:56:33.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:33.297 [pool-276-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (129 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:33.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:33.811 [pool-280-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:34.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
18:56:34.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:251 which is executed by 58 tests
1084075479
18:56:34.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
18:56:34.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:551 which is executed by 61 tests
898417246
18:56:34.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:34.774 [pool-284-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:35.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
18:56:35.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:550 which is executed by 61 tests
898417246
18:56:35.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:35.430 [pool-288-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:35.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:35.855 [pool-292-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:36.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
18:56:36.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:186 which is executed by 61 tests
898417246
18:56:36.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:36.496 [pool-296-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:36.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
18:56:36.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:185 which is executed by 61 tests
898417246
18:56:37.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:37.159 [pool-300-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (125 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:37.677 [pool-304-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:37.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
18:56:37.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2666 which is executed by 63 tests
1033054629
18:56:38.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:38.369 [pool-308-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:39.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:39.834 [pool-312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:41.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
18:56:41.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:301 which is executed by 67 tests
898417246
18:56:41.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:41.516 [pool-316-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:41.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
18:56:41.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:83 which is executed by 67 tests
-1943478097
18:56:42.045 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
18:56:42.045 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:298 which is executed by 68 tests
898417246
18:56:42.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:42.425 [pool-320-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (103 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:42.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:42.873 [pool-324-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (101 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:43.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
18:56:43.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:304 which is executed by 69 tests
898417246
18:56:43.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
18:56:43.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:297 which is executed by 69 tests
898417246
18:56:43.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:43.732 [pool-328-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:44.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
18:56:44.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:296 which is executed by 69 tests
898417246
18:56:44.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
18:56:44.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane:127 which is executed by 69 tests
-1149847119
18:56:44.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
18:56:44.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:182 which is executed by 69 tests
2368533
18:56:44.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
18:56:44.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:180 which is executed by 69 tests
2368533
18:56:44.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:45.003 [pool-332-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (113 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:45.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
18:56:45.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:179 which is executed by 69 tests
2368533
18:56:46.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:46.188 [pool-336-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (120 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:46.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
18:56:46.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:178 which is executed by 69 tests
2368533
18:56:46.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:46.893 [pool-340-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:47.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
18:56:47.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:177 which is executed by 69 tests
2368533
18:56:47.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:47.609 [pool-344-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (143 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:47.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
18:56:47.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:171 which is executed by 69 tests
2368533
18:56:48.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:48.298 [pool-348-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (112 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:48.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:48.781 [pool-352-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:49.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
18:56:49.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:170 which is executed by 69 tests
2368533
18:56:49.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
18:56:49.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:169 which is executed by 69 tests
2368533
18:56:49.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
18:56:49.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Line:168 which is executed by 69 tests
2368533
18:56:49.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
18:56:49.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:103 which is executed by 70 tests
-807992275
18:56:49.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
18:56:49.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:230 which is executed by 70 tests
898417246
18:56:50.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
18:56:50.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:229 which is executed by 70 tests
898417246
18:56:50.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:50.523 [pool-356-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (130 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:50.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
18:56:50.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3593 which is executed by 84 tests
1033054629
18:56:51.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:51.213 [pool-360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (103 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:52.461 [pool-359-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:2068: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
18:56:52.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
18:56:52.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:214 which is executed by 93 tests
898417246
18:56:52.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
18:56:52.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:206 which is executed by 93 tests
898417246
18:56:52.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
18:56:52.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3607 which is executed by 95 tests
1033054629
18:56:53.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:53.267 [pool-362-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:54.566 [pool-361-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:2068: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
18:56:54.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
18:56:54.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3604 which is executed by 95 tests
1033054629
18:56:54.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
18:56:54.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3601 which is executed by 95 tests
1033054629
18:56:55.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
18:56:55.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3600 which is executed by 95 tests
1033054629
18:56:55.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
18:56:55.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3597 which is executed by 95 tests
1033054629
18:56:55.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
18:56:55.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:359 which is executed by 104 tests
1084075479
18:56:55.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
18:56:55.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractRegion:355 which is executed by 104 tests
1084075479
18:56:56.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:56.200 [pool-364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:56.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:56.694 [pool-368-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:57.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
18:56:57.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:72 which is executed by 104 tests
-1943478097
18:56:57.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
18:56:57.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3068 which is executed by 108 tests
1033054629
18:56:57.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:57.673 [pool-372-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:56:59.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
18:56:59.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3067 which is executed by 108 tests
1033054629
18:56:59.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:56:59.398 [pool-376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:57:00.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:57:00.849 [pool-380-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (97 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

18:57:02.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
18:57:02.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 111 tests
1648821820
18:57:02.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
18:57:02.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 111 tests
1648821820
18:57:02.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:57:18.246 [pool-384-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15745 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:57:18.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
18:57:18.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 112 tests
1648821820
18:57:18.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
18:57:18.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 112 tests
1648821820
18:57:19.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:57:34.723 [pool-388-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15589 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:57:35.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
18:57:35.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 112 tests
1648821820
18:57:35.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:57:51.236 [pool-392-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15816 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:57:51.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
18:57:51.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 112 tests
1648821820
18:57:51.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:58:07.735 [pool-396-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15772 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:58:08.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
18:58:08.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 112 tests
1648821820
18:58:08.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:58:24.097 [pool-400-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15675 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:58:24.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
18:58:24.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 112 tests
1648821820
18:58:24.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:58:40.309 [pool-404-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15528 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:58:40.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:58:56.380 [pool-408-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15572 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:58:56.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
18:58:56.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 112 tests
1648821820
18:58:57.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:59:12.854 [pool-412-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15774 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:59:13.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
18:59:13.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 112 tests
1648821820
18:59:13.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:59:29.195 [pool-416-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15655 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:59:29.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
18:59:29.675 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 112 tests
1648821820
18:59:29.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
18:59:29.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 112 tests
1648821820
18:59:30.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
18:59:30.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 112 tests
1648821820
18:59:30.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
18:59:30.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 112 tests
1648821820
18:59:30.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:59:46.247 [pool-420-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15774 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
18:59:46.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
18:59:46.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 112 tests
1648821820
18:59:46.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:00:02.624 [pool-424-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15694 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:00:03.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
19:00:03.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 112 tests
1648821820
19:00:03.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:00:18.949 [pool-428-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15647 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:00:19.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:00:35.195 [pool-432-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15760 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:00:35.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
19:00:35.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 112 tests
1648821820
19:00:35.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:00:51.493 [pool-436-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15618 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:00:51.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
19:00:51.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 112 tests
1648821820
19:00:52.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:01:07.759 [pool-440-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15574 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:01:08.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
19:01:08.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 112 tests
1648821820
19:01:08.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:01:24.133 [pool-444-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15683 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:01:24.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:01:40.401 [pool-448-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15762 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:01:40.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
19:01:40.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 112 tests
1648821820
19:01:41.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:01:56.825 [pool-452-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15732 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:01:57.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
19:01:57.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 112 tests
1648821820
19:01:57.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:02:13.217 [pool-456-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15704 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:02:13.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
19:02:13.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 112 tests
1648821820
19:02:13.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
19:02:13.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 112 tests
1648821820
19:02:14.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
19:02:14.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 112 tests
1648821820
19:02:14.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
19:02:14.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 112 tests
1648821820
19:02:14.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:02:30.217 [pool-460-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15723 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:02:30.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
19:02:30.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 112 tests
1648821820
19:02:30.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
19:02:30.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 112 tests
1648821820
19:02:31.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
19:02:31.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 112 tests
1648821820
19:02:31.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:02:46.787 [pool-464-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15492 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:02:47.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
19:02:47.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 112 tests
1648821820
19:02:47.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:03:03.115 [pool-468-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15648 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:03:03.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:03:19.344 [pool-472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15744 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:03:19.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
19:03:19.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:239 which is executed by 116 tests
898417246
19:03:20.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
19:03:20.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.partitioning.BSPTree:198 which is executed by 116 tests
898417246
19:03:20.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
19:03:20.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3591 which is executed by 117 tests
1033054629
19:03:20.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:20.664 [pool-476-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:21.919 [pool-475-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:2066: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:03:21.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:22.030 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:23.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
19:03:23.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3588 which is executed by 117 tests
1033054629
19:03:23.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:23.744 [pool-482-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:25.035 [pool-481-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:2066: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:03:25.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:25.163 [pool-484-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:26.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
19:03:26.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3587 which is executed by 117 tests
1033054629
19:03:26.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
19:03:26.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3586 which is executed by 117 tests
1033054629
19:03:26.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
19:03:26.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3582 which is executed by 118 tests
1033054629
19:03:27.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:27.379 [pool-488-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:28.683 [pool-487-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:2066: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:03:28.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:28.820 [pool-490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (125 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:30.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
19:03:30.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3580 which is executed by 118 tests
1033054629
19:03:30.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:30.543 [pool-494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:31.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
19:03:31.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:103 which is executed by 125 tests
-1550426518
19:03:32.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
19:03:32.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3691 which is executed by 128 tests
1033054629
19:03:32.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
19:03:32.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2665 which is executed by 133 tests
1033054629
19:03:32.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:32.662 [pool-498-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (120 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:33.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:34.128 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (128 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:35.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
19:03:35.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2652 which is executed by 137 tests
1033054629
19:03:35.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:35.858 [pool-506-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:37.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:37.298 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (103 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:38.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
19:03:38.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2642 which is executed by 137 tests
1033054629
19:03:38.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:39.023 [pool-514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (124 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:40.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:40.509 [pool-518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (113 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:41.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
19:03:41.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2630 which is executed by 137 tests
1033054629
19:03:42.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:42.218 [pool-522-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (112 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:43.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:43.668 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:45.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
19:03:45.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2618 which is executed by 137 tests
1033054629
19:03:45.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:45.435 [pool-530-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:46.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:46.897 [pool-534-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (126 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:48.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
19:03:48.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2592 which is executed by 141 tests
1033054629
19:03:48.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:48.628 [pool-538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (128 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:49.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:50.059 [pool-542-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (114 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:51.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
19:03:51.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2588 which is executed by 142 tests
1033054629
19:03:51.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:51.778 [pool-546-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:53.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:53.223 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:54.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
19:03:54.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Vector2D:160 which is executed by 153 tests
1946224374
19:03:54.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
19:03:54.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.geometry.euclidean.twod.Vector2D:152 which is executed by 153 tests
1946224374
19:03:54.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
19:03:54.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2246 which is executed by 153 tests
1033054629
19:03:55.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:55.340 [pool-554-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:56.668 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
19:03:56.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2243 which is executed by 155 tests
1033054629
19:03:56.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:57.041 [pool-558-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (103 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:58.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:03:58.503 [pool-562-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:03:59.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
19:03:59.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2242 which is executed by 155 tests
1033054629
19:03:59.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
19:03:59.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1496 which is executed by 156 tests
68623
19:04:00.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
19:04:00.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1493 which is executed by 156 tests
68623
19:04:00.498 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:04:16.203 [pool-566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15697 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:04:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
19:04:16.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1492 which is executed by 156 tests
68623
19:04:17.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:04:32.924 [pool-570-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15718 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:04:33.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
19:04:33.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1490 which is executed by 156 tests
68623
19:04:33.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:04:49.600 [pool-574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15697 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:04:50.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:05:06.082 [pool-578-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15776 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:05:06.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
19:05:06.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 156 tests
68623
19:05:07.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:05:22.830 [pool-582-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15745 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:05:23.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:05:39.184 [pool-586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15649 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:05:39.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
19:05:39.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 156 tests
68623
19:05:40.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:05:55.858 [pool-590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15686 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:05:56.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:06:12.133 [pool-594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15576 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:06:12.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
19:06:12.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1471 which is executed by 156 tests
68623
19:06:13.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:06:28.849 [pool-598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15718 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:06:29.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:06:45.186 [pool-602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15622 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:06:45.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
19:06:45.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1468 which is executed by 156 tests
68623
19:06:46.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:07:01.772 [pool-606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15611 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:07:02.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
19:07:02.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1467 which is executed by 156 tests
68623
19:07:02.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:07:18.446 [pool-610-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15688 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

19:10:38.885 [pool-609-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
19:10:38.886 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
19:10:38.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
19:10:38.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1466 which is executed by 156 tests
68623
19:10:39.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
19:10:39.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1465 which is executed by 156 tests
68623
19:10:39.417 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:10:55.050 [pool-613-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15624 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:12:13.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
19:12:13.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1464 which is executed by 156 tests
68623
19:12:13.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
19:12:13.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1462 which is executed by 156 tests
68623
19:12:14.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:12:29.848 [pool-617-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15771 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:12:30.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:12:46.255 [pool-621-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15719 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:12:46.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
19:12:46.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1446 which is executed by 156 tests
68623
19:12:47.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:13:03.061 [pool-625-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15853 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:13:03.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
19:13:03.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1445 which is executed by 156 tests
68623
19:13:04.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:13:19.747 [pool-629-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15724 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:13:20.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
19:13:20.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1427 which is executed by 156 tests
68623
19:13:20.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:13:36.518 [pool-633-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15819 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:13:37.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
19:13:37.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1426 which is executed by 156 tests
68623
19:13:37.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
19:13:37.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:644 which is executed by 156 tests
68623
19:13:37.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
19:13:37.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 156 tests
1857420685
19:13:37.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
19:13:37.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 156 tests
1857420685
19:13:38.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:13:53.905 [pool-637-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15736 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:13:54.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:14:10.066 [pool-641-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15599 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:14:10.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
19:14:10.587 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 156 tests
1857420685
19:14:10.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
19:14:10.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 156 tests
1857420685
19:14:10.996 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:14:26.647 [pool-645-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15642 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:14:27.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
19:14:27.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 156 tests
1857420685
19:14:27.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:14:43.157 [pool-649-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15772 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:14:43.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
19:14:43.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 156 tests
1857420685
19:14:43.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:14:59.575 [pool-653-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15712 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:15:00.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:15:15.754 [pool-657-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15679 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:15:16.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
19:15:16.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 156 tests
1857420685
19:15:16.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:15:32.570 [pool-661-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15582 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:15:33.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
19:15:33.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 156 tests
1857420685
19:15:33.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:15:48.873 [pool-665-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15563 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:15:49.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
19:15:49.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 156 tests
1857420685
19:15:49.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:16:05.405 [pool-669-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15770 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:16:05.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
19:16:05.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 156 tests
1857420685
19:16:06.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:16:21.816 [pool-673-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15677 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:16:22.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
19:16:22.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 156 tests
1857420685
19:16:22.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:16:38.193 [pool-677-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15662 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:16:38.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:16:54.354 [pool-681-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15649 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:16:54.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
19:16:54.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 156 tests
1857420685
19:16:55.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:17:10.859 [pool-685-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15789 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:17:11.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
19:17:11.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 156 tests
1857420685
19:17:11.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:17:27.231 [pool-689-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15659 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:17:27.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
19:17:27.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 156 tests
1857420685
19:17:27.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:17:43.648 [pool-693-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15700 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:17:44.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:17:59.815 [pool-697-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15656 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

19:18:00.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
19:18:00.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 156 tests
1857420685
19:18:00.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:18:16.205 [pool-701-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15694 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:18:16.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
19:18:16.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 156 tests
1857420685
19:18:16.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:18:32.607 [pool-705-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15685 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:18:33.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
19:18:33.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 156 tests
1857420685
19:18:33.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:18:49.007 [pool-709-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15694 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:18:49.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:19:05.188 [pool-713-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15677 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:19:05.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
19:19:05.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 156 tests
1857420685
19:19:05.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:19:21.569 [pool-717-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15671 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:19:22.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
19:19:22.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 156 tests
1857420685
19:19:22.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:19:37.975 [pool-721-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15667 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:19:38.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:19:54.252 [pool-725-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15757 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:19:54.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
19:19:54.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 156 tests
1857420685
19:19:54.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:20:10.606 [pool-729-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15610 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:20:11.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
19:20:11.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 156 tests
1857420685
19:20:11.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:20:27.074 [pool-733-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15745 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:20:27.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
19:20:27.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 156 tests
1857420685
19:20:27.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
19:20:27.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 156 tests
1857420685
19:20:27.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
19:20:27.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 156 tests
1857420685
19:20:28.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
19:20:28.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 156 tests
1857420685
19:20:28.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
19:20:28.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 156 tests
1857420685
19:20:28.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
19:20:28.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 156 tests
1857420685
19:20:28.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
19:20:28.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 156 tests
1857420685
19:20:28.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:20:44.701 [pool-737-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15703 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:20:45.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
19:20:45.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 156 tests
1857420685
19:20:45.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
19:20:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 156 tests
1857420685
19:20:45.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
19:20:45.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2271 which is executed by 160 tests
1033054629
19:20:45.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:20:46.043 [pool-741-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:20:47.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
19:20:47.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2237 which is executed by 165 tests
1033054629
19:20:47.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:20:47.766 [pool-745-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (134 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:20:49.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
19:20:49.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2236 which is executed by 165 tests
1033054629
19:20:49.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:20:49.492 [pool-749-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (127 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:20:50.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
19:20:50.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 187 tests
1648821820
19:20:51.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
19:20:51.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 187 tests
1648821820
19:20:51.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:21:06.892 [pool-753-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15672 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:21:07.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
19:21:07.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 187 tests
1648821820
19:21:07.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:21:23.277 [pool-757-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15669 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:21:23.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
19:21:23.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 187 tests
1648821820
19:21:23.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:21:39.589 [pool-761-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15634 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:21:40.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
19:21:40.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 187 tests
1648821820
19:21:40.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:21:56.052 [pool-765-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15779 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:21:56.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
19:21:56.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 187 tests
1648821820
19:21:56.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:22:12.471 [pool-769-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15729 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:22:12.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
19:22:12.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 187 tests
1648821820
19:22:13.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
19:22:13.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:111 which is executed by 210 tests
-17789891
19:22:13.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
19:22:13.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:109 which is executed by 210 tests
-17789891
19:22:13.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:13.573 [pool-773-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:13.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
19:22:13.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:108 which is executed by 210 tests
-17789891
19:22:14.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:14.042 [pool-777-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:14.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
19:22:14.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:103 which is executed by 210 tests
-17789891
19:22:14.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:14.509 [pool-781-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:14.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
19:22:14.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:102 which is executed by 210 tests
-17789891
19:22:14.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:14.967 [pool-785-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:15.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
19:22:15.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:101 which is executed by 210 tests
-17789891
19:22:15.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:15.425 [pool-789-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:15.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
19:22:15.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:100 which is executed by 210 tests
-17789891
19:22:15.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:15.880 [pool-793-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:22:16.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
19:22:16.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:98 which is executed by 210 tests
-17789891
19:22:16.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
19:22:16.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:97 which is executed by 210 tests
-17789891
19:22:16.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
19:22:16.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:96 which is executed by 210 tests
-17789891
19:22:16.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
19:22:16.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:95 which is executed by 210 tests
-17789891
19:22:16.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
19:22:16.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:94 which is executed by 210 tests
-17789891
19:22:17.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
19:22:17.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:92 which is executed by 210 tests
-17789891
19:22:17.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
19:22:17.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:91 which is executed by 210 tests
-17789891
19:22:17.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
19:22:17.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:90 which is executed by 210 tests
-17789891
19:22:17.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
19:22:17.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:89 which is executed by 210 tests
-17789891
19:22:17.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
19:22:17.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:87 which is executed by 210 tests
-17789891
19:22:18.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
19:22:18.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.Well19937c:86 which is executed by 210 tests
-17789891
19:22:18.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
19:22:18.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2334 which is executed by 291 tests
1033054629
19:22:18.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
19:22:18.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2322 which is executed by 349 tests
1033054629
19:22:18.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:18.926 [pool-797-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:20.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
19:22:20.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2321 which is executed by 349 tests
1033054629
19:22:20.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:20.646 [pool-801-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:22.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
19:22:22.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2320 which is executed by 349 tests
1033054629
19:22:22.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:22.381 [pool-805-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:23.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
19:22:23.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2319 which is executed by 349 tests
1033054629
19:22:24.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
19:22:24.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:196 which is executed by 1464 tests
936233262
19:22:24.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
19:22:24.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195 which is executed by 1464 tests
936233262
19:22:24.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:22:40.216 [pool-809-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15788 ms)
<> Total tests run: 52
<> Ignored tests: 1
<> Failed tests: 2
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
19:22:40.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
19:22:40.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2330 which is executed by 402 tests
1033054629
19:22:40.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
19:22:40.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2280 which is executed by 406 tests
1033054629
19:22:41.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
19:22:41.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3359 which is executed by 413 tests
1033054629
19:22:41.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:41.610 [pool-815-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:42.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
19:22:42.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3503 which is executed by 420 tests
1033054629
19:22:43.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
19:22:43.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2267 which is executed by 426 tests
1033054629
19:22:43.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:43.477 [pool-819-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (127 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:44.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
19:22:44.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2266 which is executed by 426 tests
1033054629
19:22:45.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:45.216 [pool-823-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (131 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:46.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
19:22:46.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2265 which is executed by 426 tests
1033054629
19:22:46.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:46.977 [pool-827-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (129 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:48.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
19:22:48.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2264 which is executed by 426 tests
1033054629
19:22:48.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
19:22:48.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2328 which is executed by 433 tests
1033054629
19:22:48.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
19:22:48.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2309 which is executed by 433 tests
1033054629
19:22:49.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:49.325 [pool-831-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:50.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:50.761 [pool-835-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:52.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
19:22:52.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2308 which is executed by 433 tests
1033054629
19:22:52.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
19:22:52.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2303 which is executed by 435 tests
1033054629
19:22:52.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:52.652 [pool-839-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (117 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:53.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:54.092 [pool-843-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:55.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
19:22:55.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2299 which is executed by 435 tests
1033054629
19:22:55.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:55.868 [pool-847-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (133 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:57.200 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:22:57.317 [pool-851-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:22:58.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
19:22:58.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2298 which is executed by 435 tests
1033054629
19:22:58.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
19:22:58.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2295 which is executed by 435 tests
1033054629
19:22:59.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
19:22:59.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath$CodyWaite:3886 which is executed by 440 tests
1033054629
19:22:59.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
19:22:59.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath$CodyWaite:3880 which is executed by 440 tests
1033054629
19:22:59.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
19:22:59.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath$CodyWaite:3874 which is executed by 440 tests
1033054629
19:23:00.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
19:23:00.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2276 which is executed by 457 tests
1033054629
19:23:00.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
19:23:00.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:92 which is executed by 496 tests
936233262
19:23:00.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
19:23:00.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:91 which is executed by 496 tests
936233262
19:23:00.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
19:23:00.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:90 which is executed by 496 tests
936233262
19:23:00.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
19:23:00.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1850 which is executed by 517 tests
1033054629
19:23:01.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
19:23:01.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1848 which is executed by 517 tests
1033054629
19:23:01.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:01.520 [pool-855-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (120 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:02.850 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
19:23:02.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1847 which is executed by 517 tests
1033054629
19:23:03.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
19:23:03.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1846 which is executed by 517 tests
1033054629
19:23:03.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
19:23:03.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1844 which is executed by 517 tests
1033054629
19:23:03.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
19:23:03.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1843 which is executed by 517 tests
1033054629
19:23:03.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
19:23:03.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1827 which is executed by 518 tests
1033054629
19:23:04.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:04.286 [pool-859-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (137 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:05.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
19:23:05.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1826 which is executed by 518 tests
1033054629
19:23:05.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:05.984 [pool-863-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:07.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
19:23:07.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1825 which is executed by 518 tests
1033054629
19:23:07.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:07.657 [pool-867-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (150 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:08.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
19:23:08.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1824 which is executed by 518 tests
1033054629
19:23:09.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:09.371 [pool-871-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (123 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:10.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
19:23:10.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1822 which is executed by 518 tests
1033054629
19:23:10.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:11.114 [pool-875-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:12.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
19:23:12.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2274 which is executed by 525 tests
1033054629
19:23:12.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
19:23:12.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2270 which is executed by 525 tests
1033054629
19:23:12.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:13.073 [pool-879-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:14.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:14.529 [pool-883-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (128 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:15.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
19:23:15.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2254 which is executed by 525 tests
1033054629
19:23:16.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:16.306 [pool-887-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (105 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:17.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:17.754 [pool-891-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (112 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:19.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
19:23:19.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2249 which is executed by 529 tests
1033054629
19:23:19.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:19.461 [pool-895-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (119 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:20.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:20.890 [pool-899-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (131 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:22.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
19:23:22.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2241 which is executed by 530 tests
1033054629
19:23:22.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:22.632 [pool-903-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (132 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:23.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:24.070 [pool-907-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:25.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
19:23:25.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2235 which is executed by 530 tests
1033054629
19:23:25.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:25.756 [pool-911-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:27.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:27.201 [pool-915-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (119 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:28.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
19:23:28.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2234 which is executed by 530 tests
1033054629
19:23:28.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:28.914 [pool-919-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (124 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:30.087 [pool-918-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1210: error: variable xa might not have been initialized
            xa = -xa;
                  ^
FastMath.java:1212: error: variable xa might not have been initialized
        if (xa == 0.0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:23:30.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
19:23:30.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2231 which is executed by 530 tests
1033054629
19:23:30.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
19:23:30.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2229 which is executed by 530 tests
1033054629
19:23:30.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
19:23:30.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2228 which is executed by 530 tests
1033054629
19:23:30.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
19:23:30.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1832 which is executed by 543 tests
1033054629
19:23:31.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
19:23:31.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1830 which is executed by 543 tests
1033054629
19:23:31.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:31.511 [pool-921-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (115 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:32.794 [pool-920-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:985: error: variable result might not have been initialized
        return result;
               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:23:32.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
19:23:32.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1821 which is executed by 543 tests
1033054629
19:23:33.052 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:33.168 [pool-923-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:34.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:34.594 [pool-927-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (108 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:35.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
19:23:35.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1794 which is executed by 543 tests
1033054629
19:23:36.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:36.330 [pool-931-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (141 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:37.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
19:23:37.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1779 which is executed by 543 tests
1033054629
19:23:37.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:38.043 [pool-935-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (126 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:39.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
19:23:39.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1777 which is executed by 543 tests
1033054629
19:23:39.533 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:39.701 [pool-939-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (157 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:41.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
19:23:41.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1776 which is executed by 543 tests
1033054629
19:23:41.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:41.428 [pool-943-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (131 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:42.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
19:23:42.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1775 which is executed by 543 tests
1033054629
19:23:43.052 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:43.174 [pool-947-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (112 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:44.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
19:23:44.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1774 which is executed by 543 tests
1033054629
19:23:44.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:44.873 [pool-951-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:46.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
19:23:46.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1773 which is executed by 543 tests
1033054629
19:23:46.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:46.607 [pool-955-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:47.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
19:23:47.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1771 which is executed by 543 tests
1033054629
19:23:48.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:48.405 [pool-959-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (207 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:49.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
19:23:49.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1770 which is executed by 543 tests
1033054629
19:23:49.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:50.119 [pool-963-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (130 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:51.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
19:23:51.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1769 which is executed by 543 tests
1033054629
19:23:51.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
19:23:51.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1768 which is executed by 543 tests
1033054629
19:23:51.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
19:23:51.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1767 which is executed by 543 tests
1033054629
19:23:52.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
19:23:52.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1765 which is executed by 543 tests
1033054629
19:23:52.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
19:23:52.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1764 which is executed by 543 tests
1033054629
19:23:52.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
19:23:52.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1738 which is executed by 543 tests
1033054629
19:23:53.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:53.176 [pool-967-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (146 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:54.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
19:23:54.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1737 which is executed by 543 tests
1033054629
19:23:54.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:54.877 [pool-971-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (106 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:23:56.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
19:23:56.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1736 which is executed by 543 tests
1033054629
19:23:56.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
19:23:56.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1735 which is executed by 543 tests
1033054629
19:23:56.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
19:23:56.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1732 which is executed by 543 tests
1033054629
19:23:56.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
19:23:56.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1731 which is executed by 543 tests
1033054629
19:23:57.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
19:23:57.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1730 which is executed by 543 tests
1033054629
19:23:57.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
19:23:57.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1729 which is executed by 543 tests
1033054629
19:23:57.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
19:23:57.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1726 which is executed by 543 tests
1033054629
19:23:58.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
19:23:58.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1725 which is executed by 543 tests
1033054629
19:23:58.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
19:23:58.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1724 which is executed by 543 tests
1033054629
19:23:58.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
19:23:58.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1723 which is executed by 543 tests
1033054629
19:23:58.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
19:23:58.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1720 which is executed by 543 tests
1033054629
19:23:59.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
19:23:59.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1719 which is executed by 543 tests
1033054629
19:23:59.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
19:23:59.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1708 which is executed by 568 tests
1033054629
19:23:59.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
19:23:59.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1706 which is executed by 568 tests
1033054629
19:23:59.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:23:59.992 [pool-975-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (145 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:01.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
19:24:01.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1705 which is executed by 568 tests
1033054629
19:24:01.596 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:01.724 [pool-979-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (119 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:03.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
19:24:03.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1704 which is executed by 568 tests
1033054629
19:24:03.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:03.486 [pool-983-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (130 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:04.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
19:24:04.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1703 which is executed by 568 tests
1033054629
19:24:05.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:05.211 [pool-987-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (142 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:06.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
19:24:06.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1702 which is executed by 568 tests
1033054629
19:24:06.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
19:24:06.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1700 which is executed by 568 tests
1033054629
19:24:07.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
19:24:07.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1690 which is executed by 568 tests
1033054629
19:24:07.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
19:24:07.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1688 which is executed by 568 tests
1033054629
19:24:07.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:07.695 [pool-991-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (114 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:08.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
19:24:08.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1685 which is executed by 568 tests
1033054629
19:24:09.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:09.327 [pool-995-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (118 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:10.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
19:24:10.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1684 which is executed by 568 tests
1033054629
19:24:10.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:11.042 [pool-999-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (111 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:12.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
19:24:12.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1683 which is executed by 568 tests
1033054629
19:24:12.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:12.807 [pool-1003-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (134 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:14.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
19:24:14.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1682 which is executed by 568 tests
1033054629
19:24:14.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
19:24:14.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:1680 which is executed by 568 tests
1033054629
19:24:14.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
19:24:14.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:158 which is executed by 855 tests
-593135567
19:24:14.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:14.882 [pool-1007-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (39 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:15.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
19:24:15.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:157 which is executed by 855 tests
-593135567
19:24:15.319 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:15.346 [pool-1011-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:15.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
19:24:15.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3358 which is executed by 923 tests
1033054629
19:24:15.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:15.990 [pool-1015-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (135 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:17.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:17.488 [pool-1019-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (125 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:18.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
19:24:18.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3354 which is executed by 923 tests
1033054629
19:24:19.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:19.196 [pool-1023-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (107 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:20.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:20.678 [pool-1027-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (113 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:22.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
19:24:22.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3353 which is executed by 923 tests
1033054629
19:24:22.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:22.475 [pool-1031-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (140 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:23.764 [pool-1030-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1911: error: variable y might not have been initialized
        if ((x < 0) && (y != x)) {
                        ^
FastMath.java:1914: error: variable y might not have been initialized
        if (y == 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:24:23.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
19:24:23.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3349 which is executed by 925 tests
1033054629
19:24:24.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:24.148 [pool-1033-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (109 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:25.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:25.597 [pool-1037-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (114 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:26.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
19:24:26.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3345 which is executed by 925 tests
1033054629
19:24:27.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:27.308 [pool-1041-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (132 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:28.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.NullPointerException
    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:24:28.771 [pool-1045-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (131 ms)
<> Total tests run: 26
<> Ignored tests: 0
<> Failed tests: 1
~ testTooThinBox(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(BSPTree.java:301)
    at org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(BSPTree.java:159)
    at org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(AbstractRegion.java:171)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(PolygonsSet.java:112)
    at org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testTooThinBox(PolygonsSetTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

19:24:30.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
19:24:30.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:182 which is executed by 1231 tests
-593135567
19:24:30.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
19:24:30.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:181 which is executed by 1231 tests
-593135567
19:24:30.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:30.508 [pool-1049-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:30.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
19:24:30.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:172 which is executed by 1339 tests
-593135567
19:24:30.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
19:24:30.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:171 which is executed by 1339 tests
-593135567
19:24:31.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:31.160 [pool-1053-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:31.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
19:24:31.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:170 which is executed by 1339 tests
-593135567
19:24:31.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:31.645 [pool-1057-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:31.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
19:24:31.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:166 which is executed by 1339 tests
-593135567
19:24:32.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:32.110 [pool-1061-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:32.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
19:24:32.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:165 which is executed by 1339 tests
-593135567
19:24:32.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
19:24:32.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:164 which is executed by 1339 tests
-593135567
19:24:32.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:32.758 [pool-1065-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:32.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
19:24:32.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:163 which is executed by 1339 tests
-593135567
19:24:33.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:33.215 [pool-1069-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:33.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:33.477 [pool-1073-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:33.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
19:24:33.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:161 which is executed by 1339 tests
-593135567
19:24:33.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:33.930 [pool-1077-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:34.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
19:24:34.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.AbstractWell:156 which is executed by 1339 tests
-593135567
19:24:34.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:34.384 [pool-1081-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:34.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
19:24:34.644 [pool-1085-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationOrder(org.apache.commons.math3.ml.neuralnet.NetworkTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ml.neuralnet.NetworkTest.testIterationOrder(NetworkTest.java:133)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

19:24:34.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
19:24:34.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:385 which is executed by 2274 tests
1033054629
19:24:35.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
19:24:35.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3435 which is executed by 2324 tests
1033054629
19:24:35.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
19:24:35.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3031 which is executed by 2642 tests
1033054629
19:24:35.680 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
19:24:36.143 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 827
19:24:36.143 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 5473
19:24:36.144 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 275
19:24:36.144 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
19:24:36.145 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 2252189ms
19:24:36.145 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
3882.04user 61.42system 37:35.28elapsed 174%CPU (0avgtext+0avgdata 2222196maxresident)k
39176inputs+11744outputs (3major+1013648minor)pagefaults 0swaps


Node: granduc-3.luxembourg.grid5000.fr



Date: Sun Dec 30 19:24:36 EST 2018

