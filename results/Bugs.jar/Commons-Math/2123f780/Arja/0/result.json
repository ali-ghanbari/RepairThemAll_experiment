{
  "repair_end": "2018-12-29 11:43:11.400423", 
  "repair_begin": "2018-12-29 11:14:10.664971", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_255/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:26:30.582999021 -0500\n@@ -149,7 +149,9 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 319, 
          "faulty": "return isNaN;", 
          "type": "Replace", 
          "seed": "return isNaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_53/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:23:31.874398311 -0500\n@@ -149,7 +149,9 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_1034/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:37:52.496997367 -0500\n@@ -149,8 +149,10 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Delete", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_1326/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:42:10.461551339 -0500\n@@ -149,7 +149,10 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n@@ -994,7 +997,10 @@\n      * @since 1.2\n      */\n     protected Complex createComplex(double realPart, double imaginaryPart) {\n-        return new Complex(realPart, imaginaryPart);\n+        if (isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn new Complex(realPart, imaginaryPart);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 997, 
          "faulty": "return new Complex(realPart,imaginaryPart);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_664/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:32:25.184212713 -0500\n@@ -149,9 +149,11 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n         return createComplex(real + rhs.getReal(),\n-            imaginary + rhs.getImaginary());\n+\t\t\t\timaginary + rhs.getImaginary());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "Replace", 
          "seed": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 319, 
          "faulty": "return isNaN;", 
          "type": "Replace", 
          "seed": "return isNaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_43/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:23:23.470373412 -0500\n@@ -149,7 +149,10 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_544/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:30:40.207883230 -0500\n@@ -150,7 +150,10 @@\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_236/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:26:14.442934063 -0500\n@@ -149,8 +149,14 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_406/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:28:40.887483730 -0500\n@@ -149,8 +149,13 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_272/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:26:44.551054226 -0500\n@@ -149,8 +149,13 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+        if (isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_375/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:28:14.375389998 -0500\n@@ -150,7 +150,11 @@\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+\t\tMathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "MathUtils.checkNotNull(rhs);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_286/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:26:55.907098452 -0500\n@@ -149,8 +149,14 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n-        return createComplex(real + rhs.getReal(),\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n+        if (isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n+\t\treturn createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "InsertBefore", 
          "seed": "if (isNaN) {\n  return NaN;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_864/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:35:22.220666809 -0500\n@@ -149,9 +149,12 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n         return createComplex(real + rhs.getReal(),\n-            imaginary + rhs.getImaginary());\n+\t\t\t\timaginary + rhs.getImaginary());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "Replace", 
          "seed": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_563/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:30:56.787936401 -0500\n@@ -149,9 +149,11 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\treturn NaN;\n+\t\t}\n         return createComplex(real + rhs.getReal(),\n-            imaginary + rhs.getImaginary());\n+\t\t\t\timaginary + rhs.getImaginary());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "Replace", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 153, 
          "faulty": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());", 
          "type": "Replace", 
          "seed": "return createComplex(real + rhs.getReal(),imaginary + rhs.getImaginary());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:13:52.230427000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/patches_nzc2/Patch_511/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2123f780/src/main/java/org/apache/commons/math/complex/Complex.java\t2018-12-29 05:30:11.647790457 -0500\n@@ -149,7 +149,10 @@\n      */\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n-        MathUtils.checkNotNull(rhs);\n+        if (isNaN || rhs.isNaN) {\n+\t\t\t\treturn NaN;\n+\t\t\t}\n+\t\tMathUtils.checkNotNull(rhs);\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 152, 
          "faulty": "MathUtils.checkNotNull(rhs);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN || rhs.isNaN) {\n  return NaN;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/complex/Complex.java", 
          "line": 319, 
          "faulty": "return isNaN;", 
          "type": "Replace", 
          "seed": "return isNaN;"
        }
      ]
    }
  ]
}